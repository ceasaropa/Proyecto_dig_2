

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Mar 12 14:54:18 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F877A Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0014                     	;# 
   101  0015                     	;# 
   102  0015                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  0019                     	;# 
   107  001A                     	;# 
   108  001B                     	;# 
   109  001B                     	;# 
   110  001C                     	;# 
   111  001D                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  0087                     	;# 
   118  0088                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  0006                     	;# 
   206  0007                     	;# 
   207  0008                     	;# 
   208  0009                     	;# 
   209  000A                     	;# 
   210  000B                     	;# 
   211  000C                     	;# 
   212  000D                     	;# 
   213  000E                     	;# 
   214  000E                     	;# 
   215  000F                     	;# 
   216  0010                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0014                     	;# 
   221  0015                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001D                     	;# 
   232  001E                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  0087                     	;# 
   238  0088                     	;# 
   239  0089                     	;# 
   240  008C                     	;# 
   241  008D                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0094                     	;# 
   247  0098                     	;# 
   248  0099                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  009F                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  018C                     	;# 
   258  018D                     	;# 
   259                           
   260                           	psect	strings
   261  1800                     __pstrings:
   262  1800                     stringtab:
   263  1800                     __stringtab:
   264  1800                     stringcode:	
   265                           ;	String table - string pointers are 1 byte each
   266                           
   267  1800                     stringdir:
   268  1800  3018               	movlw	high stringdir
   269  1801  008A               	movwf	10
   270  1802  0804               	movf	4,w
   271  1803  0A84               	incf	4,f
   272  1804  0782               	addwf	2,f
   273  1805                     __stringbase:
   274  1805  3400               	retlw	0
   275  1806                     __end_of__stringtab:
   276  1806                     __powers_:
   277  1806  3400               	retlw	0
   278  1807  3400               	retlw	0
   279  1808  3480               	retlw	128
   280  1809  343F               	retlw	63
   281  180A  3400               	retlw	0
   282  180B  3400               	retlw	0
   283  180C  3420               	retlw	32
   284  180D  3441               	retlw	65
   285  180E  3400               	retlw	0
   286  180F  3400               	retlw	0
   287  1810  34C8               	retlw	200
   288  1811  3442               	retlw	66
   289  1812  3400               	retlw	0
   290  1813  3400               	retlw	0
   291  1814  347A               	retlw	122
   292  1815  3444               	retlw	68
   293  1816  3400               	retlw	0
   294  1817  3440               	retlw	64
   295  1818  341C               	retlw	28
   296  1819  3446               	retlw	70
   297  181A  3400               	retlw	0
   298  181B  3450               	retlw	80
   299  181C  34C3               	retlw	195
   300  181D  3447               	retlw	71
   301  181E  3400               	retlw	0
   302  181F  3424               	retlw	36
   303  1820  3474               	retlw	116
   304  1821  3449               	retlw	73
   305  1822  3480               	retlw	128
   306  1823  3496               	retlw	150
   307  1824  3418               	retlw	24
   308  1825  344B               	retlw	75
   309  1826  3420               	retlw	32
   310  1827  34BC               	retlw	188
   311  1828  34BE               	retlw	190
   312  1829  344C               	retlw	76
   313  182A  3428               	retlw	40
   314  182B  346B               	retlw	107
   315  182C  346E               	retlw	110
   316  182D  344E               	retlw	78
   317  182E  34F9               	retlw	249
   318  182F  3402               	retlw	2
   319  1830  3415               	retlw	21
   320  1831  3450               	retlw	80
   321  1832  34EC               	retlw	236
   322  1833  3478               	retlw	120
   323  1834  34AD               	retlw	173
   324  1835  3460               	retlw	96
   325  1836  34CA               	retlw	202
   326  1837  34F2               	retlw	242
   327  1838  3449               	retlw	73
   328  1839  3471               	retlw	113
   329  183A                     __end_of__powers_:
   330  183A                     __npowers_:
   331  183A  3400               	retlw	0
   332  183B  3400               	retlw	0
   333  183C  3480               	retlw	128
   334  183D  343F               	retlw	63
   335  183E  34CD               	retlw	205
   336  183F  34CC               	retlw	204
   337  1840  34CC               	retlw	204
   338  1841  343D               	retlw	61
   339  1842  340A               	retlw	10
   340  1843  34D7               	retlw	215
   341  1844  3423               	retlw	35
   342  1845  343C               	retlw	60
   343  1846  346F               	retlw	111
   344  1847  3412               	retlw	18
   345  1848  3483               	retlw	131
   346  1849  343A               	retlw	58
   347  184A  3417               	retlw	23
   348  184B  34B7               	retlw	183
   349  184C  34D1               	retlw	209
   350  184D  3438               	retlw	56
   351  184E  34AC               	retlw	172
   352  184F  34C5               	retlw	197
   353  1850  3427               	retlw	39
   354  1851  3437               	retlw	55
   355  1852  34BD               	retlw	189
   356  1853  3437               	retlw	55
   357  1854  3486               	retlw	134
   358  1855  3435               	retlw	53
   359  1856  3495               	retlw	149
   360  1857  34BF               	retlw	191
   361  1858  34D6               	retlw	214
   362  1859  3433               	retlw	51
   363  185A  3477               	retlw	119
   364  185B  34CC               	retlw	204
   365  185C  342B               	retlw	43
   366  185D  3432               	retlw	50
   367  185E  345F               	retlw	95
   368  185F  3470               	retlw	112
   369  1860  3489               	retlw	137
   370  1861  3430               	retlw	48
   371  1862  34FF               	retlw	255
   372  1863  34E6               	retlw	230
   373  1864  34DB               	retlw	219
   374  1865  342E               	retlw	46
   375  1866  3408               	retlw	8
   376  1867  34E5               	retlw	229
   377  1868  343C               	retlw	60
   378  1869  341E               	retlw	30
   379  186A  3460               	retlw	96
   380  186B  3442               	retlw	66
   381  186C  34A2               	retlw	162
   382  186D  340D               	retlw	13
   383  186E                     __end_of__npowers_:
   384  186E                     _dpowers:
   385  186E  3401               	retlw	1
   386  186F  3400               	retlw	0
   387  1870  3400               	retlw	0
   388  1871  3400               	retlw	0
   389  1872  340A               	retlw	10
   390  1873  3400               	retlw	0
   391  1874  3400               	retlw	0
   392  1875  3400               	retlw	0
   393  1876  3464               	retlw	100
   394  1877  3400               	retlw	0
   395  1878  3400               	retlw	0
   396  1879  3400               	retlw	0
   397  187A  34E8               	retlw	232
   398  187B  3403               	retlw	3
   399  187C  3400               	retlw	0
   400  187D  3400               	retlw	0
   401  187E  3410               	retlw	16
   402  187F  3427               	retlw	39
   403  1880  3400               	retlw	0
   404  1881  3400               	retlw	0
   405  1882  34A0               	retlw	160
   406  1883  3486               	retlw	134
   407  1884  3401               	retlw	1
   408  1885  3400               	retlw	0
   409  1886  3440               	retlw	64
   410  1887  3442               	retlw	66
   411  1888  340F               	retlw	15
   412  1889  3400               	retlw	0
   413  188A  3480               	retlw	128
   414  188B  3496               	retlw	150
   415  188C  3498               	retlw	152
   416  188D  3400               	retlw	0
   417  188E  3400               	retlw	0
   418  188F  34E1               	retlw	225
   419  1890  34F5               	retlw	245
   420  1891  3405               	retlw	5
   421  1892  3400               	retlw	0
   422  1893  34CA               	retlw	202
   423  1894  349A               	retlw	154
   424  1895  343B               	retlw	59
   425  1896                     __end_of_dpowers:
   426  001E                     _ADRESH	set	30
   427  001F                     _ADCON0bits	set	31
   428  001F                     _ADCON0	set	31
   429  00FA                     _GO	set	250
   430  0028                     _RA0	set	40
   431  0043                     _RD3	set	67
   432  0042                     _RD2	set	66
   433  0047                     _RD7	set	71
   434  0046                     _RD6	set	70
   435  0045                     _RD5	set	69
   436  0044                     _RD4	set	68
   437  009E                     _ADRESL	set	158
   438  009F                     _ADCON1	set	159
   439  0081                     _OPTION_REG	set	129
   440  0088                     _TRISD	set	136
   441  1896                     STR_2:
   442  1896  3470               	retlw	112	;'p'
   443  1897  3465               	retlw	101	;'e'
   444  1898  3473               	retlw	115	;'s'
   445  1899  346F               	retlw	111	;'o'
   446  189A  343A               	retlw	58	;':'
   447  189B  3420               	retlw	32	;' '
   448  189C  3425               	retlw	37	;'%'
   449  189D  3430               	retlw	48	;'0'
   450  189E  3434               	retlw	52	;'4'
   451  189F  342E               	retlw	46	;'.'
   452  18A0  3432               	retlw	50	;'2'
   453  18A1  3466               	retlw	102	;'f'
   454  18A2  3400               	retlw	0
   455  18A3                     STR_1:
   456  18A3  3468               	retlw	104	;'h'
   457  18A4  3475               	retlw	117	;'u'
   458  18A5  3465               	retlw	101	;'e'
   459  18A6  3476               	retlw	118	;'v'
   460  18A7  346F               	retlw	111	;'o'
   461  18A8  3473               	retlw	115	;'s'
   462  18A9  343A               	retlw	58	;':'
   463  18AA  3420               	retlw	32	;' '
   464  18AB  3425               	retlw	37	;'%'
   465  18AC  3430               	retlw	48	;'0'
   466  18AD  3432               	retlw	50	;'2'
   467  18AE  3469               	retlw	105	;'i'
   468  18AF  3400               	retlw	0
   469                           
   470                           	psect	cinit
   471  07FC                     start_initialization:	
   472                           ; #config settings
   473                           
   474  07FC                     __initialization:
   475  07FC                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478  07FC                     __end_of__initialization:
   479  07FC  0183               	clrf	3
   480  07FD  120A  118A  2851   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	cstackBANK1
   483  00A0                     __pcstackBANK1:
   484  00A0                     ?_sprintf:
   485  00A0                     sprintf@f:	
   486                           ; 2 bytes @ 0x0
   487                           
   488                           
   489                           ; 1 bytes @ 0x0
   490  00A0                     	ds	5
   491  00A5                     ??_sprintf:
   492                           
   493                           ; 1 bytes @ 0x5
   494  00A5                     	ds	5
   495  00AA                     _sprintf$844:
   496                           
   497                           ; 4 bytes @ 0xA
   498  00AA                     	ds	4
   499  00AE                     sprintf@ap:
   500                           
   501                           ; 1 bytes @ 0xE
   502  00AE                     	ds	1
   503  00AF                     sprintf@tmpval:
   504                           
   505                           ; 4 bytes @ 0xF
   506  00AF                     	ds	4
   507  00B3                     sprintf@val:
   508                           
   509                           ; 4 bytes @ 0x13
   510  00B3                     	ds	4
   511  00B7                     sprintf@eexp:
   512                           
   513                           ; 2 bytes @ 0x17
   514  00B7                     	ds	2
   515  00B9                     sprintf@flag:
   516                           
   517                           ; 2 bytes @ 0x19
   518  00B9                     	ds	2
   519  00BB                     sprintf@width:
   520                           
   521                           ; 2 bytes @ 0x1B
   522  00BB                     	ds	2
   523  00BD                     sprintf@fval:
   524                           
   525                           ; 4 bytes @ 0x1D
   526  00BD                     	ds	4
   527  00C1                     sprintf@prec:
   528                           
   529                           ; 2 bytes @ 0x21
   530  00C1                     	ds	2
   531  00C3                     sprintf@sp:
   532                           
   533                           ; 1 bytes @ 0x23
   534  00C3                     	ds	1
   535  00C4                     sprintf@c:
   536                           
   537                           ; 1 bytes @ 0x24
   538  00C4                     	ds	1
   539  00C5                     ??_main:
   540                           
   541                           ; 1 bytes @ 0x25
   542  00C5                     	ds	3
   543  00C8                     main@buffer1:
   544                           
   545                           ; 16 bytes @ 0x28
   546  00C8                     	ds	16
   547  00D8                     main@num_huevos:
   548                           
   549                           ; 2 bytes @ 0x38
   550  00D8                     	ds	2
   551  00DA                     main@peso:
   552                           
   553                           ; 4 bytes @ 0x3A
   554  00DA                     	ds	4
   555  00DE                     main@adc:
   556                           
   557                           ; 2 bytes @ 0x3E
   558  00DE                     	ds	2
   559                           
   560                           	psect	cstackCOMMON
   561  0070                     __pcstackCOMMON:
   562  0070                     ?_isdigit:
   563  0070                     ?___fleq:	
   564                           ; 1 bit 
   565                           
   566  0070                     ?___flge:	
   567                           ; 1 bit 
   568                           
   569  0070                     ??_isdigit:	
   570                           ; 1 bit 
   571                           
   572  0070                     ?_Lcd_Port:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ??_Lcd_Port:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_Lcd_Cmd:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_Lcd_Init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_Lcd_Write_Char:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_Lcd_Write_String:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?__Umul8_16:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_main:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ?___wmul:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ?___awmod:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ?___lwmod:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0070                     ?__tdiv_to_l_:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     ?__div_to_l_:	
   609                           ; 4 bytes @ 0x0
   610                           
   611  0070                     ?___lldiv:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0070                     ?___flneg:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0070                     ?___xxtofl:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0070                     Lcd_Port@a:	
   621                           ; 4 bytes @ 0x0
   622                           
   623  0070                     __Umul8_16@multiplicand:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     _isdigit$654:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ___wmul@multiplier:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ___awmod@divisor:	
   633                           ; 2 bytes @ 0x0
   634                           
   635  0070                     ___lwmod@divisor:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0070                     ___lldiv@divisor:	
   639                           ; 2 bytes @ 0x0
   640                           
   641  0070                     __div_to_l_@f1:	
   642                           ; 4 bytes @ 0x0
   643                           
   644  0070                     ___fleq@ff1:	
   645                           ; 4 bytes @ 0x0
   646                           
   647  0070                     ___flge@ff1:	
   648                           ; 4 bytes @ 0x0
   649                           
   650  0070                     ___flneg@f1:	
   651                           ; 4 bytes @ 0x0
   652                           
   653  0070                     __tdiv_to_l_@f1:	
   654                           ; 4 bytes @ 0x0
   655                           
   656  0070                     ___xxtofl@val:	
   657                           ; 4 bytes @ 0x0
   658                           
   659                           
   660                           ; 4 bytes @ 0x0
   661  0070                     	ds	1
   662  0071                     ??_Lcd_Cmd:
   663  0071                     ??_Lcd_Write_Char:	
   664                           ; 1 bytes @ 0x1
   665                           
   666  0071                     isdigit@c:	
   667                           ; 1 bytes @ 0x1
   668                           
   669                           
   670                           ; 1 bytes @ 0x1
   671  0071                     	ds	1
   672  0072                     ??__Umul8_16:
   673  0072                     Lcd_Write_Char@temp:	
   674                           ; 1 bytes @ 0x2
   675                           
   676  0072                     ___wmul@multiplicand:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     ___awmod@dividend:	
   680                           ; 2 bytes @ 0x2
   681                           
   682  0072                     ___lwmod@dividend:	
   683                           ; 2 bytes @ 0x2
   684                           
   685                           
   686                           ; 2 bytes @ 0x2
   687  0072                     	ds	1
   688  0073                     Lcd_Cmd@a:
   689  0073                     Lcd_Write_Char@y:	
   690                           ; 1 bytes @ 0x3
   691                           
   692                           
   693                           ; 1 bytes @ 0x3
   694  0073                     	ds	1
   695  0074                     ?_Lcd_Set_Cursor:
   696  0074                     ??_Lcd_Init:	
   697                           ; 1 bytes @ 0x4
   698                           
   699  0074                     ??___wmul:	
   700                           ; 1 bytes @ 0x4
   701                           
   702  0074                     ??___awmod:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     ??___flneg:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     ??___lwmod:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     ??___xxtofl:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     Lcd_Set_Cursor@b:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     Lcd_Write_Char@a:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     ___wmul@product:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     __Umul8_16@product:	
   724                           ; 2 bytes @ 0x4
   725                           
   726  0074                     ___lldiv@dividend:	
   727                           ; 2 bytes @ 0x4
   728                           
   729  0074                     __div_to_l_@f2:	
   730                           ; 4 bytes @ 0x4
   731                           
   732  0074                     ___fleq@ff2:	
   733                           ; 4 bytes @ 0x4
   734                           
   735  0074                     ___flge@ff2:	
   736                           ; 4 bytes @ 0x4
   737                           
   738  0074                     __tdiv_to_l_@f2:	
   739                           ; 4 bytes @ 0x4
   740                           
   741                           
   742                           ; 4 bytes @ 0x4
   743  0074                     	ds	1
   744  0075                     ??_Lcd_Set_Cursor:
   745  0075                     ??_Lcd_Write_String:	
   746                           ; 1 bytes @ 0x5
   747                           
   748  0075                     ___awmod@counter:	
   749                           ; 1 bytes @ 0x5
   750                           
   751  0075                     ___lwmod@counter:	
   752                           ; 1 bytes @ 0x5
   753                           
   754                           
   755                           ; 1 bytes @ 0x5
   756  0075                     	ds	1
   757  0076                     ?___lwdiv:
   758  0076                     ___awmod@sign:	
   759                           ; 2 bytes @ 0x6
   760                           
   761  0076                     Lcd_Write_String@i:	
   762                           ; 1 bytes @ 0x6
   763                           
   764  0076                     ___lwdiv@divisor:	
   765                           ; 2 bytes @ 0x6
   766                           
   767  0076                     __Umul8_16@word_mpld:	
   768                           ; 2 bytes @ 0x6
   769                           
   770                           
   771                           ; 2 bytes @ 0x6
   772  0076                     	ds	1
   773  0077                     ?___awdiv:
   774  0077                     Lcd_Set_Cursor@a:	
   775                           ; 2 bytes @ 0x7
   776                           
   777  0077                     ___awdiv@divisor:	
   778                           ; 1 bytes @ 0x7
   779                           
   780                           
   781                           ; 2 bytes @ 0x7
   782  0077                     	ds	1
   783  0078                     ??__tdiv_to_l_:
   784  0078                     ??__div_to_l_:	
   785                           ; 1 bytes @ 0x8
   786                           
   787  0078                     ??___lldiv:	
   788                           ; 1 bytes @ 0x8
   789                           
   790  0078                     ??___fleq:	
   791                           ; 1 bytes @ 0x8
   792                           
   793  0078                     ??___flge:	
   794                           ; 1 bytes @ 0x8
   795                           
   796  0078                     Lcd_Set_Cursor@z:	
   797                           ; 1 bytes @ 0x8
   798                           
   799  0078                     Lcd_Write_String@a:	
   800                           ; 1 bytes @ 0x8
   801                           
   802  0078                     __Umul8_16@multiplier:	
   803                           ; 1 bytes @ 0x8
   804                           
   805  0078                     ___xxtofl@sign:	
   806                           ; 1 bytes @ 0x8
   807                           
   808  0078                     ___lwdiv@dividend:	
   809                           ; 1 bytes @ 0x8
   810                           
   811                           
   812                           ; 2 bytes @ 0x8
   813  0078                     	ds	1
   814  0079                     Lcd_Set_Cursor@y:
   815  0079                     ___xxtofl@exp:	
   816                           ; 1 bytes @ 0x9
   817                           
   818  0079                     ___awdiv@dividend:	
   819                           ; 1 bytes @ 0x9
   820                           
   821  0079                     ___lldiv@quotient:	
   822                           ; 2 bytes @ 0x9
   823                           
   824                           
   825                           ; 4 bytes @ 0x9
   826  0079                     	ds	1
   827  007A                     ??___lwdiv:
   828  007A                     Lcd_Set_Cursor@temp:	
   829                           ; 1 bytes @ 0xA
   830                           
   831  007A                     ___xxtofl@arg:	
   832                           ; 1 bytes @ 0xA
   833                           
   834                           
   835                           ; 4 bytes @ 0xA
   836  007A                     	ds	1
   837  007B                     ??___awdiv:
   838  007B                     ___lwdiv@quotient:	
   839                           ; 1 bytes @ 0xB
   840                           
   841                           
   842                           ; 2 bytes @ 0xB
   843  007B                     	ds	2
   844  007D                     ___lldiv@counter:
   845  007D                     ___lwdiv@counter:	
   846                           ; 1 bytes @ 0xD
   847                           
   848                           
   849                           ; 1 bytes @ 0xD
   850  007D                     	ds	1
   851  007E                     ??___flsub:
   852                           
   853                           	psect	cstackBANK0
   854  0020                     __pcstackBANK0:	
   855                           ; 1 bytes @ 0xE
   856                           
   857  0020                     ?___llmod:
   858  0020                     ___awdiv@counter:	
   859                           ; 4 bytes @ 0x0
   860                           
   861  0020                     __div_to_l_@quot:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0020                     __tdiv_to_l_@quot:	
   865                           ; 4 bytes @ 0x0
   866                           
   867  0020                     ___llmod@divisor:	
   868                           ; 4 bytes @ 0x0
   869                           
   870                           
   871                           ; 4 bytes @ 0x0
   872  0020                     	ds	1
   873  0021                     ___awdiv@sign:
   874                           
   875                           ; 1 bytes @ 0x1
   876  0021                     	ds	1
   877  0022                     ___awdiv@quotient:
   878                           
   879                           ; 2 bytes @ 0x2
   880  0022                     	ds	2
   881  0024                     ?___flmul:
   882  0024                     __div_to_l_@cntr:	
   883                           ; 4 bytes @ 0x4
   884                           
   885  0024                     __tdiv_to_l_@cntr:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0024                     ___llmod@dividend:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0024                     ___flmul@b:	
   892                           ; 4 bytes @ 0x4
   893                           
   894                           
   895                           ; 4 bytes @ 0x4
   896  0024                     	ds	1
   897  0025                     __div_to_l_@exp1:
   898  0025                     __tdiv_to_l_@exp1:	
   899                           ; 1 bytes @ 0x5
   900                           
   901                           
   902                           ; 1 bytes @ 0x5
   903  0025                     	ds	3
   904  0028                     ??___llmod:
   905  0028                     ___flmul@a:	
   906                           ; 1 bytes @ 0x8
   907                           
   908                           
   909                           ; 4 bytes @ 0x8
   910  0028                     	ds	1
   911  0029                     ___llmod@counter:
   912                           
   913                           ; 1 bytes @ 0x9
   914  0029                     	ds	3
   915  002C                     ??___flmul:
   916                           
   917                           ; 1 bytes @ 0xC
   918  002C                     	ds	5
   919  0031                     ___flmul@sign:
   920                           
   921                           ; 1 bytes @ 0x11
   922  0031                     	ds	1
   923  0032                     ___flmul@grs:
   924                           
   925                           ; 4 bytes @ 0x12
   926  0032                     	ds	4
   927  0036                     ___flmul@aexp:
   928                           
   929                           ; 1 bytes @ 0x16
   930  0036                     	ds	1
   931  0037                     ___flmul@bexp:
   932                           
   933                           ; 1 bytes @ 0x17
   934  0037                     	ds	1
   935  0038                     ___flmul@prod:
   936                           
   937                           ; 4 bytes @ 0x18
   938  0038                     	ds	4
   939  003C                     ___flmul@temp:
   940                           
   941                           ; 2 bytes @ 0x1C
   942  003C                     	ds	2
   943  003E                     ?_fround:
   944  003E                     ?_scale:	
   945                           ; 4 bytes @ 0x1E
   946                           
   947  003E                     ?___fldiv:	
   948                           ; 4 bytes @ 0x1E
   949                           
   950  003E                     ___fldiv@a:	
   951                           ; 4 bytes @ 0x1E
   952                           
   953                           
   954                           ; 4 bytes @ 0x1E
   955  003E                     	ds	4
   956  0042                     ??_fround:
   957  0042                     ??_scale:	
   958                           ; 1 bytes @ 0x22
   959                           
   960  0042                     ___fldiv@b:	
   961                           ; 1 bytes @ 0x22
   962                           
   963                           
   964                           ; 4 bytes @ 0x22
   965  0042                     	ds	4
   966  0046                     ??___fldiv:
   967                           
   968                           ; 1 bytes @ 0x26
   969  0046                     	ds	3
   970  0049                     _fround$842:
   971                           
   972                           ; 4 bytes @ 0x29
   973  0049                     	ds	2
   974  004B                     ___fldiv@rem:
   975                           
   976                           ; 4 bytes @ 0x2B
   977  004B                     	ds	1
   978  004C                     _scale$843:
   979                           
   980                           ; 4 bytes @ 0x2C
   981  004C                     	ds	1
   982  004D                     _fround$841:
   983                           
   984                           ; 4 bytes @ 0x2D
   985  004D                     	ds	2
   986  004F                     ___fldiv@sign:
   987                           
   988                           ; 1 bytes @ 0x2F
   989  004F                     	ds	1
   990  0050                     scale@scl:
   991  0050                     ___fldiv@new_exp:	
   992                           ; 1 bytes @ 0x30
   993                           
   994                           
   995                           ; 2 bytes @ 0x30
   996  0050                     	ds	1
   997  0051                     fround@prec:
   998                           
   999                           ; 1 bytes @ 0x31
  1000  0051                     	ds	1
  1001  0052                     ?___fladd:
  1002  0052                     ___fladd@b:	
  1003                           ; 4 bytes @ 0x32
  1004                           
  1005  0052                     ___fldiv@grs:	
  1006                           ; 4 bytes @ 0x32
  1007                           
  1008                           
  1009                           ; 4 bytes @ 0x32
  1010  0052                     	ds	4
  1011  0056                     ___fldiv@bexp:
  1012  0056                     ___fladd@a:	
  1013                           ; 1 bytes @ 0x36
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x36
  1017  0056                     	ds	1
  1018  0057                     ___fldiv@aexp:
  1019                           
  1020                           ; 1 bytes @ 0x37
  1021  0057                     	ds	1
  1022  0058                     ?___fltol:
  1023  0058                     ___fltol@f1:	
  1024                           ; 4 bytes @ 0x38
  1025                           
  1026                           
  1027                           ; 4 bytes @ 0x38
  1028  0058                     	ds	2
  1029  005A                     ??___fladd:
  1030                           
  1031                           ; 1 bytes @ 0x3A
  1032  005A                     	ds	2
  1033  005C                     ??___fltol:
  1034                           
  1035                           ; 1 bytes @ 0x3C
  1036  005C                     	ds	5
  1037  0061                     ___fltol@sign1:
  1038                           
  1039                           ; 1 bytes @ 0x41
  1040  0061                     	ds	1
  1041  0062                     ___fltol@exp1:
  1042  0062                     ___fladd@signs:	
  1043                           ; 1 bytes @ 0x42
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x42
  1047  0062                     	ds	1
  1048  0063                     ___fladd@aexp:
  1049                           
  1050                           ; 1 bytes @ 0x43
  1051  0063                     	ds	1
  1052  0064                     ___fladd@bexp:
  1053                           
  1054                           ; 1 bytes @ 0x44
  1055  0064                     	ds	1
  1056  0065                     ___fladd@grs:
  1057                           
  1058                           ; 1 bytes @ 0x45
  1059  0065                     	ds	1
  1060  0066                     ?___flsub:
  1061  0066                     ___flsub@a:	
  1062                           ; 4 bytes @ 0x46
  1063                           
  1064                           
  1065                           ; 4 bytes @ 0x46
  1066  0066                     	ds	4
  1067  006A                     ___flsub@b:
  1068                           
  1069                           ; 4 bytes @ 0x4A
  1070  006A                     	ds	4
  1071                           
  1072                           	psect	maintext
  1073  0051                     __pmaintext:	
  1074 ;;
  1075 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1076 ;;
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 14 in file "../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  buffer1        16   40[BANK1 ] unsigned char [16]
  1084 ;;  peso            4   58[BANK1 ] float 
  1085 ;;  adc             2   62[BANK1 ] int 
  1086 ;;  num_huevos      2   56[BANK1 ] int 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2   87[None  ] int 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : B00/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0      24       0       0
  1098 ;;      Temps:          0       0       3       0       0
  1099 ;;      Totals:         0       0      27       0       0
  1100 ;;Total ram usage:       27 bytes
  1101 ;; Hardware stack levels required when called: 4
  1102 ;; This function calls:
  1103 ;;		_Lcd_Init
  1104 ;;		_Lcd_Set_Cursor
  1105 ;;		_Lcd_Write_String
  1106 ;;		___fldiv
  1107 ;;		___flmul
  1108 ;;		___fltol
  1109 ;;		___xxtofl
  1110 ;;		_sprintf
  1111 ;; This function is called by:
  1112 ;;		Startup code after reset
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116  0051                     _main:	
  1117                           ;psect for function _main
  1118                           
  1119  0051                     l3798:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1122                           
  1123  0051                     l3800:
  1124  0051                     l3802:
  1125                           
  1126                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 18:     char buffer1[16]
      +                          ;;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 19:     TRISD = 0x00;
  1127  0051  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0052  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0053  0188               	clrf	8	;volatile
  1130                           
  1131                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 20:     OPTION_REG = 0b1
      +                          0000110;
  1132  0054  3086               	movlw	134
  1133  0055  0081               	movwf	1	;volatile
  1134                           
  1135                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 21:     ADCON1 = 0b10001
      +                          000;
  1136  0056  3088               	movlw	136
  1137  0057  009F               	movwf	31	;volatile
  1138                           
  1139                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 22:     ADCON0 = 0b01000
      +                          001;
  1140  0058  3041               	movlw	65
  1141  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1142  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1143  005B  009F               	movwf	31	;volatile
  1144  005C                     l3804:
  1145                           
  1146                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 23:     RA0 = 0;
  1147  005C  1005               	bcf	5,0	;volatile
  1148  005D                     l3806:
  1149  005D                     l3808:
  1150                           
  1151                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 25:     Lcd_Init();
  1152  005D  160A  158A  2347  120A  118A  	fcall	_Lcd_Init
  1153  0062                     l3810:
  1154                           
  1155                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 26:     _delay((unsigned
      +                           long)((100)*(4000000/4000.0)));
  1156  0062  3082               	movlw	130
  1157  0063  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0064  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0065  00C6               	movwf	(??_main^(0+128)+1)
  1160  0066  30DD               	movlw	221
  1161  0067  00C5               	movwf	??_main^(0+128)
  1162  0068                     u6477:
  1163  0068  0BC5               	decfsz	??_main^(0+128),f
  1164  0069  2868               	goto	u6477
  1165  006A  0BC6               	decfsz	(??_main^(0+128)+1),f
  1166  006B  2868               	goto	u6477
  1167  006C                     l3812:
  1168                           
  1169                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 28:         ADCON0bits.G
      +                          O = 1;
  1170  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1171  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1172  006E  151F               	bsf	31,2	;volatile
  1173  006F                     l89:	
  1174                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 29:         while(GO);
  1175                           
  1176  006F  191F               	btfsc	31,2	;volatile
  1177  0070  2872               	goto	u6461
  1178  0071  2873               	goto	u6460
  1179  0072                     u6461:
  1180  0072  286F               	goto	l89
  1181  0073                     u6460:
  1182  0073                     l3814:
  1183                           
  1184                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 30:         adc = ADRESH
      +                          ;
  1185  0073  081E               	movf	30,w	;volatile
  1186  0074  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0075  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0076  00C5               	movwf	??_main^(0+128)
  1189  0077  01C6               	clrf	(??_main^(0+128)+1)
  1190  0078  0845               	movf	??_main^(0+128),w
  1191  0079  00DE               	movwf	main@adc^(0+128)
  1192  007A  0846               	movf	(??_main+1)^(0+128),w
  1193  007B  00DF               	movwf	(main@adc+1)^(0+128)
  1194  007C                     l3816:
  1195                           
  1196                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 31:         adc = adc <<
      +                           8;
  1197  007C  085F               	movf	(main@adc+1)^(0+128),w
  1198  007D  00C6               	movwf	(??_main^(0+128)+1)
  1199  007E  085E               	movf	main@adc^(0+128),w
  1200  007F  00C5               	movwf	??_main^(0+128)
  1201  0080  0845               	movf	??_main^(0+128),w
  1202  0081  00C6               	movwf	(??_main^(0+128)+1)
  1203  0082  01C5               	clrf	??_main^(0+128)
  1204  0083  0845               	movf	??_main^(0+128),w
  1205  0084  00DE               	movwf	main@adc^(0+128)
  1206  0085  0846               	movf	(??_main+1)^(0+128),w
  1207  0086  00DF               	movwf	(main@adc+1)^(0+128)
  1208  0087                     l3818:
  1209                           
  1210                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 32:         adc = adc + 
      +                          ADRESL;
  1211  0087  081E               	movf	30,w	;volatile
  1212  0088  075E               	addwf	main@adc^(0+128),w
  1213  0089  00C5               	movwf	??_main^(0+128)
  1214  008A  085F               	movf	(main@adc+1)^(0+128),w
  1215  008B  1803               	skipnc
  1216  008C  0A5F               	incf	(main@adc+1)^(0+128),w
  1217  008D  00C6               	movwf	(??_main^(0+128)+1)
  1218  008E  0845               	movf	??_main^(0+128),w
  1219  008F  00DE               	movwf	main@adc^(0+128)
  1220  0090  0846               	movf	(??_main+1)^(0+128),w
  1221  0091  00DF               	movwf	(main@adc+1)^(0+128)
  1222  0092                     l3820:
  1223                           
  1224                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 33:         peso = adc*5
      +                          .0/1024.0;
  1225  0092  3044               	movlw	68
  1226  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0095  00C1               	movwf	___fldiv@a+3
  1229  0096  3080               	movlw	128
  1230  0097  00C0               	movwf	___fldiv@a+2
  1231  0098  3000               	movlw	0
  1232  0099  00BF               	movwf	___fldiv@a+1
  1233  009A  3000               	movlw	0
  1234  009B  00BE               	movwf	___fldiv@a
  1235  009C  3040               	movlw	64
  1236  009D  00A7               	movwf	___flmul@b+3
  1237  009E  30A0               	movlw	160
  1238  009F  00A6               	movwf	___flmul@b+2
  1239  00A0  3000               	movlw	0
  1240  00A1  00A5               	movwf	___flmul@b+1
  1241  00A2  3000               	movlw	0
  1242  00A3  00A4               	movwf	___flmul@b
  1243  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1244  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1245  00A6  085E               	movf	main@adc^(0+128),w
  1246  00A7  00F0               	movwf	___xxtofl@val
  1247  00A8  085F               	movf	(main@adc+1)^(0+128),w
  1248  00A9  00F1               	movwf	___xxtofl@val+1
  1249  00AA  3000               	movlw	0
  1250  00AB  1BF1               	btfsc	___xxtofl@val+1,7
  1251  00AC  30FF               	movlw	255
  1252  00AD  00F2               	movwf	___xxtofl@val+2
  1253  00AE  00F3               	movwf	___xxtofl@val+3
  1254  00AF  3001               	movlw	1
  1255  00B0  160A  158A  24AC  120A  118A  	fcall	___xxtofl
  1256  00B5  0873               	movf	?___xxtofl+3,w
  1257  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1258  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1259  00B8  00AB               	movwf	___flmul@a+3
  1260  00B9  0872               	movf	?___xxtofl+2,w
  1261  00BA  00AA               	movwf	___flmul@a+2
  1262  00BB  0871               	movf	?___xxtofl+1,w
  1263  00BC  00A9               	movwf	___flmul@a+1
  1264  00BD  0870               	movf	?___xxtofl,w
  1265  00BE  00A8               	movwf	___flmul@a
  1266  00BF  120A  158A  249F  120A  118A  	fcall	___flmul
  1267  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1268  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1269  00C6  0827               	movf	?___flmul+3,w
  1270  00C7  00C5               	movwf	___fldiv@b+3
  1271  00C8  0826               	movf	?___flmul+2,w
  1272  00C9  00C4               	movwf	___fldiv@b+2
  1273  00CA  0825               	movf	?___flmul+1,w
  1274  00CB  00C3               	movwf	___fldiv@b+1
  1275  00CC  0824               	movf	?___flmul,w
  1276  00CD  00C2               	movwf	___fldiv@b
  1277  00CE  160A  158A  2623  120A  118A  	fcall	___fldiv
  1278  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1279  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1280  00D5  0841               	movf	?___fldiv+3,w
  1281  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  1282  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  1283  00D8  00DD               	movwf	(main@peso+3)^(0+128)
  1284  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1285  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1286  00DB  0840               	movf	?___fldiv+2,w
  1287  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1288  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1289  00DE  00DC               	movwf	(main@peso+2)^(0+128)
  1290  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1291  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1292  00E1  083F               	movf	?___fldiv+1,w
  1293  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1294  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1295  00E4  00DB               	movwf	(main@peso+1)^(0+128)
  1296  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1297  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1298  00E7  083E               	movf	?___fldiv,w
  1299  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  1300  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  1301  00EA  00DA               	movwf	main@peso^(0+128)
  1302  00EB                     l3822:
  1303                           
  1304                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 35:         num_huevos= 
      +                          peso/0.070;
  1305  00EB  085D               	movf	(main@peso+3)^(0+128),w
  1306  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1307  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1308  00EE  00C5               	movwf	___fldiv@b+3
  1309  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1310  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1311  00F1  085C               	movf	(main@peso+2)^(0+128),w
  1312  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1313  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1314  00F4  00C4               	movwf	___fldiv@b+2
  1315  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1316  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1317  00F7  085B               	movf	(main@peso+1)^(0+128),w
  1318  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1319  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1320  00FA  00C3               	movwf	___fldiv@b+1
  1321  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1322  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  1323  00FD  085A               	movf	main@peso^(0+128),w
  1324  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1325  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0100  00C2               	movwf	___fldiv@b
  1327  0101  303D               	movlw	61
  1328  0102  00C1               	movwf	___fldiv@a+3
  1329  0103  308F               	movlw	143
  1330  0104  00C0               	movwf	___fldiv@a+2
  1331  0105  305C               	movlw	92
  1332  0106  00BF               	movwf	___fldiv@a+1
  1333  0107  3029               	movlw	41
  1334  0108  00BE               	movwf	___fldiv@a
  1335  0109  160A  158A  2623  120A  118A  	fcall	___fldiv
  1336  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1337  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0110  0841               	movf	?___fldiv+3,w
  1339  0111  00DB               	movwf	___fltol@f1+3
  1340  0112  0840               	movf	?___fldiv+2,w
  1341  0113  00DA               	movwf	___fltol@f1+2
  1342  0114  083F               	movf	?___fldiv+1,w
  1343  0115  00D9               	movwf	___fltol@f1+1
  1344  0116  083E               	movf	?___fldiv,w
  1345  0117  00D8               	movwf	___fltol@f1
  1346  0118  120A  158A  2006  120A  118A  	fcall	___fltol
  1347  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1348  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1349  011F  0859               	movf	?___fltol+1,w
  1350  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1351  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1352  0122  00D9               	movwf	(main@num_huevos+1)^(0+128)
  1353  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0125  0858               	movf	?___fltol,w
  1356  0126  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0127  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0128  00D8               	movwf	main@num_huevos^(0+128)
  1359  0129                     l3824:
  1360                           
  1361                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 36:         sprintf(buff
      +                          er1,"huevos: %02i",num_huevos);
  1362  0129  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1363  012A  00C5               	movwf	??_main^(0+128)
  1364  012B  0845               	movf	??_main^(0+128),w
  1365  012C  00A0               	movwf	sprintf@f^(0+128)
  1366  012D  0859               	movf	(main@num_huevos+1)^(0+128),w
  1367  012E  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1368  012F  0858               	movf	main@num_huevos^(0+128),w
  1369  0130  00A1               	movwf	(?_sprintf^(0+128)+1)
  1370  0131  30C8               	movlw	(low (main@buffer1| 0))& (0+255)
  1371  0132  160A  118A  2525  120A  118A  	fcall	_sprintf
  1372  0137                     l3826:
  1373                           
  1374                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 37:         Lcd_Set_Curs
      +                          or(1,1);
  1375  0137  01F4               	clrf	Lcd_Set_Cursor@b
  1376  0138  0AF4               	incf	Lcd_Set_Cursor@b,f
  1377  0139  3001               	movlw	1
  1378  013A  160A  158A  2246  120A  118A  	fcall	_Lcd_Set_Cursor
  1379  013F                     l3828:
  1380                           
  1381                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 38:         Lcd_Write_St
      +                          ring(buffer1);
  1382  013F  30C8               	movlw	(low (main@buffer1| 0))& (0+255)
  1383  0140  160A  158A  2105  120A  118A  	fcall	_Lcd_Write_String
  1384  0145                     l3830:
  1385                           
  1386                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 40:         sprintf(buff
      +                          er1,"peso: %04.2f",peso);
  1387  0145  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1388  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1389  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1390  0148  00C5               	movwf	??_main^(0+128)
  1391  0149  0845               	movf	??_main^(0+128),w
  1392  014A  00A0               	movwf	sprintf@f^(0+128)
  1393  014B  085D               	movf	(main@peso+3)^(0+128),w
  1394  014C  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1395  014D  085C               	movf	(main@peso+2)^(0+128),w
  1396  014E  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1397  014F  085B               	movf	(main@peso+1)^(0+128),w
  1398  0150  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1399  0151  085A               	movf	main@peso^(0+128),w
  1400  0152  00A1               	movwf	(?_sprintf^(0+128)+1)
  1401  0153  30C8               	movlw	(low (main@buffer1| 0))& (0+255)
  1402  0154  160A  118A  2525  120A  118A  	fcall	_sprintf
  1403  0159                     l3832:
  1404                           
  1405                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 41:         Lcd_Set_Curs
      +                          or(2,1);
  1406  0159  01F4               	clrf	Lcd_Set_Cursor@b
  1407  015A  0AF4               	incf	Lcd_Set_Cursor@b,f
  1408  015B  3002               	movlw	2
  1409  015C  160A  158A  2246  120A  118A  	fcall	_Lcd_Set_Cursor
  1410  0161                     l3834:
  1411                           
  1412                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 42:         Lcd_Write_St
      +                          ring(buffer1);
  1413  0161  30C8               	movlw	(low (main@buffer1| 0))& (0+255)
  1414  0162  160A  158A  2105  120A  118A  	fcall	_Lcd_Write_String
  1415  0167                     l3836:
  1416                           
  1417                           ;../../Documents/Ejemplos_lcd_teclado_adc/Manejo_adc/newmain.c: 48:         _delay((unsi
      +                          gned long)((300)*(4000000/4000.0)));
  1418  0167  3002               	movlw	2
  1419  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0169  1303               	bcf	3,6	;RP1=0, select bank1
  1421  016A  00C7               	movwf	(??_main^(0+128)+2)
  1422  016B  3086               	movlw	134
  1423  016C  00C6               	movwf	(??_main^(0+128)+1)
  1424  016D  3098               	movlw	152
  1425  016E  00C5               	movwf	??_main^(0+128)
  1426  016F                     u6487:
  1427  016F  0BC5               	decfsz	??_main^(0+128),f
  1428  0170  296F               	goto	u6487
  1429  0171  0BC6               	decfsz	(??_main^(0+128)+1),f
  1430  0172  296F               	goto	u6487
  1431  0173  0BC7               	decfsz	(??_main^(0+128)+2),f
  1432  0174  296F               	goto	u6487
  1433  0175  0000               	nop
  1434  0176  286C               	goto	l3812
  1435  0177  120A  118A  2800   	ljmp	start
  1436  017A                     __end_of_main:
  1437                           
  1438                           	psect	text1
  1439  1525                     __ptext1:	
  1440 ;; *************** function _sprintf *****************
  1441 ;; Defined at:
  1442 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  sp              1    wreg     PTR unsigned char 
  1445 ;;		 -> main@buffer1(16), 
  1446 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1447 ;;		 -> STR_2(13), STR_1(13), 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  sp              1   35[BANK1 ] PTR unsigned char 
  1450 ;;		 -> main@buffer1(16), 
  1451 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1452 ;;  val             4   19[BANK1 ] unsigned long 
  1453 ;;  tmpval          4   15[BANK1 ] struct .
  1454 ;;  prec            2   33[BANK1 ] int 
  1455 ;;  width           2   27[BANK1 ] int 
  1456 ;;  flag            2   25[BANK1 ] unsigned short 
  1457 ;;  eexp            2   23[BANK1 ] int 
  1458 ;;  cp              2    0        PTR const unsigned char 
  1459 ;;  len             2    0        unsigned int 
  1460 ;;  c               1   36[BANK1 ] unsigned char 
  1461 ;;  ap              1   14[BANK1 ] PTR void [1]
  1462 ;;		 -> ?_sprintf(2), 
  1463 ;;  d               1    0        unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2    0[BANK1 ] int 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       5       0       0
  1474 ;;      Locals:         0       0      27       0       0
  1475 ;;      Temps:          0       0       5       0       0
  1476 ;;      Totals:         0       0      37       0       0
  1477 ;;Total ram usage:       37 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; Hardware stack levels required when called: 3
  1480 ;; This function calls:
  1481 ;;		___awdiv
  1482 ;;		___fladd
  1483 ;;		___fleq
  1484 ;;		___flge
  1485 ;;		___flmul
  1486 ;;		___flneg
  1487 ;;		___flsub
  1488 ;;		___fltol
  1489 ;;		___lldiv
  1490 ;;		___llmod
  1491 ;;		___wmul
  1492 ;;		___xxtofl
  1493 ;;		__div_to_l_
  1494 ;;		__tdiv_to_l_
  1495 ;;		_fround
  1496 ;;		_isdigit
  1497 ;;		_scale
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503  1525                     _sprintf:	
  1504                           ;psect for function _sprintf
  1505                           
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1509                           ;sprintf@sp stored from wreg
  1510  1525  1683               	bsf	3,5	;RP0=1, select bank1
  1511  1526  1303               	bcf	3,6	;RP1=0, select bank1
  1512  1527  00C3               	movwf	sprintf@sp^(0+128)
  1513  1528                     l3312:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1516  1528  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1517  1529  00A5               	movwf	??_sprintf^(0+128)
  1518  152A  0825               	movf	??_sprintf^(0+128),w
  1519  152B  00AE               	movwf	sprintf@ap^(0+128)
  1520  152C                     L1:
  1521                           
  1522                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1523  152C  120A  118A  2FE3   	goto	l3632
  1524  152F                     l3314:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1527  152F  3025               	movlw	37
  1528  1530  0644               	xorwf	sprintf@c^(0+128),w
  1529  1531  1903               	btfsc	3,2
  1530  1532  2D34               	goto	u5571
  1531  1533  2D35               	goto	u5570
  1532  1534                     u5571:
  1533  1534  2D41               	goto	l3320
  1534  1535                     u5570:
  1535  1535                     l3316:
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1538  1535  0844               	movf	sprintf@c^(0+128),w
  1539  1536  00A5               	movwf	??_sprintf^(0+128)
  1540  1537  0843               	movf	sprintf@sp^(0+128),w
  1541  1538  0084               	movwf	4
  1542  1539  0825               	movf	??_sprintf^(0+128),w
  1543  153A  1383               	bcf	3,7	;select IRP bank0
  1544  153B  0080               	movwf	0
  1545  153C                     l3318:
  1546  153C  3001               	movlw	1
  1547  153D  00A5               	movwf	??_sprintf^(0+128)
  1548  153E  0825               	movf	??_sprintf^(0+128),w
  1549  153F  07C3               	addwf	sprintf@sp^(0+128),f
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 559:    continue;
  1552  1540  2D2C               	goto	L1
  1553  1541                     l3320:
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1556  1541  01BB               	clrf	sprintf@width^(0+128)
  1557  1542  01BC               	clrf	(sprintf@width+1)^(0+128)
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1560  1543  01B9               	clrf	sprintf@flag^(0+128)
  1561  1544  01BA               	clrf	(sprintf@flag+1)^(0+128)
  1562  1545  2D4B               	goto	l3326
  1563  1546                     l216:	
  1564                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1565                           
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1568  1546  1539               	bsf	sprintf@flag^(0+128),2
  1569  1547                     l3322:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 598:     f++;
  1572  1547  3001               	movlw	1
  1573  1548  00A5               	movwf	??_sprintf^(0+128)
  1574  1549  0825               	movf	??_sprintf^(0+128),w
  1575  154A  07A0               	addwf	sprintf@f^(0+128),f
  1576  154B                     l3326:	
  1577                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1578                           
  1579  154B  0820               	movf	sprintf@f^(0+128),w
  1580  154C  0084               	movwf	4
  1581  154D  160A  158A  2000  160A  118A  	fcall	stringdir
  1582  1552  00A5               	movwf	??_sprintf^(0+128)
  1583  1553  01A6               	clrf	(??_sprintf^(0+128)+1)
  1584                           
  1585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1586                           ; Switch size 1, requested type "simple"
  1587                           ; Number of cases is 1, Range of values is 0 to 0
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte            4     3 (average)
  1591                           ; direct_byte           11     8 (fixed)
  1592                           ; jumptable            260     6 (fixed)
  1593                           ;	Chosen strategy is simple_byte
  1594  1554  0826               	movf	(??_sprintf+1)^(0+128),w
  1595  1555  3A00               	xorlw	0	; case 0
  1596  1556  1903               	skipnz
  1597  1557  2D59               	goto	l3898
  1598  1558  2D5E               	goto	l3328
  1599  1559                     l3898:
  1600                           
  1601                           ; Switch size 1, requested type "simple"
  1602                           ; Number of cases is 1, Range of values is 48 to 48
  1603                           ; switch strategies available:
  1604                           ; Name         Instructions Cycles
  1605                           ; simple_byte            4     3 (average)
  1606                           ; direct_byte           14    11 (fixed)
  1607                           ; jumptable            263     9 (fixed)
  1608                           ;	Chosen strategy is simple_byte
  1609  1559  0825               	movf	??_sprintf^(0+128),w
  1610  155A  3A30               	xorlw	48	; case 48
  1611  155B  1903               	skipnz
  1612  155C  2D46               	goto	l216
  1613  155D  2D5E               	goto	l3328
  1614  155E                     l3328:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1617  155E  0820               	movf	sprintf@f^(0+128),w
  1618  155F  0084               	movwf	4
  1619  1560  160A  158A  2000  160A  118A  	fcall	stringdir
  1620  1565  160A  158A  20D9  160A  118A  	fcall	_isdigit
  1621  156A  1C03               	btfss	3,0
  1622  156B  2D6D               	goto	u5581
  1623  156C  2D6E               	goto	u5580
  1624  156D                     u5581:
  1625  156D  2DAE               	goto	l3340
  1626  156E                     u5580:
  1627  156E                     l3330:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1630  156E  1683               	bsf	3,5	;RP0=1, select bank1
  1631  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1632  1570  01BB               	clrf	sprintf@width^(0+128)
  1633  1571  01BC               	clrf	(sprintf@width+1)^(0+128)
  1634  1572                     l3332:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1637  1572  300A               	movlw	10
  1638  1573  00F0               	movwf	___wmul@multiplier
  1639  1574  3000               	movlw	0
  1640  1575  00F1               	movwf	___wmul@multiplier+1
  1641  1576  1683               	bsf	3,5	;RP0=1, select bank1
  1642  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1643  1578  083C               	movf	(sprintf@width+1)^(0+128),w
  1644  1579  00F3               	movwf	___wmul@multiplicand+1
  1645  157A  083B               	movf	sprintf@width^(0+128),w
  1646  157B  00F2               	movwf	___wmul@multiplicand
  1647  157C  160A  158A  216C  160A  118A  	fcall	___wmul
  1648  1581  0871               	movf	?___wmul+1,w
  1649  1582  1683               	bsf	3,5	;RP0=1, select bank1
  1650  1583  1303               	bcf	3,6	;RP1=0, select bank1
  1651  1584  00BC               	movwf	(sprintf@width+1)^(0+128)
  1652  1585  0870               	movf	?___wmul,w
  1653  1586  00BB               	movwf	sprintf@width^(0+128)
  1654  1587                     l3334:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1657  1587  0820               	movf	sprintf@f^(0+128),w
  1658  1588  0084               	movwf	4
  1659  1589  160A  158A  2000  160A  118A  	fcall	stringdir
  1660  158E  3ED0               	addlw	208
  1661  158F  00A5               	movwf	??_sprintf^(0+128)
  1662  1590  30FF               	movlw	255
  1663  1591  1803               	skipnc
  1664  1592  3000               	movlw	0
  1665  1593  00A6               	movwf	(??_sprintf^(0+128)+1)
  1666  1594  0825               	movf	??_sprintf^(0+128),w
  1667  1595  07BB               	addwf	sprintf@width^(0+128),f
  1668  1596  1803               	skipnc
  1669  1597  0ABC               	incf	(sprintf@width+1)^(0+128),f
  1670  1598  0826               	movf	(??_sprintf+1)^(0+128),w
  1671  1599  07BC               	addwf	(sprintf@width+1)^(0+128),f
  1672  159A                     l3336:
  1673  159A  3001               	movlw	1
  1674  159B  00A5               	movwf	??_sprintf^(0+128)
  1675  159C  0825               	movf	??_sprintf^(0+128),w
  1676  159D  07A0               	addwf	sprintf@f^(0+128),f
  1677  159E                     l3338:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1680  159E  0820               	movf	sprintf@f^(0+128),w
  1681  159F  0084               	movwf	4
  1682  15A0  160A  158A  2000  160A  118A  	fcall	stringdir
  1683  15A5  160A  158A  20D9  160A  118A  	fcall	_isdigit
  1684  15AA  1803               	btfsc	3,0
  1685  15AB  2DAD               	goto	u5591
  1686  15AC  2DAE               	goto	u5590
  1687  15AD                     u5591:
  1688  15AD  2D72               	goto	l3332
  1689  15AE                     u5590:
  1690  15AE                     l3340:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1693  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  1694  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  1695  15B0  0820               	movf	sprintf@f^(0+128),w
  1696  15B1  0084               	movwf	4
  1697  15B2  160A  158A  2000  160A  118A  	fcall	stringdir
  1698  15B7  3A2E               	xorlw	46
  1699  15B8  1D03               	skipz
  1700  15B9  2DBB               	goto	u5601
  1701  15BA  2DBC               	goto	u5600
  1702  15BB                     u5601:
  1703  15BB  2E01               	goto	l3356
  1704  15BC                     u5600:
  1705  15BC                     l3342:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1708  15BC  173A               	bsf	(sprintf@flag^(0+128)+1),6
  1709  15BD                     l3344:
  1710                           
  1711                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 630:    f++;
  1712  15BD  3001               	movlw	1
  1713  15BE  00A5               	movwf	??_sprintf^(0+128)
  1714  15BF  0825               	movf	??_sprintf^(0+128),w
  1715  15C0  07A0               	addwf	sprintf@f^(0+128),f
  1716  15C1                     l3346:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1719  15C1  01C1               	clrf	sprintf@prec^(0+128)
  1720  15C2  01C2               	clrf	(sprintf@prec+1)^(0+128)
  1721                           
  1722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1723  15C3  2DF0               	goto	l3354
  1724  15C4                     l3348:
  1725                           
  1726                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1727  15C4  300A               	movlw	10
  1728  15C5  00F0               	movwf	___wmul@multiplier
  1729  15C6  3000               	movlw	0
  1730  15C7  00F1               	movwf	___wmul@multiplier+1
  1731  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  1732  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  1733  15CA  0842               	movf	(sprintf@prec+1)^(0+128),w
  1734  15CB  00F3               	movwf	___wmul@multiplicand+1
  1735  15CC  0841               	movf	sprintf@prec^(0+128),w
  1736  15CD  00F2               	movwf	___wmul@multiplicand
  1737  15CE  160A  158A  216C  160A  118A  	fcall	___wmul
  1738  15D3  0871               	movf	?___wmul+1,w
  1739  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  1740  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  1741  15D6  00C2               	movwf	(sprintf@prec+1)^(0+128)
  1742  15D7  0870               	movf	?___wmul,w
  1743  15D8  00C1               	movwf	sprintf@prec^(0+128)
  1744  15D9                     l3350:
  1745                           
  1746                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1747  15D9  0820               	movf	sprintf@f^(0+128),w
  1748  15DA  0084               	movwf	4
  1749  15DB  160A  158A  2000  160A  118A  	fcall	stringdir
  1750  15E0  3ED0               	addlw	208
  1751  15E1  00A5               	movwf	??_sprintf^(0+128)
  1752  15E2  30FF               	movlw	255
  1753  15E3  1803               	skipnc
  1754  15E4  3000               	movlw	0
  1755  15E5  00A6               	movwf	(??_sprintf^(0+128)+1)
  1756  15E6  0825               	movf	??_sprintf^(0+128),w
  1757  15E7  07C1               	addwf	sprintf@prec^(0+128),f
  1758  15E8  1803               	skipnc
  1759  15E9  0AC2               	incf	(sprintf@prec+1)^(0+128),f
  1760  15EA  0826               	movf	(??_sprintf+1)^(0+128),w
  1761  15EB  07C2               	addwf	(sprintf@prec+1)^(0+128),f
  1762  15EC                     l3352:
  1763  15EC  3001               	movlw	1
  1764  15ED  00A5               	movwf	??_sprintf^(0+128)
  1765  15EE  0825               	movf	??_sprintf^(0+128),w
  1766  15EF  07A0               	addwf	sprintf@f^(0+128),f
  1767  15F0                     l3354:
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1770  15F0  0820               	movf	sprintf@f^(0+128),w
  1771  15F1  0084               	movwf	4
  1772  15F2  160A  158A  2000  160A  118A  	fcall	stringdir
  1773  15F7  160A  158A  20D9  160A  118A  	fcall	_isdigit
  1774  15FC  1803               	btfsc	3,0
  1775  15FD  2DFF               	goto	u5611
  1776  15FE  2E00               	goto	u5610
  1777  15FF                     u5611:
  1778  15FF  2DC4               	goto	l3348
  1779  1600                     u5610:
  1780  1600  2E07               	goto	l3362
  1781  1601                     l3356:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1784  1601  01C1               	clrf	sprintf@prec^(0+128)
  1785  1602  01C2               	clrf	(sprintf@prec+1)^(0+128)
  1786  1603                     l3358:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1789  1603  163A               	bsf	(sprintf@flag^(0+128)+1),4
  1790  1604  2E07               	goto	l3362
  1791  1605                     l231:	
  1792                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1793                           
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1796  1605  153A               	bsf	(sprintf@flag^(0+128)+1),2
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 690:    break;
  1799  1606  2E29               	goto	l3364
  1800  1607                     l3362:
  1801  1607  3001               	movlw	1
  1802  1608  1683               	bsf	3,5	;RP0=1, select bank1
  1803  1609  1303               	bcf	3,6	;RP1=0, select bank1
  1804  160A  07A0               	addwf	sprintf@f^(0+128),f
  1805  160B  30FF               	movlw	-1
  1806  160C  0720               	addwf	sprintf@f^(0+128),w
  1807  160D  0084               	movwf	4
  1808  160E  160A  158A  2000  160A  118A  	fcall	stringdir
  1809  1613  00C4               	movwf	sprintf@c^(0+128)
  1810  1614  00A5               	movwf	??_sprintf^(0+128)
  1811  1615  01A6               	clrf	(??_sprintf^(0+128)+1)
  1812                           
  1813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1814                           ; Switch size 1, requested type "simple"
  1815                           ; Number of cases is 1, Range of values is 0 to 0
  1816                           ; switch strategies available:
  1817                           ; Name         Instructions Cycles
  1818                           ; simple_byte            4     3 (average)
  1819                           ; direct_byte           11     8 (fixed)
  1820                           ; jumptable            260     6 (fixed)
  1821                           ;	Chosen strategy is simple_byte
  1822  1616  0826               	movf	(??_sprintf+1)^(0+128),w
  1823  1617  3A00               	xorlw	0	; case 0
  1824  1618  1903               	skipnz
  1825  1619  2E1B               	goto	l3900
  1826  161A  2D2C               	goto	L1
  1827  161B                     l3900:
  1828                           
  1829                           ; Switch size 1, requested type "simple"
  1830                           ; Number of cases is 4, Range of values is 0 to 105
  1831                           ; switch strategies available:
  1832                           ; Name         Instructions Cycles
  1833                           ; simple_byte           13     7 (average)
  1834                           ; jumptable            260     6 (fixed)
  1835                           ;	Chosen strategy is simple_byte
  1836  161B  0825               	movf	??_sprintf^(0+128),w
  1837  161C  3A00               	xorlw	0	; case 0
  1838  161D  1903               	skipnz
  1839  161E  2FFD               	goto	L3
  1840  161F  3A64               	xorlw	100	; case 100
  1841  1620  1903               	skipnz
  1842  1621  2E29               	goto	l3364
  1843  1622  3A02               	xorlw	2	; case 102
  1844  1623  1903               	skipnz
  1845  1624  2E05               	goto	l231
  1846  1625  3A0F               	xorlw	15	; case 105
  1847  1626  1903               	skipnz
  1848  1627  2E29               	goto	l3364
  1849  1628  2D2C               	goto	L1
  1850  1629                     l3364:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1853  1629  3000               	movlw	0
  1854  162A  0539               	andwf	sprintf@flag^(0+128),w
  1855  162B  00A5               	movwf	??_sprintf^(0+128)
  1856  162C  3007               	movlw	7
  1857  162D  053A               	andwf	(sprintf@flag+1)^(0+128),w
  1858  162E  00A6               	movwf	(??_sprintf+1)^(0+128)
  1859  162F  0825               	movf	??_sprintf^(0+128),w
  1860  1630  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1861  1631  1903               	btfsc	3,2
  1862  1632  2E34               	goto	u5621
  1863  1633  2E37               	goto	u5620
  1864  1634                     u5621:
  1865  1634  120A  118A  2E0D   	goto	l3538
  1866  1637                     u5620:
  1867  1637                     l3366:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1870  1637  1E3A               	btfss	(sprintf@flag+1)^(0+128),4
  1871  1638  2E3A               	goto	u5631
  1872  1639  2E3B               	goto	u5630
  1873  163A                     u5631:
  1874  163A  2E3F               	goto	l3370
  1875  163B                     u5630:
  1876  163B                     l3368:
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1879  163B  3006               	movlw	6
  1880  163C  00C1               	movwf	sprintf@prec^(0+128)
  1881  163D  3000               	movlw	0
  1882  163E  00C2               	movwf	(sprintf@prec^(0+128)+1)
  1883  163F                     l3370:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1886  163F  082E               	movf	sprintf@ap^(0+128),w
  1887  1640  0084               	movwf	4
  1888  1641  1383               	bcf	3,7	;select IRP bank0
  1889  1642  0800               	movf	0,w
  1890  1643  00BD               	movwf	sprintf@fval^(0+128)
  1891  1644  0A84               	incf	4,f
  1892  1645  0800               	movf	0,w
  1893  1646  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1894  1647  0A84               	incf	4,f
  1895  1648  0800               	movf	0,w
  1896  1649  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1897  164A  0A84               	incf	4,f
  1898  164B  0800               	movf	0,w
  1899  164C  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1900  164D                     l3372:
  1901  164D  3004               	movlw	4
  1902  164E  00A5               	movwf	??_sprintf^(0+128)
  1903  164F  0825               	movf	??_sprintf^(0+128),w
  1904  1650  07AE               	addwf	sprintf@ap^(0+128),f
  1905  1651                     l3374:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1908  1651  0840               	movf	(sprintf@fval+3)^(0+128),w
  1909  1652  00F3               	movwf	___flge@ff1+3
  1910  1653  083F               	movf	(sprintf@fval+2)^(0+128),w
  1911  1654  00F2               	movwf	___flge@ff1+2
  1912  1655  083E               	movf	(sprintf@fval+1)^(0+128),w
  1913  1656  00F1               	movwf	___flge@ff1+1
  1914  1657  083D               	movf	sprintf@fval^(0+128),w
  1915  1658  00F0               	movwf	___flge@ff1
  1916  1659  3000               	movlw	0
  1917  165A  00F7               	movwf	___flge@ff2+3
  1918  165B  3000               	movlw	0
  1919  165C  00F6               	movwf	___flge@ff2+2
  1920  165D  3000               	movlw	0
  1921  165E  00F5               	movwf	___flge@ff2+1
  1922  165F  3000               	movlw	0
  1923  1660  00F4               	movwf	___flge@ff2
  1924  1661  160A  158A  240A  160A  118A  	fcall	___flge
  1925  1666  1803               	btfsc	3,0
  1926  1667  2E69               	goto	u5641
  1927  1668  2E6A               	goto	u5640
  1928  1669                     u5641:
  1929  1669  2E87               	goto	l3380
  1930  166A                     u5640:
  1931  166A                     l3376:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1934  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1935  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1936  166C  0840               	movf	(sprintf@fval+3)^(0+128),w
  1937  166D  00F3               	movwf	___flneg@f1+3
  1938  166E  083F               	movf	(sprintf@fval+2)^(0+128),w
  1939  166F  00F2               	movwf	___flneg@f1+2
  1940  1670  083E               	movf	(sprintf@fval+1)^(0+128),w
  1941  1671  00F1               	movwf	___flneg@f1+1
  1942  1672  083D               	movf	sprintf@fval^(0+128),w
  1943  1673  00F0               	movwf	___flneg@f1
  1944  1674  160A  158A  20CE  160A  118A  	fcall	___flneg
  1945  1679  0873               	movf	?___flneg+3,w
  1946  167A  1683               	bsf	3,5	;RP0=1, select bank1
  1947  167B  1303               	bcf	3,6	;RP1=0, select bank1
  1948  167C  00C0               	movwf	(sprintf@fval+3)^(0+128)
  1949  167D  0872               	movf	?___flneg+2,w
  1950  167E  00BF               	movwf	(sprintf@fval+2)^(0+128)
  1951  167F  0871               	movf	?___flneg+1,w
  1952  1680  00BE               	movwf	(sprintf@fval+1)^(0+128)
  1953  1681  0870               	movf	?___flneg,w
  1954  1682  00BD               	movwf	sprintf@fval^(0+128)
  1955  1683                     l3378:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1958  1683  3003               	movlw	3
  1959  1684  04B9               	iorwf	sprintf@flag^(0+128),f
  1960  1685  3000               	movlw	0
  1961  1686  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
  1962  1687                     l3380:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1965  1687  1683               	bsf	3,5	;RP0=1, select bank1
  1966  1688  1303               	bcf	3,6	;RP1=0, select bank1
  1967  1689  01B7               	clrf	sprintf@eexp^(0+128)
  1968  168A  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  1969  168B                     l3382:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1972  168B  0840               	movf	(sprintf@fval+3)^(0+128),w
  1973  168C  00F3               	movwf	___fleq@ff1+3
  1974  168D  083F               	movf	(sprintf@fval+2)^(0+128),w
  1975  168E  00F2               	movwf	___fleq@ff1+2
  1976  168F  083E               	movf	(sprintf@fval+1)^(0+128),w
  1977  1690  00F1               	movwf	___fleq@ff1+1
  1978  1691  083D               	movf	sprintf@fval^(0+128),w
  1979  1692  00F0               	movwf	___fleq@ff1
  1980  1693  3000               	movlw	0
  1981  1694  00F7               	movwf	___fleq@ff2+3
  1982  1695  3000               	movlw	0
  1983  1696  00F6               	movwf	___fleq@ff2+2
  1984  1697  3000               	movlw	0
  1985  1698  00F5               	movwf	___fleq@ff2+1
  1986  1699  3000               	movlw	0
  1987  169A  00F4               	movwf	___fleq@ff2
  1988  169B  120A  118A  2003  160A  118A  	fcall	___fleq
  1989  16A0  1803               	btfsc	3,0
  1990  16A1  2EA3               	goto	u5651
  1991  16A2  2EA4               	goto	u5650
  1992  16A3                     u5651:
  1993  16A3  2F94               	goto	l3408
  1994  16A4                     u5650:
  1995  16A4                     l3384:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1998  16A4  1003               	clrc
  1999  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2000  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2001  16A7  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2002  16A8  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2003  16A9  3E82               	addlw	130
  2004  16AA  00B7               	movwf	sprintf@eexp^(0+128)
  2005  16AB  30FF               	movlw	255
  2006  16AC  1803               	skipnc
  2007  16AD  3000               	movlw	0
  2008  16AE  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2009  16AF                     l3386:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2012  16AF  30FF               	movlw	255
  2013  16B0  07B7               	addwf	sprintf@eexp^(0+128),f
  2014  16B1  1803               	skipnc
  2015  16B2  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2016  16B3  30FF               	movlw	255
  2017  16B4  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2018  16B5                     l3388:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2021  16B5  3003               	movlw	3
  2022  16B6  00F0               	movwf	___wmul@multiplier
  2023  16B7  3000               	movlw	0
  2024  16B8  00F1               	movwf	___wmul@multiplier+1
  2025  16B9  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2026  16BA  00F3               	movwf	___wmul@multiplicand+1
  2027  16BB  0837               	movf	sprintf@eexp^(0+128),w
  2028  16BC  00F2               	movwf	___wmul@multiplicand
  2029  16BD  160A  158A  216C  160A  118A  	fcall	___wmul
  2030  16C2  0871               	movf	?___wmul+1,w
  2031  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2032  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2033  16C5  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2034  16C6  0870               	movf	?___wmul,w
  2035  16C7  00B7               	movwf	sprintf@eexp^(0+128)
  2036  16C8                     l3390:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2039  16C8  300A               	movlw	10
  2040  16C9  00F7               	movwf	___awdiv@divisor
  2041  16CA  3000               	movlw	0
  2042  16CB  00F8               	movwf	___awdiv@divisor+1
  2043  16CC  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2044  16CD  00FA               	movwf	___awdiv@dividend+1
  2045  16CE  0837               	movf	sprintf@eexp^(0+128),w
  2046  16CF  00F9               	movwf	___awdiv@dividend
  2047  16D0  160A  118A  2029  160A  118A  	fcall	___awdiv
  2048  16D5  0878               	movf	?___awdiv+1,w
  2049  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2050  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2051  16D8  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2052  16D9  0877               	movf	?___awdiv,w
  2053  16DA  00B7               	movwf	sprintf@eexp^(0+128)
  2054  16DB                     l3392:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2057  16DB  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2058  16DC  2EDE               	goto	u5661
  2059  16DD  2EDF               	goto	u5660
  2060  16DE                     u5661:
  2061  16DE  2EE5               	goto	l3396
  2062  16DF                     u5660:
  2063  16DF                     l3394:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2066  16DF  30FF               	movlw	255
  2067  16E0  07B7               	addwf	sprintf@eexp^(0+128),f
  2068  16E1  1803               	skipnc
  2069  16E2  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2070  16E3  30FF               	movlw	255
  2071  16E4  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2072  16E5                     l3396:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2075  16E5  0337               	decf	sprintf@eexp^(0+128),w
  2076  16E6  3AFF               	xorlw	255
  2077  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2078  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2079  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2080  16EE  0841               	movf	?_scale+3,w
  2081  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2082  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2083  16F1  00B2               	movwf	(sprintf@tmpval+3)^(0+128)
  2084  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2085  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2086  16F4  0840               	movf	?_scale+2,w
  2087  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2088  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2089  16F7  00B1               	movwf	(sprintf@tmpval+2)^(0+128)
  2090  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2091  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2092  16FA  083F               	movf	?_scale+1,w
  2093  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2094  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2095  16FD  00B0               	movwf	(sprintf@tmpval+1)^(0+128)
  2096  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2097  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2098  1700  083E               	movf	?_scale,w
  2099  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2100  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2101  1703  00AF               	movwf	sprintf@tmpval^(0+128)
  2102  1704                     l3398:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2105  1704  0840               	movf	(sprintf@fval+3)^(0+128),w
  2106  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2107  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2108  1707  00A7               	movwf	___flmul@b+3
  2109  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2110  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2111  170A  083F               	movf	(sprintf@fval+2)^(0+128),w
  2112  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2113  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2114  170D  00A6               	movwf	___flmul@b+2
  2115  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2116  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2117  1710  083E               	movf	(sprintf@fval+1)^(0+128),w
  2118  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2119  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2120  1713  00A5               	movwf	___flmul@b+1
  2121  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2122  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2123  1716  083D               	movf	sprintf@fval^(0+128),w
  2124  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2125  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2126  1719  00A4               	movwf	___flmul@b
  2127  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2128  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2129  171C  0832               	movf	(sprintf@tmpval+3)^(0+128),w
  2130  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2131  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2132  171F  00AB               	movwf	___flmul@a+3
  2133  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2134  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2135  1722  0831               	movf	(sprintf@tmpval+2)^(0+128),w
  2136  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2137  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2138  1725  00AA               	movwf	___flmul@a+2
  2139  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2140  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2141  1728  0830               	movf	(sprintf@tmpval+1)^(0+128),w
  2142  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2143  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2144  172B  00A9               	movwf	___flmul@a+1
  2145  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2146  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2147  172E  082F               	movf	sprintf@tmpval^(0+128),w
  2148  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2149  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2150  1731  00A8               	movwf	___flmul@a
  2151  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2152  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2153  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2154  1739  0827               	movf	?___flmul+3,w
  2155  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2156  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2157  173C  00B2               	movwf	(sprintf@tmpval+3)^(0+128)
  2158  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2159  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2160  173F  0826               	movf	?___flmul+2,w
  2161  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2162  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2163  1742  00B1               	movwf	(sprintf@tmpval+2)^(0+128)
  2164  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2165  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2166  1745  0825               	movf	?___flmul+1,w
  2167  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2168  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2169  1748  00B0               	movwf	(sprintf@tmpval+1)^(0+128)
  2170  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2171  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2172  174B  0824               	movf	?___flmul,w
  2173  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2174  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2175  174E  00AF               	movwf	sprintf@tmpval^(0+128)
  2176  174F                     l3400:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2179  174F  0832               	movf	(sprintf@tmpval+3)^(0+128),w
  2180  1750  00F3               	movwf	___flge@ff1+3
  2181  1751  0831               	movf	(sprintf@tmpval+2)^(0+128),w
  2182  1752  00F2               	movwf	___flge@ff1+2
  2183  1753  0830               	movf	(sprintf@tmpval+1)^(0+128),w
  2184  1754  00F1               	movwf	___flge@ff1+1
  2185  1755  082F               	movf	sprintf@tmpval^(0+128),w
  2186  1756  00F0               	movwf	___flge@ff1
  2187  1757  303F               	movlw	63
  2188  1758  00F7               	movwf	___flge@ff2+3
  2189  1759  3080               	movlw	128
  2190  175A  00F6               	movwf	___flge@ff2+2
  2191  175B  3000               	movlw	0
  2192  175C  00F5               	movwf	___flge@ff2+1
  2193  175D  3000               	movlw	0
  2194  175E  00F4               	movwf	___flge@ff2
  2195  175F  160A  158A  240A  160A  118A  	fcall	___flge
  2196  1764  1803               	btfsc	3,0
  2197  1765  2F67               	goto	u5671
  2198  1766  2F68               	goto	u5670
  2199  1767                     u5671:
  2200  1767  2F71               	goto	l3404
  2201  1768                     u5670:
  2202  1768                     l3402:
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2205  1768  30FF               	movlw	255
  2206  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2207  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2208  176B  07B7               	addwf	sprintf@eexp^(0+128),f
  2209  176C  1803               	skipnc
  2210  176D  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2211  176E  30FF               	movlw	255
  2212  176F  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2213  1770  2F94               	goto	l3408
  2214  1771                     l3404:
  2215  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2216  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2217  1773  0832               	movf	(sprintf@tmpval+3)^(0+128),w
  2218  1774  00F3               	movwf	___flge@ff1+3
  2219  1775  0831               	movf	(sprintf@tmpval+2)^(0+128),w
  2220  1776  00F2               	movwf	___flge@ff1+2
  2221  1777  0830               	movf	(sprintf@tmpval+1)^(0+128),w
  2222  1778  00F1               	movwf	___flge@ff1+1
  2223  1779  082F               	movf	sprintf@tmpval^(0+128),w
  2224  177A  00F0               	movwf	___flge@ff1
  2225  177B  3041               	movlw	65
  2226  177C  00F7               	movwf	___flge@ff2+3
  2227  177D  3020               	movlw	32
  2228  177E  00F6               	movwf	___flge@ff2+2
  2229  177F  3000               	movlw	0
  2230  1780  00F5               	movwf	___flge@ff2+1
  2231  1781  3000               	movlw	0
  2232  1782  00F4               	movwf	___flge@ff2
  2233  1783  160A  158A  240A  160A  118A  	fcall	___flge
  2234  1788  1C03               	btfss	3,0
  2235  1789  2F8B               	goto	u5681
  2236  178A  2F8C               	goto	u5680
  2237  178B                     u5681:
  2238  178B  2F94               	goto	l3408
  2239  178C                     u5680:
  2240  178C                     l3406:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2243  178C  3001               	movlw	1
  2244  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2245  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2246  178F  07B7               	addwf	sprintf@eexp^(0+128),f
  2247  1790  1803               	skipnc
  2248  1791  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2249  1792  3000               	movlw	0
  2250  1793  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2251  1794                     l3408:
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2254  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2255  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2256  1796  0842               	movf	(sprintf@prec+1)^(0+128),w
  2257  1797  3A80               	xorlw	128
  2258  1798  00FF               	movwf	btemp+1
  2259  1799  3080               	movlw	128
  2260  179A  027F               	subwf	btemp+1,w
  2261  179B  1D03               	skipz
  2262  179C  2F9F               	goto	u5695
  2263  179D  300D               	movlw	13
  2264  179E  0241               	subwf	sprintf@prec^(0+128),w
  2265  179F                     u5695:
  2266  179F  1803               	skipnc
  2267  17A0  2FA2               	goto	u5691
  2268  17A1  2FA3               	goto	u5690
  2269  17A2                     u5691:
  2270  17A2  2FEA               	goto	l3412
  2271  17A3                     u5690:
  2272  17A3                     l3410:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2275  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2276  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2277  17A5  0841               	movf	sprintf@prec^(0+128),w
  2278  17A6  160A  118A  2092  160A  118A  	fcall	_fround
  2279  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2280  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2281  17AD  0841               	movf	?_fround+3,w
  2282  17AE  00D5               	movwf	___fladd@b+3
  2283  17AF  0840               	movf	?_fround+2,w
  2284  17B0  00D4               	movwf	___fladd@b+2
  2285  17B1  083F               	movf	?_fround+1,w
  2286  17B2  00D3               	movwf	___fladd@b+1
  2287  17B3  083E               	movf	?_fround,w
  2288  17B4  00D2               	movwf	___fladd@b
  2289  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2290  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2291  17B7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2292  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2293  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2294  17BA  00D9               	movwf	___fladd@a+3
  2295  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2296  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2297  17BD  083F               	movf	(sprintf@fval+2)^(0+128),w
  2298  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2299  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2300  17C0  00D8               	movwf	___fladd@a+2
  2301  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2302  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2303  17C3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2304  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2305  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2306  17C6  00D7               	movwf	___fladd@a+1
  2307  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2308  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2309  17C9  083D               	movf	sprintf@fval^(0+128),w
  2310  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2311  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2312  17CC  00D6               	movwf	___fladd@a
  2313  17CD  160A  118A  229D  160A  118A  	fcall	___fladd
  2314  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2315  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2316  17D4  0855               	movf	?___fladd+3,w
  2317  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2318  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2319  17D7  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2320  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2321  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2322  17DA  0854               	movf	?___fladd+2,w
  2323  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2324  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2325  17DD  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2326  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2327  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2328  17E0  0853               	movf	?___fladd+1,w
  2329  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2330  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2331  17E3  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2332  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2333  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2334  17E6  0852               	movf	?___fladd,w
  2335  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2336  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2337  17E9  00BD               	movwf	sprintf@fval^(0+128)
  2338  17EA                     l3412:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2341  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2342  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2343  17EC  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2344  17ED  3A80               	xorlw	128
  2345  17EE  00FF               	movwf	btemp+1
  2346  17EF  3080               	movlw	128
  2347  17F0  027F               	subwf	btemp+1,w
  2348  17F1  1D03               	skipz
  2349  17F2  2FF5               	goto	u5705
  2350  17F3  300A               	movlw	10
  2351  17F4  0237               	subwf	sprintf@eexp^(0+128),w
  2352  17F5                     u5705:
  2353  17F5  1803               	skipnc
  2354  17F6  2FFA               	goto	u5701
  2355  17F7  120A  118A  297A   	goto	u5700
  2356  17FA                     u5701:
  2357  17FA  120A  118A  29CB   	goto	l3420
  2358  17FD                     L3:
  2359  17FD                     L2:
  2360  17FD  120A  118A  2FF7   	ljmp	l3634
  2361                           
  2362                           	psect	text2
  2363  0940                     __ptext2:	
  2364 ;; *************** function _scale *****************
  2365 ;; Defined at:
  2366 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  scl             1    wreg     char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  scl             1   48[BANK0 ] char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  4   30[BANK0 ] char 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       4       0       0       0
  2381 ;;      Locals:         0       5       0       0       0
  2382 ;;      Temps:          0      10       0       0       0
  2383 ;;      Totals:         0      19       0       0       0
  2384 ;;Total ram usage:       19 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 2
  2387 ;; This function calls:
  2388 ;;		___awdiv
  2389 ;;		___awmod
  2390 ;;		___flmul
  2391 ;; This function is called by:
  2392 ;;		_sprintf
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396  0940                     _scale:	
  2397                           ;psect for function _scale
  2398                           
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2402                           ;scale@scl stored from wreg
  2403  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0942  00D0               	movwf	scale@scl
  2406  0943                     l2934:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2409  0943  1FD0               	btfss	scale@scl,7
  2410  0944  2946               	goto	u4551
  2411  0945  2947               	goto	u4550
  2412  0946                     u4551:
  2413  0946  2AF4               	goto	l2956
  2414  0947                     u4550:
  2415  0947                     l2936:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2418  0947  09D0               	comf	scale@scl,f
  2419  0948  0AD0               	incf	scale@scl,f
  2420  0949                     l2938:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2423  0949  0850               	movf	scale@scl,w
  2424  094A  3A80               	xorlw	128
  2425  094B  3E12               	addlw	-238
  2426  094C  1C03               	skipc
  2427  094D  294F               	goto	u4561
  2428  094E  2950               	goto	u4560
  2429  094F                     u4561:
  2430  094F  2A38               	goto	l2946
  2431  0950                     u4560:
  2432  0950                     l2940:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2435  0950  300A               	movlw	10
  2436  0951  00F7               	movwf	___awdiv@divisor
  2437  0952  3000               	movlw	0
  2438  0953  00F8               	movwf	___awdiv@divisor+1
  2439  0954  0850               	movf	scale@scl,w
  2440  0955  00F2               	movwf	___awmod@dividend
  2441  0956  01F3               	clrf	___awmod@dividend+1
  2442  0957  1BF2               	btfsc	___awmod@dividend,7
  2443  0958  03F3               	decf	___awmod@dividend+1,f
  2444  0959  3064               	movlw	100
  2445  095A  00F0               	movwf	___awmod@divisor
  2446  095B  3000               	movlw	0
  2447  095C  00F1               	movwf	___awmod@divisor+1
  2448  095D  160A  158A  22EE  120A  158A  	fcall	___awmod
  2449  0962  0871               	movf	?___awmod+1,w
  2450  0963  00FA               	movwf	___awdiv@dividend+1
  2451  0964  0870               	movf	?___awmod,w
  2452  0965  00F9               	movwf	___awdiv@dividend
  2453  0966  160A  118A  2029  120A  158A  	fcall	___awdiv
  2454  096B  0877               	movf	?___awdiv,w
  2455  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2456  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2457  096E  00C2               	movwf	??_scale
  2458  096F  3001               	movlw	1
  2459  0970                     u4575:
  2460  0970  1003               	clrc
  2461  0971  0DC2               	rlf	??_scale,f
  2462  0972  3EFF               	addlw	-1
  2463  0973  1D03               	skipz
  2464  0974  2970               	goto	u4575
  2465  0975  1003               	clrc
  2466  0976  0D42               	rlf	??_scale,w
  2467  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2468  0978  0084               	movwf	4
  2469  0979  160A  158A  2000  120A  158A  	fcall	stringdir
  2470  097E  00C3               	movwf	??_scale+1
  2471  097F  160A  158A  2000  120A  158A  	fcall	stringdir
  2472  0984  00C4               	movwf	??_scale+2
  2473  0985  160A  158A  2000  120A  158A  	fcall	stringdir
  2474  098A  00C5               	movwf	??_scale+3
  2475  098B  160A  158A  2000  120A  158A  	fcall	stringdir
  2476  0990  00C6               	movwf	??_scale+4
  2477  0991  0846               	movf	??_scale+4,w
  2478  0992  00A7               	movwf	___flmul@b+3
  2479  0993  0845               	movf	??_scale+3,w
  2480  0994  00A6               	movwf	___flmul@b+2
  2481  0995  0844               	movf	??_scale+2,w
  2482  0996  00A5               	movwf	___flmul@b+1
  2483  0997  0843               	movf	??_scale+1,w
  2484  0998  00A4               	movwf	___flmul@b
  2485  0999  3064               	movlw	100
  2486  099A  00F7               	movwf	___awdiv@divisor
  2487  099B  3000               	movlw	0
  2488  099C  00F8               	movwf	___awdiv@divisor+1
  2489  099D  0850               	movf	scale@scl,w
  2490  099E  00F9               	movwf	___awdiv@dividend
  2491  099F  01FA               	clrf	___awdiv@dividend+1
  2492  09A0  1BF9               	btfsc	___awdiv@dividend,7
  2493  09A1  03FA               	decf	___awdiv@dividend+1,f
  2494  09A2  160A  118A  2029  120A  158A  	fcall	___awdiv
  2495  09A7  0877               	movf	?___awdiv,w
  2496  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  2497  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  2498  09AA  00C7               	movwf	??_scale+5
  2499  09AB  3001               	movlw	1
  2500  09AC                     u4585:
  2501  09AC  1003               	clrc
  2502  09AD  0DC7               	rlf	??_scale+5,f
  2503  09AE  3EFF               	addlw	-1
  2504  09AF  1D03               	skipz
  2505  09B0  29AC               	goto	u4585
  2506  09B1  1003               	clrc
  2507  09B2  0D47               	rlf	??_scale+5,w
  2508  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2509  09B4  0084               	movwf	4
  2510  09B5  160A  158A  2000  120A  158A  	fcall	stringdir
  2511  09BA  00C8               	movwf	??_scale+6
  2512  09BB  160A  158A  2000  120A  158A  	fcall	stringdir
  2513  09C0  00C9               	movwf	??_scale+7
  2514  09C1  160A  158A  2000  120A  158A  	fcall	stringdir
  2515  09C6  00CA               	movwf	??_scale+8
  2516  09C7  160A  158A  2000  120A  158A  	fcall	stringdir
  2517  09CC  00CB               	movwf	??_scale+9
  2518  09CD  084B               	movf	??_scale+9,w
  2519  09CE  00AB               	movwf	___flmul@a+3
  2520  09CF  084A               	movf	??_scale+8,w
  2521  09D0  00AA               	movwf	___flmul@a+2
  2522  09D1  0849               	movf	??_scale+7,w
  2523  09D2  00A9               	movwf	___flmul@a+1
  2524  09D3  0848               	movf	??_scale+6,w
  2525  09D4  00A8               	movwf	___flmul@a
  2526  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  2527  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2528  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2529  09DC  0827               	movf	?___flmul+3,w
  2530  09DD  00CF               	movwf	_scale$843+3
  2531  09DE  0826               	movf	?___flmul+2,w
  2532  09DF  00CE               	movwf	_scale$843+2
  2533  09E0  0825               	movf	?___flmul+1,w
  2534  09E1  00CD               	movwf	_scale$843+1
  2535  09E2  0824               	movf	?___flmul,w
  2536  09E3  00CC               	movwf	_scale$843
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2539  09E4  300A               	movlw	10
  2540  09E5  00F0               	movwf	___awmod@divisor
  2541  09E6  3000               	movlw	0
  2542  09E7  00F1               	movwf	___awmod@divisor+1
  2543  09E8  0850               	movf	scale@scl,w
  2544  09E9  00F2               	movwf	___awmod@dividend
  2545  09EA  01F3               	clrf	___awmod@dividend+1
  2546  09EB  1BF2               	btfsc	___awmod@dividend,7
  2547  09EC  03F3               	decf	___awmod@dividend+1,f
  2548  09ED  160A  158A  22EE  120A  158A  	fcall	___awmod
  2549  09F2  0870               	movf	?___awmod,w
  2550  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  2551  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  2552  09F5  00C2               	movwf	??_scale
  2553  09F6  3001               	movlw	1
  2554  09F7                     u4595:
  2555  09F7  1003               	clrc
  2556  09F8  0DC2               	rlf	??_scale,f
  2557  09F9  3EFF               	addlw	-1
  2558  09FA  1D03               	skipz
  2559  09FB  29F7               	goto	u4595
  2560  09FC  1003               	clrc
  2561  09FD  0D42               	rlf	??_scale,w
  2562  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2563  09FF  0084               	movwf	4
  2564  0A00  160A  158A  2000  120A  158A  	fcall	stringdir
  2565  0A05  00C3               	movwf	??_scale+1
  2566  0A06  160A  158A  2000  120A  158A  	fcall	stringdir
  2567  0A0B  00C4               	movwf	??_scale+2
  2568  0A0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2569  0A11  00C5               	movwf	??_scale+3
  2570  0A12  160A  158A  2000  120A  158A  	fcall	stringdir
  2571  0A17  00C6               	movwf	??_scale+4
  2572  0A18  0846               	movf	??_scale+4,w
  2573  0A19  00A7               	movwf	___flmul@b+3
  2574  0A1A  0845               	movf	??_scale+3,w
  2575  0A1B  00A6               	movwf	___flmul@b+2
  2576  0A1C  0844               	movf	??_scale+2,w
  2577  0A1D  00A5               	movwf	___flmul@b+1
  2578  0A1E  0843               	movf	??_scale+1,w
  2579  0A1F  00A4               	movwf	___flmul@b
  2580  0A20  084F               	movf	_scale$843+3,w
  2581  0A21  00AB               	movwf	___flmul@a+3
  2582  0A22  084E               	movf	_scale$843+2,w
  2583  0A23  00AA               	movwf	___flmul@a+2
  2584  0A24  084D               	movf	_scale$843+1,w
  2585  0A25  00A9               	movwf	___flmul@a+1
  2586  0A26  084C               	movf	_scale$843,w
  2587  0A27  00A8               	movwf	___flmul@a
  2588  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  2589  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0A2F  0827               	movf	?___flmul+3,w
  2592  0A30  00C1               	movwf	?_scale+3
  2593  0A31  0826               	movf	?___flmul+2,w
  2594  0A32  00C0               	movwf	?_scale+2
  2595  0A33  0825               	movf	?___flmul+1,w
  2596  0A34  00BF               	movwf	?_scale+1
  2597  0A35  0824               	movf	?___flmul,w
  2598  0A36  00BE               	movwf	?_scale
  2599  0A37  2C9E               	goto	l203
  2600  0A38                     l2946:
  2601  0A38  0850               	movf	scale@scl,w
  2602  0A39  3A80               	xorlw	128
  2603  0A3A  3E75               	addlw	-139
  2604  0A3B  1C03               	skipc
  2605  0A3C  2A3E               	goto	u4601
  2606  0A3D  2A3F               	goto	u4600
  2607  0A3E                     u4601:
  2608  0A3E  2AC7               	goto	l2952
  2609  0A3F                     u4600:
  2610  0A3F                     l2948:
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2613  0A3F  300A               	movlw	10
  2614  0A40  00F0               	movwf	___awmod@divisor
  2615  0A41  3000               	movlw	0
  2616  0A42  00F1               	movwf	___awmod@divisor+1
  2617  0A43  0850               	movf	scale@scl,w
  2618  0A44  00F2               	movwf	___awmod@dividend
  2619  0A45  01F3               	clrf	___awmod@dividend+1
  2620  0A46  1BF2               	btfsc	___awmod@dividend,7
  2621  0A47  03F3               	decf	___awmod@dividend+1,f
  2622  0A48  160A  158A  22EE  120A  158A  	fcall	___awmod
  2623  0A4D  0870               	movf	?___awmod,w
  2624  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0A50  00C2               	movwf	??_scale
  2627  0A51  3001               	movlw	1
  2628  0A52                     u4615:
  2629  0A52  1003               	clrc
  2630  0A53  0DC2               	rlf	??_scale,f
  2631  0A54  3EFF               	addlw	-1
  2632  0A55  1D03               	skipz
  2633  0A56  2A52               	goto	u4615
  2634  0A57  1003               	clrc
  2635  0A58  0D42               	rlf	??_scale,w
  2636  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2637  0A5A  0084               	movwf	4
  2638  0A5B  160A  158A  2000  120A  158A  	fcall	stringdir
  2639  0A60  00C3               	movwf	??_scale+1
  2640  0A61  160A  158A  2000  120A  158A  	fcall	stringdir
  2641  0A66  00C4               	movwf	??_scale+2
  2642  0A67  160A  158A  2000  120A  158A  	fcall	stringdir
  2643  0A6C  00C5               	movwf	??_scale+3
  2644  0A6D  160A  158A  2000  120A  158A  	fcall	stringdir
  2645  0A72  00C6               	movwf	??_scale+4
  2646  0A73  0846               	movf	??_scale+4,w
  2647  0A74  00A7               	movwf	___flmul@b+3
  2648  0A75  0845               	movf	??_scale+3,w
  2649  0A76  00A6               	movwf	___flmul@b+2
  2650  0A77  0844               	movf	??_scale+2,w
  2651  0A78  00A5               	movwf	___flmul@b+1
  2652  0A79  0843               	movf	??_scale+1,w
  2653  0A7A  00A4               	movwf	___flmul@b
  2654  0A7B  300A               	movlw	10
  2655  0A7C  00F7               	movwf	___awdiv@divisor
  2656  0A7D  3000               	movlw	0
  2657  0A7E  00F8               	movwf	___awdiv@divisor+1
  2658  0A7F  0850               	movf	scale@scl,w
  2659  0A80  00F9               	movwf	___awdiv@dividend
  2660  0A81  01FA               	clrf	___awdiv@dividend+1
  2661  0A82  1BF9               	btfsc	___awdiv@dividend,7
  2662  0A83  03FA               	decf	___awdiv@dividend+1,f
  2663  0A84  160A  118A  2029  120A  158A  	fcall	___awdiv
  2664  0A89  0877               	movf	?___awdiv,w
  2665  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2666  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2667  0A8C  00C7               	movwf	??_scale+5
  2668  0A8D  3001               	movlw	1
  2669  0A8E                     u4625:
  2670  0A8E  1003               	clrc
  2671  0A8F  0DC7               	rlf	??_scale+5,f
  2672  0A90  3EFF               	addlw	-1
  2673  0A91  1D03               	skipz
  2674  0A92  2A8E               	goto	u4625
  2675  0A93  1003               	clrc
  2676  0A94  0D47               	rlf	??_scale+5,w
  2677  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2678  0A96  0084               	movwf	4
  2679  0A97  160A  158A  2000  120A  158A  	fcall	stringdir
  2680  0A9C  00C8               	movwf	??_scale+6
  2681  0A9D  160A  158A  2000  120A  158A  	fcall	stringdir
  2682  0AA2  00C9               	movwf	??_scale+7
  2683  0AA3  160A  158A  2000  120A  158A  	fcall	stringdir
  2684  0AA8  00CA               	movwf	??_scale+8
  2685  0AA9  160A  158A  2000  120A  158A  	fcall	stringdir
  2686  0AAE  00CB               	movwf	??_scale+9
  2687  0AAF  084B               	movf	??_scale+9,w
  2688  0AB0  00AB               	movwf	___flmul@a+3
  2689  0AB1  084A               	movf	??_scale+8,w
  2690  0AB2  00AA               	movwf	___flmul@a+2
  2691  0AB3  0849               	movf	??_scale+7,w
  2692  0AB4  00A9               	movwf	___flmul@a+1
  2693  0AB5  0848               	movf	??_scale+6,w
  2694  0AB6  00A8               	movwf	___flmul@a
  2695  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  2696  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0ABE  0827               	movf	?___flmul+3,w
  2699  0ABF  00C1               	movwf	?_scale+3
  2700  0AC0  0826               	movf	?___flmul+2,w
  2701  0AC1  00C0               	movwf	?_scale+2
  2702  0AC2  0825               	movf	?___flmul+1,w
  2703  0AC3  00BF               	movwf	?_scale+1
  2704  0AC4  0824               	movf	?___flmul,w
  2705  0AC5  00BE               	movwf	?_scale
  2706  0AC6  2C9E               	goto	l203
  2707  0AC7                     l2952:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2710  0AC7  0850               	movf	scale@scl,w
  2711  0AC8  00C2               	movwf	??_scale
  2712  0AC9  3001               	movlw	1
  2713  0ACA                     u4635:
  2714  0ACA  1003               	clrc
  2715  0ACB  0DC2               	rlf	??_scale,f
  2716  0ACC  3EFF               	addlw	-1
  2717  0ACD  1D03               	skipz
  2718  0ACE  2ACA               	goto	u4635
  2719  0ACF  1003               	clrc
  2720  0AD0  0D42               	rlf	??_scale,w
  2721  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2722  0AD2  0084               	movwf	4
  2723  0AD3  160A  158A  2000  120A  158A  	fcall	stringdir
  2724  0AD8  00C3               	movwf	??_scale+1
  2725  0AD9  160A  158A  2000  120A  158A  	fcall	stringdir
  2726  0ADE  00C4               	movwf	??_scale+2
  2727  0ADF  160A  158A  2000  120A  158A  	fcall	stringdir
  2728  0AE4  00C5               	movwf	??_scale+3
  2729  0AE5  160A  158A  2000  120A  158A  	fcall	stringdir
  2730  0AEA  00C6               	movwf	??_scale+4
  2731  0AEB  0846               	movf	??_scale+4,w
  2732  0AEC  00C1               	movwf	?_scale+3
  2733  0AED  0845               	movf	??_scale+3,w
  2734  0AEE  00C0               	movwf	?_scale+2
  2735  0AEF  0844               	movf	??_scale+2,w
  2736  0AF0  00BF               	movwf	?_scale+1
  2737  0AF1  0843               	movf	??_scale+1,w
  2738  0AF2  00BE               	movwf	?_scale
  2739  0AF3  2C9E               	goto	l203
  2740  0AF4                     l2956:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2743  0AF4  0850               	movf	scale@scl,w
  2744  0AF5  3A80               	xorlw	128
  2745  0AF6  3E12               	addlw	-238
  2746  0AF7  1C03               	skipc
  2747  0AF8  2AFA               	goto	u4641
  2748  0AF9  2AFB               	goto	u4640
  2749  0AFA                     u4641:
  2750  0AFA  2BE3               	goto	l2964
  2751  0AFB                     u4640:
  2752  0AFB                     l2958:
  2753                           
  2754                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2755  0AFB  300A               	movlw	10
  2756  0AFC  00F7               	movwf	___awdiv@divisor
  2757  0AFD  3000               	movlw	0
  2758  0AFE  00F8               	movwf	___awdiv@divisor+1
  2759  0AFF  0850               	movf	scale@scl,w
  2760  0B00  00F2               	movwf	___awmod@dividend
  2761  0B01  01F3               	clrf	___awmod@dividend+1
  2762  0B02  1BF2               	btfsc	___awmod@dividend,7
  2763  0B03  03F3               	decf	___awmod@dividend+1,f
  2764  0B04  3064               	movlw	100
  2765  0B05  00F0               	movwf	___awmod@divisor
  2766  0B06  3000               	movlw	0
  2767  0B07  00F1               	movwf	___awmod@divisor+1
  2768  0B08  160A  158A  22EE  120A  158A  	fcall	___awmod
  2769  0B0D  0871               	movf	?___awmod+1,w
  2770  0B0E  00FA               	movwf	___awdiv@dividend+1
  2771  0B0F  0870               	movf	?___awmod,w
  2772  0B10  00F9               	movwf	___awdiv@dividend
  2773  0B11  160A  118A  2029  120A  158A  	fcall	___awdiv
  2774  0B16  0877               	movf	?___awdiv,w
  2775  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0B19  00C2               	movwf	??_scale
  2778  0B1A  3001               	movlw	1
  2779  0B1B                     u4655:
  2780  0B1B  1003               	clrc
  2781  0B1C  0DC2               	rlf	??_scale,f
  2782  0B1D  3EFF               	addlw	-1
  2783  0B1E  1D03               	skipz
  2784  0B1F  2B1B               	goto	u4655
  2785  0B20  1003               	clrc
  2786  0B21  0D42               	rlf	??_scale,w
  2787  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2788  0B23  0084               	movwf	4
  2789  0B24  160A  158A  2000  120A  158A  	fcall	stringdir
  2790  0B29  00C3               	movwf	??_scale+1
  2791  0B2A  160A  158A  2000  120A  158A  	fcall	stringdir
  2792  0B2F  00C4               	movwf	??_scale+2
  2793  0B30  160A  158A  2000  120A  158A  	fcall	stringdir
  2794  0B35  00C5               	movwf	??_scale+3
  2795  0B36  160A  158A  2000  120A  158A  	fcall	stringdir
  2796  0B3B  00C6               	movwf	??_scale+4
  2797  0B3C  0846               	movf	??_scale+4,w
  2798  0B3D  00A7               	movwf	___flmul@b+3
  2799  0B3E  0845               	movf	??_scale+3,w
  2800  0B3F  00A6               	movwf	___flmul@b+2
  2801  0B40  0844               	movf	??_scale+2,w
  2802  0B41  00A5               	movwf	___flmul@b+1
  2803  0B42  0843               	movf	??_scale+1,w
  2804  0B43  00A4               	movwf	___flmul@b
  2805  0B44  3064               	movlw	100
  2806  0B45  00F7               	movwf	___awdiv@divisor
  2807  0B46  3000               	movlw	0
  2808  0B47  00F8               	movwf	___awdiv@divisor+1
  2809  0B48  0850               	movf	scale@scl,w
  2810  0B49  00F9               	movwf	___awdiv@dividend
  2811  0B4A  01FA               	clrf	___awdiv@dividend+1
  2812  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  2813  0B4C  03FA               	decf	___awdiv@dividend+1,f
  2814  0B4D  160A  118A  2029  120A  158A  	fcall	___awdiv
  2815  0B52  0877               	movf	?___awdiv,w
  2816  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2817  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2818  0B55  00C7               	movwf	??_scale+5
  2819  0B56  3001               	movlw	1
  2820  0B57                     u4665:
  2821  0B57  1003               	clrc
  2822  0B58  0DC7               	rlf	??_scale+5,f
  2823  0B59  3EFF               	addlw	-1
  2824  0B5A  1D03               	skipz
  2825  0B5B  2B57               	goto	u4665
  2826  0B5C  1003               	clrc
  2827  0B5D  0D47               	rlf	??_scale+5,w
  2828  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2829  0B5F  0084               	movwf	4
  2830  0B60  160A  158A  2000  120A  158A  	fcall	stringdir
  2831  0B65  00C8               	movwf	??_scale+6
  2832  0B66  160A  158A  2000  120A  158A  	fcall	stringdir
  2833  0B6B  00C9               	movwf	??_scale+7
  2834  0B6C  160A  158A  2000  120A  158A  	fcall	stringdir
  2835  0B71  00CA               	movwf	??_scale+8
  2836  0B72  160A  158A  2000  120A  158A  	fcall	stringdir
  2837  0B77  00CB               	movwf	??_scale+9
  2838  0B78  084B               	movf	??_scale+9,w
  2839  0B79  00AB               	movwf	___flmul@a+3
  2840  0B7A  084A               	movf	??_scale+8,w
  2841  0B7B  00AA               	movwf	___flmul@a+2
  2842  0B7C  0849               	movf	??_scale+7,w
  2843  0B7D  00A9               	movwf	___flmul@a+1
  2844  0B7E  0848               	movf	??_scale+6,w
  2845  0B7F  00A8               	movwf	___flmul@a
  2846  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  2847  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0B87  0827               	movf	?___flmul+3,w
  2850  0B88  00CF               	movwf	_scale$843+3
  2851  0B89  0826               	movf	?___flmul+2,w
  2852  0B8A  00CE               	movwf	_scale$843+2
  2853  0B8B  0825               	movf	?___flmul+1,w
  2854  0B8C  00CD               	movwf	_scale$843+1
  2855  0B8D  0824               	movf	?___flmul,w
  2856  0B8E  00CC               	movwf	_scale$843
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2859  0B8F  300A               	movlw	10
  2860  0B90  00F0               	movwf	___awmod@divisor
  2861  0B91  3000               	movlw	0
  2862  0B92  00F1               	movwf	___awmod@divisor+1
  2863  0B93  0850               	movf	scale@scl,w
  2864  0B94  00F2               	movwf	___awmod@dividend
  2865  0B95  01F3               	clrf	___awmod@dividend+1
  2866  0B96  1BF2               	btfsc	___awmod@dividend,7
  2867  0B97  03F3               	decf	___awmod@dividend+1,f
  2868  0B98  160A  158A  22EE  120A  158A  	fcall	___awmod
  2869  0B9D  0870               	movf	?___awmod,w
  2870  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0BA0  00C2               	movwf	??_scale
  2873  0BA1  3001               	movlw	1
  2874  0BA2                     u4675:
  2875  0BA2  1003               	clrc
  2876  0BA3  0DC2               	rlf	??_scale,f
  2877  0BA4  3EFF               	addlw	-1
  2878  0BA5  1D03               	skipz
  2879  0BA6  2BA2               	goto	u4675
  2880  0BA7  1003               	clrc
  2881  0BA8  0D42               	rlf	??_scale,w
  2882  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2883  0BAA  0084               	movwf	4
  2884  0BAB  160A  158A  2000  120A  158A  	fcall	stringdir
  2885  0BB0  00C3               	movwf	??_scale+1
  2886  0BB1  160A  158A  2000  120A  158A  	fcall	stringdir
  2887  0BB6  00C4               	movwf	??_scale+2
  2888  0BB7  160A  158A  2000  120A  158A  	fcall	stringdir
  2889  0BBC  00C5               	movwf	??_scale+3
  2890  0BBD  160A  158A  2000  120A  158A  	fcall	stringdir
  2891  0BC2  00C6               	movwf	??_scale+4
  2892  0BC3  0846               	movf	??_scale+4,w
  2893  0BC4  00A7               	movwf	___flmul@b+3
  2894  0BC5  0845               	movf	??_scale+3,w
  2895  0BC6  00A6               	movwf	___flmul@b+2
  2896  0BC7  0844               	movf	??_scale+2,w
  2897  0BC8  00A5               	movwf	___flmul@b+1
  2898  0BC9  0843               	movf	??_scale+1,w
  2899  0BCA  00A4               	movwf	___flmul@b
  2900  0BCB  084F               	movf	_scale$843+3,w
  2901  0BCC  00AB               	movwf	___flmul@a+3
  2902  0BCD  084E               	movf	_scale$843+2,w
  2903  0BCE  00AA               	movwf	___flmul@a+2
  2904  0BCF  084D               	movf	_scale$843+1,w
  2905  0BD0  00A9               	movwf	___flmul@a+1
  2906  0BD1  084C               	movf	_scale$843,w
  2907  0BD2  00A8               	movwf	___flmul@a
  2908  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  2909  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0BDA  0827               	movf	?___flmul+3,w
  2912  0BDB  00C1               	movwf	?_scale+3
  2913  0BDC  0826               	movf	?___flmul+2,w
  2914  0BDD  00C0               	movwf	?_scale+2
  2915  0BDE  0825               	movf	?___flmul+1,w
  2916  0BDF  00BF               	movwf	?_scale+1
  2917  0BE0  0824               	movf	?___flmul,w
  2918  0BE1  00BE               	movwf	?_scale
  2919  0BE2  2C9E               	goto	l203
  2920  0BE3                     l2964:
  2921  0BE3  0850               	movf	scale@scl,w
  2922  0BE4  3A80               	xorlw	128
  2923  0BE5  3E75               	addlw	-139
  2924  0BE6  1C03               	skipc
  2925  0BE7  2BE9               	goto	u4681
  2926  0BE8  2BEA               	goto	u4680
  2927  0BE9                     u4681:
  2928  0BE9  2C72               	goto	l2970
  2929  0BEA                     u4680:
  2930  0BEA                     l2966:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2933  0BEA  300A               	movlw	10
  2934  0BEB  00F0               	movwf	___awmod@divisor
  2935  0BEC  3000               	movlw	0
  2936  0BED  00F1               	movwf	___awmod@divisor+1
  2937  0BEE  0850               	movf	scale@scl,w
  2938  0BEF  00F2               	movwf	___awmod@dividend
  2939  0BF0  01F3               	clrf	___awmod@dividend+1
  2940  0BF1  1BF2               	btfsc	___awmod@dividend,7
  2941  0BF2  03F3               	decf	___awmod@dividend+1,f
  2942  0BF3  160A  158A  22EE  120A  158A  	fcall	___awmod
  2943  0BF8  0870               	movf	?___awmod,w
  2944  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0BFB  00C2               	movwf	??_scale
  2947  0BFC  3001               	movlw	1
  2948  0BFD                     u4695:
  2949  0BFD  1003               	clrc
  2950  0BFE  0DC2               	rlf	??_scale,f
  2951  0BFF  3EFF               	addlw	-1
  2952  0C00  1D03               	skipz
  2953  0C01  2BFD               	goto	u4695
  2954  0C02  1003               	clrc
  2955  0C03  0D42               	rlf	??_scale,w
  2956  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2957  0C05  0084               	movwf	4
  2958  0C06  160A  158A  2000  120A  158A  	fcall	stringdir
  2959  0C0B  00C3               	movwf	??_scale+1
  2960  0C0C  160A  158A  2000  120A  158A  	fcall	stringdir
  2961  0C11  00C4               	movwf	??_scale+2
  2962  0C12  160A  158A  2000  120A  158A  	fcall	stringdir
  2963  0C17  00C5               	movwf	??_scale+3
  2964  0C18  160A  158A  2000  120A  158A  	fcall	stringdir
  2965  0C1D  00C6               	movwf	??_scale+4
  2966  0C1E  0846               	movf	??_scale+4,w
  2967  0C1F  00A7               	movwf	___flmul@b+3
  2968  0C20  0845               	movf	??_scale+3,w
  2969  0C21  00A6               	movwf	___flmul@b+2
  2970  0C22  0844               	movf	??_scale+2,w
  2971  0C23  00A5               	movwf	___flmul@b+1
  2972  0C24  0843               	movf	??_scale+1,w
  2973  0C25  00A4               	movwf	___flmul@b
  2974  0C26  300A               	movlw	10
  2975  0C27  00F7               	movwf	___awdiv@divisor
  2976  0C28  3000               	movlw	0
  2977  0C29  00F8               	movwf	___awdiv@divisor+1
  2978  0C2A  0850               	movf	scale@scl,w
  2979  0C2B  00F9               	movwf	___awdiv@dividend
  2980  0C2C  01FA               	clrf	___awdiv@dividend+1
  2981  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  2982  0C2E  03FA               	decf	___awdiv@dividend+1,f
  2983  0C2F  160A  118A  2029  120A  158A  	fcall	___awdiv
  2984  0C34  0877               	movf	?___awdiv,w
  2985  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0C37  00C7               	movwf	??_scale+5
  2988  0C38  3001               	movlw	1
  2989  0C39                     u4705:
  2990  0C39  1003               	clrc
  2991  0C3A  0DC7               	rlf	??_scale+5,f
  2992  0C3B  3EFF               	addlw	-1
  2993  0C3C  1D03               	skipz
  2994  0C3D  2C39               	goto	u4705
  2995  0C3E  1003               	clrc
  2996  0C3F  0D47               	rlf	??_scale+5,w
  2997  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2998  0C41  0084               	movwf	4
  2999  0C42  160A  158A  2000  120A  158A  	fcall	stringdir
  3000  0C47  00C8               	movwf	??_scale+6
  3001  0C48  160A  158A  2000  120A  158A  	fcall	stringdir
  3002  0C4D  00C9               	movwf	??_scale+7
  3003  0C4E  160A  158A  2000  120A  158A  	fcall	stringdir
  3004  0C53  00CA               	movwf	??_scale+8
  3005  0C54  160A  158A  2000  120A  158A  	fcall	stringdir
  3006  0C59  00CB               	movwf	??_scale+9
  3007  0C5A  084B               	movf	??_scale+9,w
  3008  0C5B  00AB               	movwf	___flmul@a+3
  3009  0C5C  084A               	movf	??_scale+8,w
  3010  0C5D  00AA               	movwf	___flmul@a+2
  3011  0C5E  0849               	movf	??_scale+7,w
  3012  0C5F  00A9               	movwf	___flmul@a+1
  3013  0C60  0848               	movf	??_scale+6,w
  3014  0C61  00A8               	movwf	___flmul@a
  3015  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3016  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0C69  0827               	movf	?___flmul+3,w
  3019  0C6A  00C1               	movwf	?_scale+3
  3020  0C6B  0826               	movf	?___flmul+2,w
  3021  0C6C  00C0               	movwf	?_scale+2
  3022  0C6D  0825               	movf	?___flmul+1,w
  3023  0C6E  00BF               	movwf	?_scale+1
  3024  0C6F  0824               	movf	?___flmul,w
  3025  0C70  00BE               	movwf	?_scale
  3026  0C71  2C9E               	goto	l203
  3027  0C72                     l2970:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3030  0C72  0850               	movf	scale@scl,w
  3031  0C73  00C2               	movwf	??_scale
  3032  0C74  3001               	movlw	1
  3033  0C75                     u4715:
  3034  0C75  1003               	clrc
  3035  0C76  0DC2               	rlf	??_scale,f
  3036  0C77  3EFF               	addlw	-1
  3037  0C78  1D03               	skipz
  3038  0C79  2C75               	goto	u4715
  3039  0C7A  1003               	clrc
  3040  0C7B  0D42               	rlf	??_scale,w
  3041  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3042  0C7D  0084               	movwf	4
  3043  0C7E  160A  158A  2000  120A  158A  	fcall	stringdir
  3044  0C83  00C3               	movwf	??_scale+1
  3045  0C84  160A  158A  2000  120A  158A  	fcall	stringdir
  3046  0C89  00C4               	movwf	??_scale+2
  3047  0C8A  160A  158A  2000  120A  158A  	fcall	stringdir
  3048  0C8F  00C5               	movwf	??_scale+3
  3049  0C90  160A  158A  2000  120A  158A  	fcall	stringdir
  3050  0C95  00C6               	movwf	??_scale+4
  3051  0C96  0846               	movf	??_scale+4,w
  3052  0C97  00C1               	movwf	?_scale+3
  3053  0C98  0845               	movf	??_scale+3,w
  3054  0C99  00C0               	movwf	?_scale+2
  3055  0C9A  0844               	movf	??_scale+2,w
  3056  0C9B  00BF               	movwf	?_scale+1
  3057  0C9C  0843               	movf	??_scale+1,w
  3058  0C9D  00BE               	movwf	?_scale
  3059  0C9E                     l203:
  3060  0C9E  0008               	return
  3061  0C9F                     __end_of_scale:
  3062                           
  3063                           	psect	text3
  3064  1AEE                     __ptext3:	
  3065 ;; *************** function ___awmod *****************
  3066 ;; Defined at:
  3067 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  divisor         2    0[COMMON] int 
  3070 ;;  dividend        2    2[COMMON] int 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  sign            1    6[COMMON] unsigned char 
  3073 ;;  counter         1    5[COMMON] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    0[COMMON] int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         4       0       0       0       0
  3084 ;;      Locals:         2       0       0       0       0
  3085 ;;      Temps:          1       0       0       0       0
  3086 ;;      Totals:         7       0       0       0       0
  3087 ;;Total ram usage:        7 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_scale
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096  1AEE                     ___awmod:	
  3097                           ;psect for function ___awmod
  3098                           
  3099  1AEE                     l2466:	
  3100                           ;incstack = 0
  3101                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3102                           
  3103  1AEE  01F6               	clrf	___awmod@sign
  3104  1AEF                     l2468:
  3105  1AEF  1FF3               	btfss	___awmod@dividend+1,7
  3106  1AF0  2AF2               	goto	u3411
  3107  1AF1  2AF3               	goto	u3410
  3108  1AF2                     u3411:
  3109  1AF2  2AFA               	goto	l2474
  3110  1AF3                     u3410:
  3111  1AF3                     l2470:
  3112  1AF3  09F2               	comf	___awmod@dividend,f
  3113  1AF4  09F3               	comf	___awmod@dividend+1,f
  3114  1AF5  0AF2               	incf	___awmod@dividend,f
  3115  1AF6  1903               	skipnz
  3116  1AF7  0AF3               	incf	___awmod@dividend+1,f
  3117  1AF8                     l2472:
  3118  1AF8  01F6               	clrf	___awmod@sign
  3119  1AF9  0AF6               	incf	___awmod@sign,f
  3120  1AFA                     l2474:
  3121  1AFA  1FF1               	btfss	___awmod@divisor+1,7
  3122  1AFB  2AFD               	goto	u3421
  3123  1AFC  2AFE               	goto	u3420
  3124  1AFD                     u3421:
  3125  1AFD  2B03               	goto	l2478
  3126  1AFE                     u3420:
  3127  1AFE                     l2476:
  3128  1AFE  09F0               	comf	___awmod@divisor,f
  3129  1AFF  09F1               	comf	___awmod@divisor+1,f
  3130  1B00  0AF0               	incf	___awmod@divisor,f
  3131  1B01  1903               	skipnz
  3132  1B02  0AF1               	incf	___awmod@divisor+1,f
  3133  1B03                     l2478:
  3134  1B03  0870               	movf	___awmod@divisor,w
  3135  1B04  0471               	iorwf	___awmod@divisor+1,w
  3136  1B05  1903               	btfsc	3,2
  3137  1B06  2B08               	goto	u3431
  3138  1B07  2B09               	goto	u3430
  3139  1B08                     u3431:
  3140  1B08  2B38               	goto	l2496
  3141  1B09                     u3430:
  3142  1B09                     l2480:
  3143  1B09  01F5               	clrf	___awmod@counter
  3144  1B0A  0AF5               	incf	___awmod@counter,f
  3145  1B0B  2B17               	goto	l2486
  3146  1B0C                     l2482:
  3147  1B0C  3001               	movlw	1
  3148  1B0D                     u3445:
  3149  1B0D  1003               	clrc
  3150  1B0E  0DF0               	rlf	___awmod@divisor,f
  3151  1B0F  0DF1               	rlf	___awmod@divisor+1,f
  3152  1B10  3EFF               	addlw	-1
  3153  1B11  1D03               	skipz
  3154  1B12  2B0D               	goto	u3445
  3155  1B13                     l2484:
  3156  1B13  3001               	movlw	1
  3157  1B14  00F4               	movwf	??___awmod
  3158  1B15  0874               	movf	??___awmod,w
  3159  1B16  07F5               	addwf	___awmod@counter,f
  3160  1B17                     l2486:
  3161  1B17  1FF1               	btfss	___awmod@divisor+1,7
  3162  1B18  2B1A               	goto	u3451
  3163  1B19  2B1B               	goto	u3450
  3164  1B1A                     u3451:
  3165  1B1A  2B0C               	goto	l2482
  3166  1B1B                     u3450:
  3167  1B1B                     l2488:
  3168  1B1B  0871               	movf	___awmod@divisor+1,w
  3169  1B1C  0273               	subwf	___awmod@dividend+1,w
  3170  1B1D  1D03               	skipz
  3171  1B1E  2B21               	goto	u3465
  3172  1B1F  0870               	movf	___awmod@divisor,w
  3173  1B20  0272               	subwf	___awmod@dividend,w
  3174  1B21                     u3465:
  3175  1B21  1C03               	skipc
  3176  1B22  2B24               	goto	u3461
  3177  1B23  2B25               	goto	u3460
  3178  1B24                     u3461:
  3179  1B24  2B2B               	goto	l2492
  3180  1B25                     u3460:
  3181  1B25                     l2490:
  3182  1B25  0870               	movf	___awmod@divisor,w
  3183  1B26  02F2               	subwf	___awmod@dividend,f
  3184  1B27  0871               	movf	___awmod@divisor+1,w
  3185  1B28  1C03               	skipc
  3186  1B29  03F3               	decf	___awmod@dividend+1,f
  3187  1B2A  02F3               	subwf	___awmod@dividend+1,f
  3188  1B2B                     l2492:
  3189  1B2B  3001               	movlw	1
  3190  1B2C                     u3475:
  3191  1B2C  1003               	clrc
  3192  1B2D  0CF1               	rrf	___awmod@divisor+1,f
  3193  1B2E  0CF0               	rrf	___awmod@divisor,f
  3194  1B2F  3EFF               	addlw	-1
  3195  1B30  1D03               	skipz
  3196  1B31  2B2C               	goto	u3475
  3197  1B32                     l2494:
  3198  1B32  3001               	movlw	1
  3199  1B33  02F5               	subwf	___awmod@counter,f
  3200  1B34  1D03               	btfss	3,2
  3201  1B35  2B37               	goto	u3481
  3202  1B36  2B38               	goto	u3480
  3203  1B37                     u3481:
  3204  1B37  2B1B               	goto	l2488
  3205  1B38                     u3480:
  3206  1B38                     l2496:
  3207  1B38  0876               	movf	___awmod@sign,w
  3208  1B39  1903               	btfsc	3,2
  3209  1B3A  2B3C               	goto	u3491
  3210  1B3B  2B3D               	goto	u3490
  3211  1B3C                     u3491:
  3212  1B3C  2B42               	goto	l2500
  3213  1B3D                     u3490:
  3214  1B3D                     l2498:
  3215  1B3D  09F2               	comf	___awmod@dividend,f
  3216  1B3E  09F3               	comf	___awmod@dividend+1,f
  3217  1B3F  0AF2               	incf	___awmod@dividend,f
  3218  1B40  1903               	skipnz
  3219  1B41  0AF3               	incf	___awmod@dividend+1,f
  3220  1B42                     l2500:
  3221  1B42  0873               	movf	___awmod@dividend+1,w
  3222  1B43  00F1               	movwf	?___awmod+1
  3223  1B44  0872               	movf	___awmod@dividend,w
  3224  1B45  00F0               	movwf	?___awmod
  3225  1B46                     l483:
  3226  1B46  0008               	return
  3227  1B47                     __end_of___awmod:
  3228                           
  3229                           	psect	text4
  3230  1029                     __ptext4:	
  3231 ;; *************** function ___awdiv *****************
  3232 ;; Defined at:
  3233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  divisor         2    7[COMMON] int 
  3236 ;;  dividend        2    9[COMMON] int 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  quotient        2    2[BANK0 ] int 
  3239 ;;  sign            1    1[BANK0 ] unsigned char 
  3240 ;;  counter         1    0[BANK0 ] unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  2    7[COMMON] int 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3250 ;;      Params:         4       0       0       0       0
  3251 ;;      Locals:         0       4       0       0       0
  3252 ;;      Temps:          1       0       0       0       0
  3253 ;;      Totals:         5       4       0       0       0
  3254 ;;Total ram usage:        9 bytes
  3255 ;; Hardware stack levels used: 1
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_scale
  3260 ;;		_sprintf
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264  1029                     ___awdiv:	
  3265                           ;psect for function ___awdiv
  3266                           
  3267  1029                     l2422:	
  3268                           ;incstack = 0
  3269                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3270                           
  3271  1029  1283               	bcf	3,5	;RP0=0, select bank0
  3272  102A  1303               	bcf	3,6	;RP1=0, select bank0
  3273  102B  01A1               	clrf	___awdiv@sign
  3274  102C                     l2424:
  3275  102C  1FF8               	btfss	___awdiv@divisor+1,7
  3276  102D  282F               	goto	u3311
  3277  102E  2830               	goto	u3310
  3278  102F                     u3311:
  3279  102F  2837               	goto	l2430
  3280  1030                     u3310:
  3281  1030                     l2426:
  3282  1030  09F7               	comf	___awdiv@divisor,f
  3283  1031  09F8               	comf	___awdiv@divisor+1,f
  3284  1032  0AF7               	incf	___awdiv@divisor,f
  3285  1033  1903               	skipnz
  3286  1034  0AF8               	incf	___awdiv@divisor+1,f
  3287  1035                     l2428:
  3288  1035  01A1               	clrf	___awdiv@sign
  3289  1036  0AA1               	incf	___awdiv@sign,f
  3290  1037                     l2430:
  3291  1037  1FFA               	btfss	___awdiv@dividend+1,7
  3292  1038  283A               	goto	u3321
  3293  1039  283B               	goto	u3320
  3294  103A                     u3321:
  3295  103A  2844               	goto	l2436
  3296  103B                     u3320:
  3297  103B                     l2432:
  3298  103B  09F9               	comf	___awdiv@dividend,f
  3299  103C  09FA               	comf	___awdiv@dividend+1,f
  3300  103D  0AF9               	incf	___awdiv@dividend,f
  3301  103E  1903               	skipnz
  3302  103F  0AFA               	incf	___awdiv@dividend+1,f
  3303  1040                     l2434:
  3304  1040  3001               	movlw	1
  3305  1041  00FB               	movwf	??___awdiv
  3306  1042  087B               	movf	??___awdiv,w
  3307  1043  06A1               	xorwf	___awdiv@sign,f
  3308  1044                     l2436:
  3309  1044  01A2               	clrf	___awdiv@quotient
  3310  1045  01A3               	clrf	___awdiv@quotient+1
  3311  1046                     l2438:
  3312  1046  0877               	movf	___awdiv@divisor,w
  3313  1047  0478               	iorwf	___awdiv@divisor+1,w
  3314  1048  1903               	btfsc	3,2
  3315  1049  284B               	goto	u3331
  3316  104A  284C               	goto	u3330
  3317  104B                     u3331:
  3318  104B  2883               	goto	l2458
  3319  104C                     u3330:
  3320  104C                     l2440:
  3321  104C  01A0               	clrf	___awdiv@counter
  3322  104D  0AA0               	incf	___awdiv@counter,f
  3323  104E  285A               	goto	l2446
  3324  104F                     l2442:
  3325  104F  3001               	movlw	1
  3326  1050                     u3345:
  3327  1050  1003               	clrc
  3328  1051  0DF7               	rlf	___awdiv@divisor,f
  3329  1052  0DF8               	rlf	___awdiv@divisor+1,f
  3330  1053  3EFF               	addlw	-1
  3331  1054  1D03               	skipz
  3332  1055  2850               	goto	u3345
  3333  1056                     l2444:
  3334  1056  3001               	movlw	1
  3335  1057  00FB               	movwf	??___awdiv
  3336  1058  087B               	movf	??___awdiv,w
  3337  1059  07A0               	addwf	___awdiv@counter,f
  3338  105A                     l2446:
  3339  105A  1FF8               	btfss	___awdiv@divisor+1,7
  3340  105B  285D               	goto	u3351
  3341  105C  285E               	goto	u3350
  3342  105D                     u3351:
  3343  105D  284F               	goto	l2442
  3344  105E                     u3350:
  3345  105E                     l2448:
  3346  105E  3001               	movlw	1
  3347  105F                     u3365:
  3348  105F  1003               	clrc
  3349  1060  0DA2               	rlf	___awdiv@quotient,f
  3350  1061  0DA3               	rlf	___awdiv@quotient+1,f
  3351  1062  3EFF               	addlw	-1
  3352  1063  1D03               	skipz
  3353  1064  285F               	goto	u3365
  3354  1065  0878               	movf	___awdiv@divisor+1,w
  3355  1066  027A               	subwf	___awdiv@dividend+1,w
  3356  1067  1D03               	skipz
  3357  1068  286B               	goto	u3375
  3358  1069  0877               	movf	___awdiv@divisor,w
  3359  106A  0279               	subwf	___awdiv@dividend,w
  3360  106B                     u3375:
  3361  106B  1C03               	skipc
  3362  106C  286E               	goto	u3371
  3363  106D  286F               	goto	u3370
  3364  106E                     u3371:
  3365  106E  2876               	goto	l2454
  3366  106F                     u3370:
  3367  106F                     l2450:
  3368  106F  0877               	movf	___awdiv@divisor,w
  3369  1070  02F9               	subwf	___awdiv@dividend,f
  3370  1071  0878               	movf	___awdiv@divisor+1,w
  3371  1072  1C03               	skipc
  3372  1073  03FA               	decf	___awdiv@dividend+1,f
  3373  1074  02FA               	subwf	___awdiv@dividend+1,f
  3374  1075                     l2452:
  3375  1075  1422               	bsf	___awdiv@quotient,0
  3376  1076                     l2454:
  3377  1076  3001               	movlw	1
  3378  1077                     u3385:
  3379  1077  1003               	clrc
  3380  1078  0CF8               	rrf	___awdiv@divisor+1,f
  3381  1079  0CF7               	rrf	___awdiv@divisor,f
  3382  107A  3EFF               	addlw	-1
  3383  107B  1D03               	skipz
  3384  107C  2877               	goto	u3385
  3385  107D                     l2456:
  3386  107D  3001               	movlw	1
  3387  107E  02A0               	subwf	___awdiv@counter,f
  3388  107F  1D03               	btfss	3,2
  3389  1080  2882               	goto	u3391
  3390  1081  2883               	goto	u3390
  3391  1082                     u3391:
  3392  1082  285E               	goto	l2448
  3393  1083                     u3390:
  3394  1083                     l2458:
  3395  1083  0821               	movf	___awdiv@sign,w
  3396  1084  1903               	btfsc	3,2
  3397  1085  2887               	goto	u3401
  3398  1086  2888               	goto	u3400
  3399  1087                     u3401:
  3400  1087  288D               	goto	l2462
  3401  1088                     u3400:
  3402  1088                     l2460:
  3403  1088  09A2               	comf	___awdiv@quotient,f
  3404  1089  09A3               	comf	___awdiv@quotient+1,f
  3405  108A  0AA2               	incf	___awdiv@quotient,f
  3406  108B  1903               	skipnz
  3407  108C  0AA3               	incf	___awdiv@quotient+1,f
  3408  108D                     l2462:
  3409  108D  0823               	movf	___awdiv@quotient+1,w
  3410  108E  00F8               	movwf	?___awdiv+1
  3411  108F  0822               	movf	___awdiv@quotient,w
  3412  1090  00F7               	movwf	?___awdiv
  3413  1091                     l470:
  3414  1091  0008               	return
  3415  1092                     __end_of___awdiv:
  3416                           
  3417                           	psect	text5
  3418  18D9                     __ptext5:	
  3419 ;; *************** function _isdigit *****************
  3420 ;; Defined at:
  3421 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\isdigit.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  c               1    wreg     unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  c               1    1[COMMON] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;		None               void
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         2       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0
  3438 ;;      Totals:         2       0       0       0       0
  3439 ;;Total ram usage:        2 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_sprintf
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448  18D9                     _isdigit:	
  3449                           ;psect for function _isdigit
  3450                           
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3454                           ;isdigit@c stored from wreg
  3455  18D9  00F1               	movwf	isdigit@c
  3456  18DA                     l2974:
  3457  18DA  01F0               	clrf	_isdigit$654
  3458  18DB                     l2976:
  3459  18DB  303A               	movlw	58
  3460  18DC  0271               	subwf	isdigit@c,w
  3461  18DD  1803               	skipnc
  3462  18DE  28E0               	goto	u4721
  3463  18DF  28E1               	goto	u4720
  3464  18E0                     u4721:
  3465  18E0  28E9               	goto	l2982
  3466  18E1                     u4720:
  3467  18E1                     l2978:
  3468  18E1  3030               	movlw	48
  3469  18E2  0271               	subwf	isdigit@c,w
  3470  18E3  1C03               	skipc
  3471  18E4  28E6               	goto	u4731
  3472  18E5  28E7               	goto	u4730
  3473  18E6                     u4731:
  3474  18E6  28E9               	goto	l2982
  3475  18E7                     u4730:
  3476  18E7                     l2980:
  3477  18E7  01F0               	clrf	_isdigit$654
  3478  18E8  0AF0               	incf	_isdigit$654,f
  3479  18E9                     l2982:
  3480  18E9  0C70               	rrf	_isdigit$654,w
  3481  18EA                     l804:
  3482  18EA  0008               	return
  3483  18EB                     __end_of_isdigit:
  3484                           
  3485                           	psect	text6
  3486  1092                     __ptext6:	
  3487 ;; *************** function _fround *****************
  3488 ;; Defined at:
  3489 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  prec            1    wreg     unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  prec            1   49[BANK0 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  4   30[BANK0 ] unsigned char 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       4       0       0       0
  3504 ;;      Locals:         0       9       0       0       0
  3505 ;;      Temps:          0       7       0       0       0
  3506 ;;      Totals:         0      20       0       0       0
  3507 ;;Total ram usage:       20 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 2
  3510 ;; This function calls:
  3511 ;;		___flmul
  3512 ;;		___lwdiv
  3513 ;;		___lwmod
  3514 ;; This function is called by:
  3515 ;;		_sprintf
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519  1092                     _fround:	
  3520                           ;psect for function _fround
  3521                           
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3525                           ;fround@prec stored from wreg
  3526  1092  1283               	bcf	3,5	;RP0=0, select bank0
  3527  1093  1303               	bcf	3,6	;RP1=0, select bank0
  3528  1094  00D1               	movwf	fround@prec
  3529  1095                     l2916:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3532  1095  306E               	movlw	110
  3533  1096  0251               	subwf	fround@prec,w
  3534  1097  1C03               	skipc
  3535  1098  289A               	goto	u4471
  3536  1099  289B               	goto	u4470
  3537  109A                     u4471:
  3538  109A  29A8               	goto	l2924
  3539  109B                     u4470:
  3540  109B                     l2918:
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3543  109B  303F               	movlw	63
  3544  109C  00A7               	movwf	___flmul@b+3
  3545  109D  3000               	movlw	0
  3546  109E  00A6               	movwf	___flmul@b+2
  3547  109F  3000               	movlw	0
  3548  10A0  00A5               	movwf	___flmul@b+1
  3549  10A1  3000               	movlw	0
  3550  10A2  00A4               	movwf	___flmul@b
  3551  10A3  3064               	movlw	100
  3552  10A4  00F6               	movwf	___lwdiv@divisor
  3553  10A5  3000               	movlw	0
  3554  10A6  00F7               	movwf	___lwdiv@divisor+1
  3555  10A7  0851               	movf	fround@prec,w
  3556  10A8  00C2               	movwf	??_fround
  3557  10A9  01C3               	clrf	??_fround+1
  3558  10AA  0842               	movf	??_fround,w
  3559  10AB  00F8               	movwf	___lwdiv@dividend
  3560  10AC  0843               	movf	??_fround+1,w
  3561  10AD  00F9               	movwf	___lwdiv@dividend+1
  3562  10AE  160A  158A  2202  160A  118A  	fcall	___lwdiv
  3563  10B3  0876               	movf	?___lwdiv,w
  3564  10B4  1283               	bcf	3,5	;RP0=0, select bank0
  3565  10B5  1303               	bcf	3,6	;RP1=0, select bank0
  3566  10B6  00C4               	movwf	??_fround+2
  3567  10B7  3001               	movlw	1
  3568  10B8                     u4485:
  3569  10B8  1003               	clrc
  3570  10B9  0DC4               	rlf	??_fround+2,f
  3571  10BA  3EFF               	addlw	-1
  3572  10BB  1D03               	skipz
  3573  10BC  28B8               	goto	u4485
  3574  10BD  1003               	clrc
  3575  10BE  0D44               	rlf	??_fround+2,w
  3576  10BF  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3577  10C0  0084               	movwf	4
  3578  10C1  160A  158A  2000  160A  118A  	fcall	stringdir
  3579  10C6  00C5               	movwf	??_fround+3
  3580  10C7  160A  158A  2000  160A  118A  	fcall	stringdir
  3581  10CC  00C6               	movwf	??_fround+4
  3582  10CD  160A  158A  2000  160A  118A  	fcall	stringdir
  3583  10D2  00C7               	movwf	??_fround+5
  3584  10D3  160A  158A  2000  160A  118A  	fcall	stringdir
  3585  10D8  00C8               	movwf	??_fround+6
  3586  10D9  0848               	movf	??_fround+6,w
  3587  10DA  00AB               	movwf	___flmul@a+3
  3588  10DB  0847               	movf	??_fround+5,w
  3589  10DC  00AA               	movwf	___flmul@a+2
  3590  10DD  0846               	movf	??_fround+4,w
  3591  10DE  00A9               	movwf	___flmul@a+1
  3592  10DF  0845               	movf	??_fround+3,w
  3593  10E0  00A8               	movwf	___flmul@a
  3594  10E1  120A  158A  249F  160A  118A  	fcall	___flmul
  3595  10E6  1283               	bcf	3,5	;RP0=0, select bank0
  3596  10E7  1303               	bcf	3,6	;RP1=0, select bank0
  3597  10E8  0827               	movf	?___flmul+3,w
  3598  10E9  00D0               	movwf	_fround$841+3
  3599  10EA  0826               	movf	?___flmul+2,w
  3600  10EB  00CF               	movwf	_fround$841+2
  3601  10EC  0825               	movf	?___flmul+1,w
  3602  10ED  00CE               	movwf	_fround$841+1
  3603  10EE  0824               	movf	?___flmul,w
  3604  10EF  00CD               	movwf	_fround$841
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3607  10F0  300A               	movlw	10
  3608  10F1  00F6               	movwf	___lwdiv@divisor
  3609  10F2  3000               	movlw	0
  3610  10F3  00F7               	movwf	___lwdiv@divisor+1
  3611  10F4  0851               	movf	fround@prec,w
  3612  10F5  00C2               	movwf	??_fround
  3613  10F6  01C3               	clrf	??_fround+1
  3614  10F7  0842               	movf	??_fround,w
  3615  10F8  00F2               	movwf	___lwmod@dividend
  3616  10F9  0843               	movf	??_fround+1,w
  3617  10FA  00F3               	movwf	___lwmod@dividend+1
  3618  10FB  3064               	movlw	100
  3619  10FC  00F0               	movwf	___lwmod@divisor
  3620  10FD  3000               	movlw	0
  3621  10FE  00F1               	movwf	___lwmod@divisor+1
  3622  10FF  160A  158A  21C8  160A  118A  	fcall	___lwmod
  3623  1104  0871               	movf	?___lwmod+1,w
  3624  1105  00F9               	movwf	___lwdiv@dividend+1
  3625  1106  0870               	movf	?___lwmod,w
  3626  1107  00F8               	movwf	___lwdiv@dividend
  3627  1108  160A  158A  2202  160A  118A  	fcall	___lwdiv
  3628  110D  0876               	movf	?___lwdiv,w
  3629  110E  1283               	bcf	3,5	;RP0=0, select bank0
  3630  110F  1303               	bcf	3,6	;RP1=0, select bank0
  3631  1110  00C4               	movwf	??_fround+2
  3632  1111  3001               	movlw	1
  3633  1112                     u4495:
  3634  1112  1003               	clrc
  3635  1113  0DC4               	rlf	??_fround+2,f
  3636  1114  3EFF               	addlw	-1
  3637  1115  1D03               	skipz
  3638  1116  2912               	goto	u4495
  3639  1117  1003               	clrc
  3640  1118  0D44               	rlf	??_fround+2,w
  3641  1119  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3642  111A  0084               	movwf	4
  3643  111B  160A  158A  2000  160A  118A  	fcall	stringdir
  3644  1120  00C5               	movwf	??_fround+3
  3645  1121  160A  158A  2000  160A  118A  	fcall	stringdir
  3646  1126  00C6               	movwf	??_fround+4
  3647  1127  160A  158A  2000  160A  118A  	fcall	stringdir
  3648  112C  00C7               	movwf	??_fround+5
  3649  112D  160A  158A  2000  160A  118A  	fcall	stringdir
  3650  1132  00C8               	movwf	??_fround+6
  3651  1133  0848               	movf	??_fround+6,w
  3652  1134  00A7               	movwf	___flmul@b+3
  3653  1135  0847               	movf	??_fround+5,w
  3654  1136  00A6               	movwf	___flmul@b+2
  3655  1137  0846               	movf	??_fround+4,w
  3656  1138  00A5               	movwf	___flmul@b+1
  3657  1139  0845               	movf	??_fround+3,w
  3658  113A  00A4               	movwf	___flmul@b
  3659  113B  0850               	movf	_fround$841+3,w
  3660  113C  00AB               	movwf	___flmul@a+3
  3661  113D  084F               	movf	_fround$841+2,w
  3662  113E  00AA               	movwf	___flmul@a+2
  3663  113F  084E               	movf	_fround$841+1,w
  3664  1140  00A9               	movwf	___flmul@a+1
  3665  1141  084D               	movf	_fround$841,w
  3666  1142  00A8               	movwf	___flmul@a
  3667  1143  120A  158A  249F  160A  118A  	fcall	___flmul
  3668  1148  1283               	bcf	3,5	;RP0=0, select bank0
  3669  1149  1303               	bcf	3,6	;RP1=0, select bank0
  3670  114A  0827               	movf	?___flmul+3,w
  3671  114B  00CC               	movwf	_fround$842+3
  3672  114C  0826               	movf	?___flmul+2,w
  3673  114D  00CB               	movwf	_fround$842+2
  3674  114E  0825               	movf	?___flmul+1,w
  3675  114F  00CA               	movwf	_fround$842+1
  3676  1150  0824               	movf	?___flmul,w
  3677  1151  00C9               	movwf	_fround$842
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3680  1152  300A               	movlw	10
  3681  1153  00F0               	movwf	___lwmod@divisor
  3682  1154  3000               	movlw	0
  3683  1155  00F1               	movwf	___lwmod@divisor+1
  3684  1156  0851               	movf	fround@prec,w
  3685  1157  00C2               	movwf	??_fround
  3686  1158  01C3               	clrf	??_fround+1
  3687  1159  0842               	movf	??_fround,w
  3688  115A  00F2               	movwf	___lwmod@dividend
  3689  115B  0843               	movf	??_fround+1,w
  3690  115C  00F3               	movwf	___lwmod@dividend+1
  3691  115D  160A  158A  21C8  160A  118A  	fcall	___lwmod
  3692  1162  0870               	movf	?___lwmod,w
  3693  1163  1283               	bcf	3,5	;RP0=0, select bank0
  3694  1164  1303               	bcf	3,6	;RP1=0, select bank0
  3695  1165  00C4               	movwf	??_fround+2
  3696  1166  3001               	movlw	1
  3697  1167                     u4505:
  3698  1167  1003               	clrc
  3699  1168  0DC4               	rlf	??_fround+2,f
  3700  1169  3EFF               	addlw	-1
  3701  116A  1D03               	skipz
  3702  116B  2967               	goto	u4505
  3703  116C  1003               	clrc
  3704  116D  0D44               	rlf	??_fround+2,w
  3705  116E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3706  116F  0084               	movwf	4
  3707  1170  160A  158A  2000  160A  118A  	fcall	stringdir
  3708  1175  00C5               	movwf	??_fround+3
  3709  1176  160A  158A  2000  160A  118A  	fcall	stringdir
  3710  117B  00C6               	movwf	??_fround+4
  3711  117C  160A  158A  2000  160A  118A  	fcall	stringdir
  3712  1181  00C7               	movwf	??_fround+5
  3713  1182  160A  158A  2000  160A  118A  	fcall	stringdir
  3714  1187  00C8               	movwf	??_fround+6
  3715  1188  0848               	movf	??_fround+6,w
  3716  1189  00A7               	movwf	___flmul@b+3
  3717  118A  0847               	movf	??_fround+5,w
  3718  118B  00A6               	movwf	___flmul@b+2
  3719  118C  0846               	movf	??_fround+4,w
  3720  118D  00A5               	movwf	___flmul@b+1
  3721  118E  0845               	movf	??_fround+3,w
  3722  118F  00A4               	movwf	___flmul@b
  3723  1190  084C               	movf	_fround$842+3,w
  3724  1191  00AB               	movwf	___flmul@a+3
  3725  1192  084B               	movf	_fround$842+2,w
  3726  1193  00AA               	movwf	___flmul@a+2
  3727  1194  084A               	movf	_fround$842+1,w
  3728  1195  00A9               	movwf	___flmul@a+1
  3729  1196  0849               	movf	_fround$842,w
  3730  1197  00A8               	movwf	___flmul@a
  3731  1198  120A  158A  249F  160A  118A  	fcall	___flmul
  3732  119D  1283               	bcf	3,5	;RP0=0, select bank0
  3733  119E  1303               	bcf	3,6	;RP1=0, select bank0
  3734  119F  0827               	movf	?___flmul+3,w
  3735  11A0  00C1               	movwf	?_fround+3
  3736  11A1  0826               	movf	?___flmul+2,w
  3737  11A2  00C0               	movwf	?_fround+2
  3738  11A3  0825               	movf	?___flmul+1,w
  3739  11A4  00BF               	movwf	?_fround+1
  3740  11A5  0824               	movf	?___flmul,w
  3741  11A6  00BE               	movwf	?_fround
  3742  11A7  2A9C               	goto	l196
  3743  11A8                     l2924:
  3744  11A8  300B               	movlw	11
  3745  11A9  0251               	subwf	fround@prec,w
  3746  11AA  1C03               	skipc
  3747  11AB  29AD               	goto	u4511
  3748  11AC  29AE               	goto	u4510
  3749  11AD                     u4511:
  3750  11AD  2A59               	goto	l2930
  3751  11AE                     u4510:
  3752  11AE                     l2926:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3755  11AE  303F               	movlw	63
  3756  11AF  00A7               	movwf	___flmul@b+3
  3757  11B0  3000               	movlw	0
  3758  11B1  00A6               	movwf	___flmul@b+2
  3759  11B2  3000               	movlw	0
  3760  11B3  00A5               	movwf	___flmul@b+1
  3761  11B4  3000               	movlw	0
  3762  11B5  00A4               	movwf	___flmul@b
  3763  11B6  300A               	movlw	10
  3764  11B7  00F6               	movwf	___lwdiv@divisor
  3765  11B8  3000               	movlw	0
  3766  11B9  00F7               	movwf	___lwdiv@divisor+1
  3767  11BA  0851               	movf	fround@prec,w
  3768  11BB  00C2               	movwf	??_fround
  3769  11BC  01C3               	clrf	??_fround+1
  3770  11BD  0842               	movf	??_fround,w
  3771  11BE  00F8               	movwf	___lwdiv@dividend
  3772  11BF  0843               	movf	??_fround+1,w
  3773  11C0  00F9               	movwf	___lwdiv@dividend+1
  3774  11C1  160A  158A  2202  160A  118A  	fcall	___lwdiv
  3775  11C6  0876               	movf	?___lwdiv,w
  3776  11C7  1283               	bcf	3,5	;RP0=0, select bank0
  3777  11C8  1303               	bcf	3,6	;RP1=0, select bank0
  3778  11C9  00C4               	movwf	??_fround+2
  3779  11CA  3001               	movlw	1
  3780  11CB                     u4525:
  3781  11CB  1003               	clrc
  3782  11CC  0DC4               	rlf	??_fround+2,f
  3783  11CD  3EFF               	addlw	-1
  3784  11CE  1D03               	skipz
  3785  11CF  29CB               	goto	u4525
  3786  11D0  1003               	clrc
  3787  11D1  0D44               	rlf	??_fround+2,w
  3788  11D2  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3789  11D3  0084               	movwf	4
  3790  11D4  160A  158A  2000  160A  118A  	fcall	stringdir
  3791  11D9  00C5               	movwf	??_fround+3
  3792  11DA  160A  158A  2000  160A  118A  	fcall	stringdir
  3793  11DF  00C6               	movwf	??_fround+4
  3794  11E0  160A  158A  2000  160A  118A  	fcall	stringdir
  3795  11E5  00C7               	movwf	??_fround+5
  3796  11E6  160A  158A  2000  160A  118A  	fcall	stringdir
  3797  11EB  00C8               	movwf	??_fround+6
  3798  11EC  0848               	movf	??_fround+6,w
  3799  11ED  00AB               	movwf	___flmul@a+3
  3800  11EE  0847               	movf	??_fround+5,w
  3801  11EF  00AA               	movwf	___flmul@a+2
  3802  11F0  0846               	movf	??_fround+4,w
  3803  11F1  00A9               	movwf	___flmul@a+1
  3804  11F2  0845               	movf	??_fround+3,w
  3805  11F3  00A8               	movwf	___flmul@a
  3806  11F4  120A  158A  249F  160A  118A  	fcall	___flmul
  3807  11F9  1283               	bcf	3,5	;RP0=0, select bank0
  3808  11FA  1303               	bcf	3,6	;RP1=0, select bank0
  3809  11FB  0827               	movf	?___flmul+3,w
  3810  11FC  00D0               	movwf	_fround$841+3
  3811  11FD  0826               	movf	?___flmul+2,w
  3812  11FE  00CF               	movwf	_fround$841+2
  3813  11FF  0825               	movf	?___flmul+1,w
  3814  1200  00CE               	movwf	_fround$841+1
  3815  1201  0824               	movf	?___flmul,w
  3816  1202  00CD               	movwf	_fround$841
  3817                           
  3818                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3819  1203  300A               	movlw	10
  3820  1204  00F0               	movwf	___lwmod@divisor
  3821  1205  3000               	movlw	0
  3822  1206  00F1               	movwf	___lwmod@divisor+1
  3823  1207  0851               	movf	fround@prec,w
  3824  1208  00C2               	movwf	??_fround
  3825  1209  01C3               	clrf	??_fround+1
  3826  120A  0842               	movf	??_fround,w
  3827  120B  00F2               	movwf	___lwmod@dividend
  3828  120C  0843               	movf	??_fround+1,w
  3829  120D  00F3               	movwf	___lwmod@dividend+1
  3830  120E  160A  158A  21C8  160A  118A  	fcall	___lwmod
  3831  1213  0870               	movf	?___lwmod,w
  3832  1214  1283               	bcf	3,5	;RP0=0, select bank0
  3833  1215  1303               	bcf	3,6	;RP1=0, select bank0
  3834  1216  00C4               	movwf	??_fround+2
  3835  1217  3001               	movlw	1
  3836  1218                     u4535:
  3837  1218  1003               	clrc
  3838  1219  0DC4               	rlf	??_fround+2,f
  3839  121A  3EFF               	addlw	-1
  3840  121B  1D03               	skipz
  3841  121C  2A18               	goto	u4535
  3842  121D  1003               	clrc
  3843  121E  0D44               	rlf	??_fround+2,w
  3844  121F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3845  1220  0084               	movwf	4
  3846  1221  160A  158A  2000  160A  118A  	fcall	stringdir
  3847  1226  00C5               	movwf	??_fround+3
  3848  1227  160A  158A  2000  160A  118A  	fcall	stringdir
  3849  122C  00C6               	movwf	??_fround+4
  3850  122D  160A  158A  2000  160A  118A  	fcall	stringdir
  3851  1232  00C7               	movwf	??_fround+5
  3852  1233  160A  158A  2000  160A  118A  	fcall	stringdir
  3853  1238  00C8               	movwf	??_fround+6
  3854  1239  0848               	movf	??_fround+6,w
  3855  123A  00A7               	movwf	___flmul@b+3
  3856  123B  0847               	movf	??_fround+5,w
  3857  123C  00A6               	movwf	___flmul@b+2
  3858  123D  0846               	movf	??_fround+4,w
  3859  123E  00A5               	movwf	___flmul@b+1
  3860  123F  0845               	movf	??_fround+3,w
  3861  1240  00A4               	movwf	___flmul@b
  3862  1241  0850               	movf	_fround$841+3,w
  3863  1242  00AB               	movwf	___flmul@a+3
  3864  1243  084F               	movf	_fround$841+2,w
  3865  1244  00AA               	movwf	___flmul@a+2
  3866  1245  084E               	movf	_fround$841+1,w
  3867  1246  00A9               	movwf	___flmul@a+1
  3868  1247  084D               	movf	_fround$841,w
  3869  1248  00A8               	movwf	___flmul@a
  3870  1249  120A  158A  249F  160A  118A  	fcall	___flmul
  3871  124E  1283               	bcf	3,5	;RP0=0, select bank0
  3872  124F  1303               	bcf	3,6	;RP1=0, select bank0
  3873  1250  0827               	movf	?___flmul+3,w
  3874  1251  00C1               	movwf	?_fround+3
  3875  1252  0826               	movf	?___flmul+2,w
  3876  1253  00C0               	movwf	?_fround+2
  3877  1254  0825               	movf	?___flmul+1,w
  3878  1255  00BF               	movwf	?_fround+1
  3879  1256  0824               	movf	?___flmul,w
  3880  1257  00BE               	movwf	?_fround
  3881  1258  2A9C               	goto	l196
  3882  1259                     l2930:
  3883                           
  3884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3885  1259  303F               	movlw	63
  3886  125A  00A7               	movwf	___flmul@b+3
  3887  125B  3000               	movlw	0
  3888  125C  00A6               	movwf	___flmul@b+2
  3889  125D  3000               	movlw	0
  3890  125E  00A5               	movwf	___flmul@b+1
  3891  125F  3000               	movlw	0
  3892  1260  00A4               	movwf	___flmul@b
  3893  1261  0851               	movf	fround@prec,w
  3894  1262  00C2               	movwf	??_fround
  3895  1263  3001               	movlw	1
  3896  1264                     u4545:
  3897  1264  1003               	clrc
  3898  1265  0DC2               	rlf	??_fround,f
  3899  1266  3EFF               	addlw	-1
  3900  1267  1D03               	skipz
  3901  1268  2A64               	goto	u4545
  3902  1269  1003               	clrc
  3903  126A  0D42               	rlf	??_fround,w
  3904  126B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3905  126C  0084               	movwf	4
  3906  126D  160A  158A  2000  160A  118A  	fcall	stringdir
  3907  1272  00C3               	movwf	??_fround+1
  3908  1273  160A  158A  2000  160A  118A  	fcall	stringdir
  3909  1278  00C4               	movwf	??_fround+2
  3910  1279  160A  158A  2000  160A  118A  	fcall	stringdir
  3911  127E  00C5               	movwf	??_fround+3
  3912  127F  160A  158A  2000  160A  118A  	fcall	stringdir
  3913  1284  00C6               	movwf	??_fround+4
  3914  1285  0846               	movf	??_fround+4,w
  3915  1286  00AB               	movwf	___flmul@a+3
  3916  1287  0845               	movf	??_fround+3,w
  3917  1288  00AA               	movwf	___flmul@a+2
  3918  1289  0844               	movf	??_fround+2,w
  3919  128A  00A9               	movwf	___flmul@a+1
  3920  128B  0843               	movf	??_fround+1,w
  3921  128C  00A8               	movwf	___flmul@a
  3922  128D  120A  158A  249F  160A  118A  	fcall	___flmul
  3923  1292  1283               	bcf	3,5	;RP0=0, select bank0
  3924  1293  1303               	bcf	3,6	;RP1=0, select bank0
  3925  1294  0827               	movf	?___flmul+3,w
  3926  1295  00C1               	movwf	?_fround+3
  3927  1296  0826               	movf	?___flmul+2,w
  3928  1297  00C0               	movwf	?_fround+2
  3929  1298  0825               	movf	?___flmul+1,w
  3930  1299  00BF               	movwf	?_fround+1
  3931  129A  0824               	movf	?___flmul,w
  3932  129B  00BE               	movwf	?_fround
  3933  129C                     l196:
  3934  129C  0008               	return
  3935  129D                     __end_of_fround:
  3936                           
  3937                           	psect	text7
  3938  19C8                     __ptext7:	
  3939 ;; *************** function ___lwmod *****************
  3940 ;; Defined at:
  3941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwmod.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  divisor         2    0[COMMON] unsigned int 
  3944 ;;  dividend        2    2[COMMON] unsigned int 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  counter         1    5[COMMON] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  2    0[COMMON] unsigned int 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3956 ;;      Params:         4       0       0       0       0
  3957 ;;      Locals:         1       0       0       0       0
  3958 ;;      Temps:          1       0       0       0       0
  3959 ;;      Totals:         6       0       0       0       0
  3960 ;;Total ram usage:        6 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_fround
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969  19C8                     ___lwmod:	
  3970                           ;psect for function ___lwmod
  3971                           
  3972  19C8                     l2530:	
  3973                           ;incstack = 0
  3974                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3975                           
  3976  19C8  0870               	movf	___lwmod@divisor,w
  3977  19C9  0471               	iorwf	___lwmod@divisor+1,w
  3978  19CA  1903               	btfsc	3,2
  3979  19CB  29CD               	goto	u3571
  3980  19CC  29CE               	goto	u3570
  3981  19CD                     u3571:
  3982  19CD  29FD               	goto	l2548
  3983  19CE                     u3570:
  3984  19CE                     l2532:
  3985  19CE  01F5               	clrf	___lwmod@counter
  3986  19CF  0AF5               	incf	___lwmod@counter,f
  3987  19D0  29DC               	goto	l2538
  3988  19D1                     l2534:
  3989  19D1  3001               	movlw	1
  3990  19D2                     u3585:
  3991  19D2  1003               	clrc
  3992  19D3  0DF0               	rlf	___lwmod@divisor,f
  3993  19D4  0DF1               	rlf	___lwmod@divisor+1,f
  3994  19D5  3EFF               	addlw	-1
  3995  19D6  1D03               	skipz
  3996  19D7  29D2               	goto	u3585
  3997  19D8                     l2536:
  3998  19D8  3001               	movlw	1
  3999  19D9  00F4               	movwf	??___lwmod
  4000  19DA  0874               	movf	??___lwmod,w
  4001  19DB  07F5               	addwf	___lwmod@counter,f
  4002  19DC                     l2538:
  4003  19DC  1FF1               	btfss	___lwmod@divisor+1,7
  4004  19DD  29DF               	goto	u3591
  4005  19DE  29E0               	goto	u3590
  4006  19DF                     u3591:
  4007  19DF  29D1               	goto	l2534
  4008  19E0                     u3590:
  4009  19E0                     l2540:
  4010  19E0  0871               	movf	___lwmod@divisor+1,w
  4011  19E1  0273               	subwf	___lwmod@dividend+1,w
  4012  19E2  1D03               	skipz
  4013  19E3  29E6               	goto	u3605
  4014  19E4  0870               	movf	___lwmod@divisor,w
  4015  19E5  0272               	subwf	___lwmod@dividend,w
  4016  19E6                     u3605:
  4017  19E6  1C03               	skipc
  4018  19E7  29E9               	goto	u3601
  4019  19E8  29EA               	goto	u3600
  4020  19E9                     u3601:
  4021  19E9  29F0               	goto	l2544
  4022  19EA                     u3600:
  4023  19EA                     l2542:
  4024  19EA  0870               	movf	___lwmod@divisor,w
  4025  19EB  02F2               	subwf	___lwmod@dividend,f
  4026  19EC  0871               	movf	___lwmod@divisor+1,w
  4027  19ED  1C03               	skipc
  4028  19EE  03F3               	decf	___lwmod@dividend+1,f
  4029  19EF  02F3               	subwf	___lwmod@dividend+1,f
  4030  19F0                     l2544:
  4031  19F0  3001               	movlw	1
  4032  19F1                     u3615:
  4033  19F1  1003               	clrc
  4034  19F2  0CF1               	rrf	___lwmod@divisor+1,f
  4035  19F3  0CF0               	rrf	___lwmod@divisor,f
  4036  19F4  3EFF               	addlw	-1
  4037  19F5  1D03               	skipz
  4038  19F6  29F1               	goto	u3615
  4039  19F7                     l2546:
  4040  19F7  3001               	movlw	1
  4041  19F8  02F5               	subwf	___lwmod@counter,f
  4042  19F9  1D03               	btfss	3,2
  4043  19FA  29FC               	goto	u3621
  4044  19FB  29FD               	goto	u3620
  4045  19FC                     u3621:
  4046  19FC  29E0               	goto	l2540
  4047  19FD                     u3620:
  4048  19FD                     l2548:
  4049  19FD  0873               	movf	___lwmod@dividend+1,w
  4050  19FE  00F1               	movwf	?___lwmod+1
  4051  19FF  0872               	movf	___lwmod@dividend,w
  4052  1A00  00F0               	movwf	?___lwmod
  4053  1A01                     l633:
  4054  1A01  0008               	return
  4055  1A02                     __end_of___lwmod:
  4056                           
  4057                           	psect	text8
  4058  1A02                     __ptext8:	
  4059 ;; *************** function ___lwdiv *****************
  4060 ;; Defined at:
  4061 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  divisor         2    6[COMMON] unsigned int 
  4064 ;;  dividend        2    8[COMMON] unsigned int 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  quotient        2   11[COMMON] unsigned int 
  4067 ;;  counter         1   13[COMMON] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  2    6[COMMON] unsigned int 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4077 ;;      Params:         4       0       0       0       0
  4078 ;;      Locals:         3       0       0       0       0
  4079 ;;      Temps:          1       0       0       0       0
  4080 ;;      Totals:         8       0       0       0       0
  4081 ;;Total ram usage:        8 bytes
  4082 ;; Hardware stack levels used: 1
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_fround
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090  1A02                     ___lwdiv:	
  4091                           ;psect for function ___lwdiv
  4092                           
  4093  1A02                     l2504:	
  4094                           ;incstack = 0
  4095                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4096                           
  4097  1A02  01FB               	clrf	___lwdiv@quotient
  4098  1A03  01FC               	clrf	___lwdiv@quotient+1
  4099  1A04                     l2506:
  4100  1A04  0876               	movf	___lwdiv@divisor,w
  4101  1A05  0477               	iorwf	___lwdiv@divisor+1,w
  4102  1A06  1903               	btfsc	3,2
  4103  1A07  2A09               	goto	u3501
  4104  1A08  2A0A               	goto	u3500
  4105  1A09                     u3501:
  4106  1A09  2A41               	goto	l2526
  4107  1A0A                     u3500:
  4108  1A0A                     l2508:
  4109  1A0A  01FD               	clrf	___lwdiv@counter
  4110  1A0B  0AFD               	incf	___lwdiv@counter,f
  4111  1A0C  2A18               	goto	l2514
  4112  1A0D                     l2510:
  4113  1A0D  3001               	movlw	1
  4114  1A0E                     u3515:
  4115  1A0E  1003               	clrc
  4116  1A0F  0DF6               	rlf	___lwdiv@divisor,f
  4117  1A10  0DF7               	rlf	___lwdiv@divisor+1,f
  4118  1A11  3EFF               	addlw	-1
  4119  1A12  1D03               	skipz
  4120  1A13  2A0E               	goto	u3515
  4121  1A14                     l2512:
  4122  1A14  3001               	movlw	1
  4123  1A15  00FA               	movwf	??___lwdiv
  4124  1A16  087A               	movf	??___lwdiv,w
  4125  1A17  07FD               	addwf	___lwdiv@counter,f
  4126  1A18                     l2514:
  4127  1A18  1FF7               	btfss	___lwdiv@divisor+1,7
  4128  1A19  2A1B               	goto	u3521
  4129  1A1A  2A1C               	goto	u3520
  4130  1A1B                     u3521:
  4131  1A1B  2A0D               	goto	l2510
  4132  1A1C                     u3520:
  4133  1A1C                     l2516:
  4134  1A1C  3001               	movlw	1
  4135  1A1D                     u3535:
  4136  1A1D  1003               	clrc
  4137  1A1E  0DFB               	rlf	___lwdiv@quotient,f
  4138  1A1F  0DFC               	rlf	___lwdiv@quotient+1,f
  4139  1A20  3EFF               	addlw	-1
  4140  1A21  1D03               	skipz
  4141  1A22  2A1D               	goto	u3535
  4142  1A23  0877               	movf	___lwdiv@divisor+1,w
  4143  1A24  0279               	subwf	___lwdiv@dividend+1,w
  4144  1A25  1D03               	skipz
  4145  1A26  2A29               	goto	u3545
  4146  1A27  0876               	movf	___lwdiv@divisor,w
  4147  1A28  0278               	subwf	___lwdiv@dividend,w
  4148  1A29                     u3545:
  4149  1A29  1C03               	skipc
  4150  1A2A  2A2C               	goto	u3541
  4151  1A2B  2A2D               	goto	u3540
  4152  1A2C                     u3541:
  4153  1A2C  2A34               	goto	l2522
  4154  1A2D                     u3540:
  4155  1A2D                     l2518:
  4156  1A2D  0876               	movf	___lwdiv@divisor,w
  4157  1A2E  02F8               	subwf	___lwdiv@dividend,f
  4158  1A2F  0877               	movf	___lwdiv@divisor+1,w
  4159  1A30  1C03               	skipc
  4160  1A31  03F9               	decf	___lwdiv@dividend+1,f
  4161  1A32  02F9               	subwf	___lwdiv@dividend+1,f
  4162  1A33                     l2520:
  4163  1A33  147B               	bsf	___lwdiv@quotient,0
  4164  1A34                     l2522:
  4165  1A34  3001               	movlw	1
  4166  1A35                     u3555:
  4167  1A35  1003               	clrc
  4168  1A36  0CF7               	rrf	___lwdiv@divisor+1,f
  4169  1A37  0CF6               	rrf	___lwdiv@divisor,f
  4170  1A38  3EFF               	addlw	-1
  4171  1A39  1D03               	skipz
  4172  1A3A  2A35               	goto	u3555
  4173  1A3B                     l2524:
  4174  1A3B  3001               	movlw	1
  4175  1A3C  02FD               	subwf	___lwdiv@counter,f
  4176  1A3D  1D03               	btfss	3,2
  4177  1A3E  2A40               	goto	u3561
  4178  1A3F  2A41               	goto	u3560
  4179  1A40                     u3561:
  4180  1A40  2A1C               	goto	l2516
  4181  1A41                     u3560:
  4182  1A41                     l2526:
  4183  1A41  087C               	movf	___lwdiv@quotient+1,w
  4184  1A42  00F7               	movwf	?___lwdiv+1
  4185  1A43  087B               	movf	___lwdiv@quotient,w
  4186  1A44  00F6               	movwf	?___lwdiv
  4187  1A45                     l623:
  4188  1A45  0008               	return
  4189  1A46                     __end_of___lwdiv:
  4190                           
  4191                           	psect	text9
  4192  0C9F                     __ptext9:	
  4193 ;; *************** function ___flmul *****************
  4194 ;; Defined at:
  4195 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;  b               4    4[BANK0 ] unsigned int 
  4198 ;;  a               4    8[BANK0 ] unsigned int 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  prod            4   24[BANK0 ] struct .
  4201 ;;  grs             4   18[BANK0 ] unsigned long 
  4202 ;;  temp            2   28[BANK0 ] struct .
  4203 ;;  bexp            1   23[BANK0 ] unsigned char 
  4204 ;;  aexp            1   22[BANK0 ] unsigned char 
  4205 ;;  sign            1   17[BANK0 ] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  4    4[BANK0 ] unsigned char 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4215 ;;      Params:         0       8       0       0       0
  4216 ;;      Locals:         0      13       0       0       0
  4217 ;;      Temps:          0       5       0       0       0
  4218 ;;      Totals:         0      26       0       0       0
  4219 ;;Total ram usage:       26 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 1
  4222 ;; This function calls:
  4223 ;;		__Umul8_16
  4224 ;; This function is called by:
  4225 ;;		_main
  4226 ;;		_fround
  4227 ;;		_scale
  4228 ;;		_sprintf
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232  0C9F                     ___flmul:	
  4233                           ;psect for function ___flmul
  4234                           
  4235  0C9F                     l2746:	
  4236                           ;incstack = 0
  4237                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4238                           
  4239  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0CA1  0827               	movf	___flmul@b+3,w
  4242  0CA2  3980               	andlw	128
  4243  0CA3  00AC               	movwf	??___flmul
  4244  0CA4  082C               	movf	??___flmul,w
  4245  0CA5  00B1               	movwf	___flmul@sign
  4246  0CA6                     l2748:
  4247  0CA6  0827               	movf	___flmul@b+3,w
  4248  0CA7  00AC               	movwf	??___flmul
  4249  0CA8  072C               	addwf	??___flmul,w
  4250  0CA9  00AD               	movwf	??___flmul+1
  4251  0CAA  082D               	movf	??___flmul+1,w
  4252  0CAB  00B7               	movwf	___flmul@bexp
  4253  0CAC                     l2750:
  4254  0CAC  1FA6               	btfss	___flmul@b+2,7
  4255  0CAD  2CAF               	goto	u4091
  4256  0CAE  2CB0               	goto	u4090
  4257  0CAF                     u4091:
  4258  0CAF  2CB1               	goto	l2754
  4259  0CB0                     u4090:
  4260  0CB0                     l2752:
  4261  0CB0  1437               	bsf	___flmul@bexp,0
  4262  0CB1                     l2754:
  4263  0CB1  0837               	movf	___flmul@bexp,w
  4264  0CB2  1903               	btfsc	3,2
  4265  0CB3  2CB5               	goto	u4101
  4266  0CB4  2CB6               	goto	u4100
  4267  0CB5                     u4101:
  4268  0CB5  2CC5               	goto	l2762
  4269  0CB6                     u4100:
  4270  0CB6                     l2756:
  4271  0CB6  0A37               	incf	___flmul@bexp,w
  4272  0CB7  1D03               	btfss	3,2
  4273  0CB8  2CBA               	goto	u4111
  4274  0CB9  2CBB               	goto	u4110
  4275  0CBA                     u4111:
  4276  0CBA  2CC3               	goto	l2760
  4277  0CBB                     u4110:
  4278  0CBB                     l2758:
  4279  0CBB  3000               	movlw	0
  4280  0CBC  00A7               	movwf	___flmul@b+3
  4281  0CBD  3000               	movlw	0
  4282  0CBE  00A6               	movwf	___flmul@b+2
  4283  0CBF  3000               	movlw	0
  4284  0CC0  00A5               	movwf	___flmul@b+1
  4285  0CC1  3000               	movlw	0
  4286  0CC2  00A4               	movwf	___flmul@b
  4287  0CC3                     l2760:
  4288  0CC3  17A6               	bsf	___flmul@b+2,7
  4289  0CC4  2CCD               	goto	l2764
  4290  0CC5                     l2762:
  4291  0CC5  3000               	movlw	0
  4292  0CC6  00A7               	movwf	___flmul@b+3
  4293  0CC7  3000               	movlw	0
  4294  0CC8  00A6               	movwf	___flmul@b+2
  4295  0CC9  3000               	movlw	0
  4296  0CCA  00A5               	movwf	___flmul@b+1
  4297  0CCB  3000               	movlw	0
  4298  0CCC  00A4               	movwf	___flmul@b
  4299  0CCD                     l2764:
  4300  0CCD  082B               	movf	___flmul@a+3,w
  4301  0CCE  3980               	andlw	128
  4302  0CCF  00AC               	movwf	??___flmul
  4303  0CD0  082C               	movf	??___flmul,w
  4304  0CD1  06B1               	xorwf	___flmul@sign,f
  4305  0CD2                     l2766:
  4306  0CD2  082B               	movf	___flmul@a+3,w
  4307  0CD3  00AC               	movwf	??___flmul
  4308  0CD4  072C               	addwf	??___flmul,w
  4309  0CD5  00AD               	movwf	??___flmul+1
  4310  0CD6  082D               	movf	??___flmul+1,w
  4311  0CD7  00B6               	movwf	___flmul@aexp
  4312  0CD8                     l2768:
  4313  0CD8  1FAA               	btfss	___flmul@a+2,7
  4314  0CD9  2CDB               	goto	u4121
  4315  0CDA  2CDC               	goto	u4120
  4316  0CDB                     u4121:
  4317  0CDB  2CDD               	goto	l2772
  4318  0CDC                     u4120:
  4319  0CDC                     l2770:
  4320  0CDC  1436               	bsf	___flmul@aexp,0
  4321  0CDD                     l2772:
  4322  0CDD  0836               	movf	___flmul@aexp,w
  4323  0CDE  1903               	btfsc	3,2
  4324  0CDF  2CE1               	goto	u4131
  4325  0CE0  2CE2               	goto	u4130
  4326  0CE1                     u4131:
  4327  0CE1  2CF1               	goto	l2780
  4328  0CE2                     u4130:
  4329  0CE2                     l2774:
  4330  0CE2  0A36               	incf	___flmul@aexp,w
  4331  0CE3  1D03               	btfss	3,2
  4332  0CE4  2CE6               	goto	u4141
  4333  0CE5  2CE7               	goto	u4140
  4334  0CE6                     u4141:
  4335  0CE6  2CEF               	goto	l2778
  4336  0CE7                     u4140:
  4337  0CE7                     l2776:
  4338  0CE7  3000               	movlw	0
  4339  0CE8  00AB               	movwf	___flmul@a+3
  4340  0CE9  3000               	movlw	0
  4341  0CEA  00AA               	movwf	___flmul@a+2
  4342  0CEB  3000               	movlw	0
  4343  0CEC  00A9               	movwf	___flmul@a+1
  4344  0CED  3000               	movlw	0
  4345  0CEE  00A8               	movwf	___flmul@a
  4346  0CEF                     l2778:
  4347  0CEF  17AA               	bsf	___flmul@a+2,7
  4348  0CF0  2CF9               	goto	l2782
  4349  0CF1                     l2780:
  4350  0CF1  3000               	movlw	0
  4351  0CF2  00AB               	movwf	___flmul@a+3
  4352  0CF3  3000               	movlw	0
  4353  0CF4  00AA               	movwf	___flmul@a+2
  4354  0CF5  3000               	movlw	0
  4355  0CF6  00A9               	movwf	___flmul@a+1
  4356  0CF7  3000               	movlw	0
  4357  0CF8  00A8               	movwf	___flmul@a
  4358  0CF9                     l2782:
  4359  0CF9  0836               	movf	___flmul@aexp,w
  4360  0CFA  1903               	btfsc	3,2
  4361  0CFB  2CFD               	goto	u4151
  4362  0CFC  2CFE               	goto	u4150
  4363  0CFD                     u4151:
  4364  0CFD  2D03               	goto	l2786
  4365  0CFE                     u4150:
  4366  0CFE                     l2784:
  4367  0CFE  0837               	movf	___flmul@bexp,w
  4368  0CFF  1D03               	btfss	3,2
  4369  0D00  2D02               	goto	u4161
  4370  0D01  2D03               	goto	u4160
  4371  0D02                     u4161:
  4372  0D02  2D0C               	goto	l2790
  4373  0D03                     u4160:
  4374  0D03                     l2786:
  4375  0D03  3000               	movlw	0
  4376  0D04  00A7               	movwf	?___flmul+3
  4377  0D05  3000               	movlw	0
  4378  0D06  00A6               	movwf	?___flmul+2
  4379  0D07  3000               	movlw	0
  4380  0D08  00A5               	movwf	?___flmul+1
  4381  0D09  3000               	movlw	0
  4382  0D0A  00A4               	movwf	?___flmul
  4383  0D0B  2FFF               	goto	l740
  4384  0D0C                     l2790:
  4385  0D0C  0824               	movf	___flmul@b,w
  4386  0D0D  00AC               	movwf	??___flmul
  4387  0D0E  082C               	movf	??___flmul,w
  4388  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4389  0D10  082A               	movf	___flmul@a+2,w
  4390  0D11  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4391  0D16  0871               	movf	?__Umul8_16+1,w
  4392  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4394  0D19  00BD               	movwf	___flmul@temp+1
  4395  0D1A  0870               	movf	?__Umul8_16,w
  4396  0D1B  00BC               	movwf	___flmul@temp
  4397  0D1C                     l2792:
  4398  0D1C  083C               	movf	___flmul@temp,w
  4399  0D1D  00AC               	movwf	??___flmul
  4400  0D1E  01AD               	clrf	??___flmul+1
  4401  0D1F  01AE               	clrf	??___flmul+2
  4402  0D20  01AF               	clrf	??___flmul+3
  4403  0D21  082F               	movf	??___flmul+3,w
  4404  0D22  00B5               	movwf	___flmul@grs+3
  4405  0D23  082E               	movf	??___flmul+2,w
  4406  0D24  00B4               	movwf	___flmul@grs+2
  4407  0D25  082D               	movf	??___flmul+1,w
  4408  0D26  00B3               	movwf	___flmul@grs+1
  4409  0D27  082C               	movf	??___flmul,w
  4410  0D28  00B2               	movwf	___flmul@grs
  4411  0D29                     l2794:
  4412  0D29  083D               	movf	___flmul@temp+1,w
  4413  0D2A  00AC               	movwf	??___flmul
  4414  0D2B  01AD               	clrf	??___flmul+1
  4415  0D2C  01AE               	clrf	??___flmul+2
  4416  0D2D  01AF               	clrf	??___flmul+3
  4417  0D2E  082F               	movf	??___flmul+3,w
  4418  0D2F  00BB               	movwf	___flmul@prod+3
  4419  0D30  082E               	movf	??___flmul+2,w
  4420  0D31  00BA               	movwf	___flmul@prod+2
  4421  0D32  082D               	movf	??___flmul+1,w
  4422  0D33  00B9               	movwf	___flmul@prod+1
  4423  0D34  082C               	movf	??___flmul,w
  4424  0D35  00B8               	movwf	___flmul@prod
  4425  0D36  0825               	movf	___flmul@b+1,w
  4426  0D37  00AC               	movwf	??___flmul
  4427  0D38  082C               	movf	??___flmul,w
  4428  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4429  0D3A  0829               	movf	___flmul@a+1,w
  4430  0D3B  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4431  0D40  0871               	movf	?__Umul8_16+1,w
  4432  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4433  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4434  0D43  00BD               	movwf	___flmul@temp+1
  4435  0D44  0870               	movf	?__Umul8_16,w
  4436  0D45  00BC               	movwf	___flmul@temp
  4437  0D46                     l2796:
  4438  0D46  083C               	movf	___flmul@temp,w
  4439  0D47  00AC               	movwf	??___flmul
  4440  0D48  01AD               	clrf	??___flmul+1
  4441  0D49  01AE               	clrf	??___flmul+2
  4442  0D4A  01AF               	clrf	??___flmul+3
  4443  0D4B  082C               	movf	??___flmul,w
  4444  0D4C  07B2               	addwf	___flmul@grs,f
  4445  0D4D  082D               	movf	??___flmul+1,w
  4446  0D4E  1103               	clrz
  4447  0D4F  1803               	skipnc
  4448  0D50  3E01               	addlw	1
  4449  0D51  1903               	skipnz
  4450  0D52  2D54               	goto	u4171
  4451  0D53  07B3               	addwf	___flmul@grs+1,f
  4452  0D54                     u4171:
  4453  0D54  082E               	movf	??___flmul+2,w
  4454  0D55  1103               	clrz
  4455  0D56  1803               	skipnc
  4456  0D57  3E01               	addlw	1
  4457  0D58  1903               	skipnz
  4458  0D59  2D5B               	goto	u4172
  4459  0D5A  07B4               	addwf	___flmul@grs+2,f
  4460  0D5B                     u4172:
  4461  0D5B  082F               	movf	??___flmul+3,w
  4462  0D5C  1103               	clrz
  4463  0D5D  1803               	skipnc
  4464  0D5E  3E01               	addlw	1
  4465  0D5F  1903               	skipnz
  4466  0D60  2D62               	goto	u4173
  4467  0D61  07B5               	addwf	___flmul@grs+3,f
  4468  0D62                     u4173:
  4469  0D62                     l2798:
  4470  0D62  083D               	movf	___flmul@temp+1,w
  4471  0D63  00AC               	movwf	??___flmul
  4472  0D64  01AD               	clrf	??___flmul+1
  4473  0D65  01AE               	clrf	??___flmul+2
  4474  0D66  01AF               	clrf	??___flmul+3
  4475  0D67  082C               	movf	??___flmul,w
  4476  0D68  07B8               	addwf	___flmul@prod,f
  4477  0D69  082D               	movf	??___flmul+1,w
  4478  0D6A  1103               	clrz
  4479  0D6B  1803               	skipnc
  4480  0D6C  3E01               	addlw	1
  4481  0D6D  1903               	skipnz
  4482  0D6E  2D70               	goto	u4181
  4483  0D6F  07B9               	addwf	___flmul@prod+1,f
  4484  0D70                     u4181:
  4485  0D70  082E               	movf	??___flmul+2,w
  4486  0D71  1103               	clrz
  4487  0D72  1803               	skipnc
  4488  0D73  3E01               	addlw	1
  4489  0D74  1903               	skipnz
  4490  0D75  2D77               	goto	u4182
  4491  0D76  07BA               	addwf	___flmul@prod+2,f
  4492  0D77                     u4182:
  4493  0D77  082F               	movf	??___flmul+3,w
  4494  0D78  1103               	clrz
  4495  0D79  1803               	skipnc
  4496  0D7A  3E01               	addlw	1
  4497  0D7B  1903               	skipnz
  4498  0D7C  2D7E               	goto	u4183
  4499  0D7D  07BB               	addwf	___flmul@prod+3,f
  4500  0D7E                     u4183:
  4501  0D7E  0826               	movf	___flmul@b+2,w
  4502  0D7F  00AC               	movwf	??___flmul
  4503  0D80  082C               	movf	??___flmul,w
  4504  0D81  00F0               	movwf	__Umul8_16@multiplicand
  4505  0D82  0828               	movf	___flmul@a,w
  4506  0D83  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4507  0D88  0871               	movf	?__Umul8_16+1,w
  4508  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0D8B  00BD               	movwf	___flmul@temp+1
  4511  0D8C  0870               	movf	?__Umul8_16,w
  4512  0D8D  00BC               	movwf	___flmul@temp
  4513  0D8E                     l2800:
  4514  0D8E  083C               	movf	___flmul@temp,w
  4515  0D8F  00AC               	movwf	??___flmul
  4516  0D90  01AD               	clrf	??___flmul+1
  4517  0D91  01AE               	clrf	??___flmul+2
  4518  0D92  01AF               	clrf	??___flmul+3
  4519  0D93  082C               	movf	??___flmul,w
  4520  0D94  07B2               	addwf	___flmul@grs,f
  4521  0D95  082D               	movf	??___flmul+1,w
  4522  0D96  1103               	clrz
  4523  0D97  1803               	skipnc
  4524  0D98  3E01               	addlw	1
  4525  0D99  1903               	skipnz
  4526  0D9A  2D9C               	goto	u4191
  4527  0D9B  07B3               	addwf	___flmul@grs+1,f
  4528  0D9C                     u4191:
  4529  0D9C  082E               	movf	??___flmul+2,w
  4530  0D9D  1103               	clrz
  4531  0D9E  1803               	skipnc
  4532  0D9F  3E01               	addlw	1
  4533  0DA0  1903               	skipnz
  4534  0DA1  2DA3               	goto	u4192
  4535  0DA2  07B4               	addwf	___flmul@grs+2,f
  4536  0DA3                     u4192:
  4537  0DA3  082F               	movf	??___flmul+3,w
  4538  0DA4  1103               	clrz
  4539  0DA5  1803               	skipnc
  4540  0DA6  3E01               	addlw	1
  4541  0DA7  1903               	skipnz
  4542  0DA8  2DAA               	goto	u4193
  4543  0DA9  07B5               	addwf	___flmul@grs+3,f
  4544  0DAA                     u4193:
  4545  0DAA                     l2802:
  4546  0DAA  083D               	movf	___flmul@temp+1,w
  4547  0DAB  00AC               	movwf	??___flmul
  4548  0DAC  01AD               	clrf	??___flmul+1
  4549  0DAD  01AE               	clrf	??___flmul+2
  4550  0DAE  01AF               	clrf	??___flmul+3
  4551  0DAF  082C               	movf	??___flmul,w
  4552  0DB0  07B8               	addwf	___flmul@prod,f
  4553  0DB1  082D               	movf	??___flmul+1,w
  4554  0DB2  1103               	clrz
  4555  0DB3  1803               	skipnc
  4556  0DB4  3E01               	addlw	1
  4557  0DB5  1903               	skipnz
  4558  0DB6  2DB8               	goto	u4201
  4559  0DB7  07B9               	addwf	___flmul@prod+1,f
  4560  0DB8                     u4201:
  4561  0DB8  082E               	movf	??___flmul+2,w
  4562  0DB9  1103               	clrz
  4563  0DBA  1803               	skipnc
  4564  0DBB  3E01               	addlw	1
  4565  0DBC  1903               	skipnz
  4566  0DBD  2DBF               	goto	u4202
  4567  0DBE  07BA               	addwf	___flmul@prod+2,f
  4568  0DBF                     u4202:
  4569  0DBF  082F               	movf	??___flmul+3,w
  4570  0DC0  1103               	clrz
  4571  0DC1  1803               	skipnc
  4572  0DC2  3E01               	addlw	1
  4573  0DC3  1903               	skipnz
  4574  0DC4  2DC6               	goto	u4203
  4575  0DC5  07BB               	addwf	___flmul@prod+3,f
  4576  0DC6                     u4203:
  4577  0DC6                     l2804:
  4578  0DC6  3008               	movlw	8
  4579  0DC7  00AC               	movwf	??___flmul
  4580  0DC8                     u4215:
  4581  0DC8  1003               	clrc
  4582  0DC9  0DB2               	rlf	___flmul@grs,f
  4583  0DCA  0DB3               	rlf	___flmul@grs+1,f
  4584  0DCB  0DB4               	rlf	___flmul@grs+2,f
  4585  0DCC  0DB5               	rlf	___flmul@grs+3,f
  4586  0DCD  0BAC               	decfsz	??___flmul,f
  4587  0DCE  2DC8               	goto	u4215
  4588  0DCF                     l2806:
  4589  0DCF  0825               	movf	___flmul@b+1,w
  4590  0DD0  00AC               	movwf	??___flmul
  4591  0DD1  082C               	movf	??___flmul,w
  4592  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  4593  0DD3  0828               	movf	___flmul@a,w
  4594  0DD4  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4595  0DD9  0871               	movf	?__Umul8_16+1,w
  4596  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4597  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4598  0DDC  00BD               	movwf	___flmul@temp+1
  4599  0DDD  0870               	movf	?__Umul8_16,w
  4600  0DDE  00BC               	movwf	___flmul@temp
  4601  0DDF                     l2808:
  4602  0DDF  083C               	movf	___flmul@temp,w
  4603  0DE0  00AC               	movwf	??___flmul
  4604  0DE1  083D               	movf	___flmul@temp+1,w
  4605  0DE2  00AD               	movwf	??___flmul+1
  4606  0DE3  01AE               	clrf	??___flmul+2
  4607  0DE4  01AF               	clrf	??___flmul+3
  4608  0DE5  082C               	movf	??___flmul,w
  4609  0DE6  07B2               	addwf	___flmul@grs,f
  4610  0DE7  082D               	movf	??___flmul+1,w
  4611  0DE8  1103               	clrz
  4612  0DE9  1803               	skipnc
  4613  0DEA  3E01               	addlw	1
  4614  0DEB  1903               	skipnz
  4615  0DEC  2DEE               	goto	u4221
  4616  0DED  07B3               	addwf	___flmul@grs+1,f
  4617  0DEE                     u4221:
  4618  0DEE  082E               	movf	??___flmul+2,w
  4619  0DEF  1103               	clrz
  4620  0DF0  1803               	skipnc
  4621  0DF1  3E01               	addlw	1
  4622  0DF2  1903               	skipnz
  4623  0DF3  2DF5               	goto	u4222
  4624  0DF4  07B4               	addwf	___flmul@grs+2,f
  4625  0DF5                     u4222:
  4626  0DF5  082F               	movf	??___flmul+3,w
  4627  0DF6  1103               	clrz
  4628  0DF7  1803               	skipnc
  4629  0DF8  3E01               	addlw	1
  4630  0DF9  1903               	skipnz
  4631  0DFA  2DFC               	goto	u4223
  4632  0DFB  07B5               	addwf	___flmul@grs+3,f
  4633  0DFC                     u4223:
  4634  0DFC                     l2810:
  4635  0DFC  0824               	movf	___flmul@b,w
  4636  0DFD  00AC               	movwf	??___flmul
  4637  0DFE  082C               	movf	??___flmul,w
  4638  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  4639  0E00  0829               	movf	___flmul@a+1,w
  4640  0E01  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4641  0E06  0871               	movf	?__Umul8_16+1,w
  4642  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4643  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4644  0E09  00BD               	movwf	___flmul@temp+1
  4645  0E0A  0870               	movf	?__Umul8_16,w
  4646  0E0B  00BC               	movwf	___flmul@temp
  4647  0E0C                     l2812:
  4648  0E0C  083C               	movf	___flmul@temp,w
  4649  0E0D  00AC               	movwf	??___flmul
  4650  0E0E  083D               	movf	___flmul@temp+1,w
  4651  0E0F  00AD               	movwf	??___flmul+1
  4652  0E10  01AE               	clrf	??___flmul+2
  4653  0E11  01AF               	clrf	??___flmul+3
  4654  0E12  082C               	movf	??___flmul,w
  4655  0E13  07B2               	addwf	___flmul@grs,f
  4656  0E14  082D               	movf	??___flmul+1,w
  4657  0E15  1103               	clrz
  4658  0E16  1803               	skipnc
  4659  0E17  3E01               	addlw	1
  4660  0E18  1903               	skipnz
  4661  0E19  2E1B               	goto	u4231
  4662  0E1A  07B3               	addwf	___flmul@grs+1,f
  4663  0E1B                     u4231:
  4664  0E1B  082E               	movf	??___flmul+2,w
  4665  0E1C  1103               	clrz
  4666  0E1D  1803               	skipnc
  4667  0E1E  3E01               	addlw	1
  4668  0E1F  1903               	skipnz
  4669  0E20  2E22               	goto	u4232
  4670  0E21  07B4               	addwf	___flmul@grs+2,f
  4671  0E22                     u4232:
  4672  0E22  082F               	movf	??___flmul+3,w
  4673  0E23  1103               	clrz
  4674  0E24  1803               	skipnc
  4675  0E25  3E01               	addlw	1
  4676  0E26  1903               	skipnz
  4677  0E27  2E29               	goto	u4233
  4678  0E28  07B5               	addwf	___flmul@grs+3,f
  4679  0E29                     u4233:
  4680  0E29                     l2814:
  4681  0E29  3008               	movlw	8
  4682  0E2A  00AC               	movwf	??___flmul
  4683  0E2B                     u4245:
  4684  0E2B  1003               	clrc
  4685  0E2C  0DB2               	rlf	___flmul@grs,f
  4686  0E2D  0DB3               	rlf	___flmul@grs+1,f
  4687  0E2E  0DB4               	rlf	___flmul@grs+2,f
  4688  0E2F  0DB5               	rlf	___flmul@grs+3,f
  4689  0E30  0BAC               	decfsz	??___flmul,f
  4690  0E31  2E2B               	goto	u4245
  4691  0E32  0824               	movf	___flmul@b,w
  4692  0E33  00AC               	movwf	??___flmul
  4693  0E34  082C               	movf	??___flmul,w
  4694  0E35  00F0               	movwf	__Umul8_16@multiplicand
  4695  0E36  0828               	movf	___flmul@a,w
  4696  0E37  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4697  0E3C  0871               	movf	?__Umul8_16+1,w
  4698  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4700  0E3F  00BD               	movwf	___flmul@temp+1
  4701  0E40  0870               	movf	?__Umul8_16,w
  4702  0E41  00BC               	movwf	___flmul@temp
  4703  0E42                     l2816:
  4704  0E42  083C               	movf	___flmul@temp,w
  4705  0E43  00AC               	movwf	??___flmul
  4706  0E44  083D               	movf	___flmul@temp+1,w
  4707  0E45  00AD               	movwf	??___flmul+1
  4708  0E46  01AE               	clrf	??___flmul+2
  4709  0E47  01AF               	clrf	??___flmul+3
  4710  0E48  082C               	movf	??___flmul,w
  4711  0E49  07B2               	addwf	___flmul@grs,f
  4712  0E4A  082D               	movf	??___flmul+1,w
  4713  0E4B  1103               	clrz
  4714  0E4C  1803               	skipnc
  4715  0E4D  3E01               	addlw	1
  4716  0E4E  1903               	skipnz
  4717  0E4F  2E51               	goto	u4251
  4718  0E50  07B3               	addwf	___flmul@grs+1,f
  4719  0E51                     u4251:
  4720  0E51  082E               	movf	??___flmul+2,w
  4721  0E52  1103               	clrz
  4722  0E53  1803               	skipnc
  4723  0E54  3E01               	addlw	1
  4724  0E55  1903               	skipnz
  4725  0E56  2E58               	goto	u4252
  4726  0E57  07B4               	addwf	___flmul@grs+2,f
  4727  0E58                     u4252:
  4728  0E58  082F               	movf	??___flmul+3,w
  4729  0E59  1103               	clrz
  4730  0E5A  1803               	skipnc
  4731  0E5B  3E01               	addlw	1
  4732  0E5C  1903               	skipnz
  4733  0E5D  2E5F               	goto	u4253
  4734  0E5E  07B5               	addwf	___flmul@grs+3,f
  4735  0E5F                     u4253:
  4736  0E5F                     l2818:
  4737  0E5F  0825               	movf	___flmul@b+1,w
  4738  0E60  00AC               	movwf	??___flmul
  4739  0E61  082C               	movf	??___flmul,w
  4740  0E62  00F0               	movwf	__Umul8_16@multiplicand
  4741  0E63  082A               	movf	___flmul@a+2,w
  4742  0E64  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4743  0E69  0871               	movf	?__Umul8_16+1,w
  4744  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  4745  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  4746  0E6C  00BD               	movwf	___flmul@temp+1
  4747  0E6D  0870               	movf	?__Umul8_16,w
  4748  0E6E  00BC               	movwf	___flmul@temp
  4749  0E6F  083C               	movf	___flmul@temp,w
  4750  0E70  00AC               	movwf	??___flmul
  4751  0E71  083D               	movf	___flmul@temp+1,w
  4752  0E72  00AD               	movwf	??___flmul+1
  4753  0E73  01AE               	clrf	??___flmul+2
  4754  0E74  01AF               	clrf	??___flmul+3
  4755  0E75  082C               	movf	??___flmul,w
  4756  0E76  07B8               	addwf	___flmul@prod,f
  4757  0E77  082D               	movf	??___flmul+1,w
  4758  0E78  1103               	clrz
  4759  0E79  1803               	skipnc
  4760  0E7A  3E01               	addlw	1
  4761  0E7B  1903               	skipnz
  4762  0E7C  2E7E               	goto	u4261
  4763  0E7D  07B9               	addwf	___flmul@prod+1,f
  4764  0E7E                     u4261:
  4765  0E7E  082E               	movf	??___flmul+2,w
  4766  0E7F  1103               	clrz
  4767  0E80  1803               	skipnc
  4768  0E81  3E01               	addlw	1
  4769  0E82  1903               	skipnz
  4770  0E83  2E85               	goto	u4262
  4771  0E84  07BA               	addwf	___flmul@prod+2,f
  4772  0E85                     u4262:
  4773  0E85  082F               	movf	??___flmul+3,w
  4774  0E86  1103               	clrz
  4775  0E87  1803               	skipnc
  4776  0E88  3E01               	addlw	1
  4777  0E89  1903               	skipnz
  4778  0E8A  2E8C               	goto	u4263
  4779  0E8B  07BB               	addwf	___flmul@prod+3,f
  4780  0E8C                     u4263:
  4781  0E8C                     l2820:
  4782  0E8C  0826               	movf	___flmul@b+2,w
  4783  0E8D  00AC               	movwf	??___flmul
  4784  0E8E  082C               	movf	??___flmul,w
  4785  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  4786  0E90  0829               	movf	___flmul@a+1,w
  4787  0E91  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4788  0E96  0871               	movf	?__Umul8_16+1,w
  4789  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4790  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4791  0E99  00BD               	movwf	___flmul@temp+1
  4792  0E9A  0870               	movf	?__Umul8_16,w
  4793  0E9B  00BC               	movwf	___flmul@temp
  4794  0E9C                     l2822:
  4795  0E9C  083C               	movf	___flmul@temp,w
  4796  0E9D  00AC               	movwf	??___flmul
  4797  0E9E  083D               	movf	___flmul@temp+1,w
  4798  0E9F  00AD               	movwf	??___flmul+1
  4799  0EA0  01AE               	clrf	??___flmul+2
  4800  0EA1  01AF               	clrf	??___flmul+3
  4801  0EA2  082C               	movf	??___flmul,w
  4802  0EA3  07B8               	addwf	___flmul@prod,f
  4803  0EA4  082D               	movf	??___flmul+1,w
  4804  0EA5  1103               	clrz
  4805  0EA6  1803               	skipnc
  4806  0EA7  3E01               	addlw	1
  4807  0EA8  1903               	skipnz
  4808  0EA9  2EAB               	goto	u4271
  4809  0EAA  07B9               	addwf	___flmul@prod+1,f
  4810  0EAB                     u4271:
  4811  0EAB  082E               	movf	??___flmul+2,w
  4812  0EAC  1103               	clrz
  4813  0EAD  1803               	skipnc
  4814  0EAE  3E01               	addlw	1
  4815  0EAF  1903               	skipnz
  4816  0EB0  2EB2               	goto	u4272
  4817  0EB1  07BA               	addwf	___flmul@prod+2,f
  4818  0EB2                     u4272:
  4819  0EB2  082F               	movf	??___flmul+3,w
  4820  0EB3  1103               	clrz
  4821  0EB4  1803               	skipnc
  4822  0EB5  3E01               	addlw	1
  4823  0EB6  1903               	skipnz
  4824  0EB7  2EB9               	goto	u4273
  4825  0EB8  07BB               	addwf	___flmul@prod+3,f
  4826  0EB9                     u4273:
  4827  0EB9  0826               	movf	___flmul@b+2,w
  4828  0EBA  00AC               	movwf	??___flmul
  4829  0EBB  082C               	movf	??___flmul,w
  4830  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  4831  0EBD  082A               	movf	___flmul@a+2,w
  4832  0EBE  160A  118A  2002  120A  158A  	fcall	__Umul8_16
  4833  0EC3  0871               	movf	?__Umul8_16+1,w
  4834  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0EC6  00BD               	movwf	___flmul@temp+1
  4837  0EC7  0870               	movf	?__Umul8_16,w
  4838  0EC8  00BC               	movwf	___flmul@temp
  4839  0EC9                     l2824:
  4840  0EC9  083C               	movf	___flmul@temp,w
  4841  0ECA  00AC               	movwf	??___flmul
  4842  0ECB  083D               	movf	___flmul@temp+1,w
  4843  0ECC  00AD               	movwf	??___flmul+1
  4844  0ECD  01AE               	clrf	??___flmul+2
  4845  0ECE  01AF               	clrf	??___flmul+3
  4846  0ECF  3008               	movlw	8
  4847  0ED0                     u4285:
  4848  0ED0  1003               	clrc
  4849  0ED1  0DAC               	rlf	??___flmul,f
  4850  0ED2  0DAD               	rlf	??___flmul+1,f
  4851  0ED3  0DAE               	rlf	??___flmul+2,f
  4852  0ED4  0DAF               	rlf	??___flmul+3,f
  4853  0ED5                     u4280:
  4854  0ED5  3EFF               	addlw	-1
  4855  0ED6  1D03               	skipz
  4856  0ED7  2ED0               	goto	u4285
  4857  0ED8  082C               	movf	??___flmul,w
  4858  0ED9  07B8               	addwf	___flmul@prod,f
  4859  0EDA  082D               	movf	??___flmul+1,w
  4860  0EDB  1103               	clrz
  4861  0EDC  1803               	skipnc
  4862  0EDD  3E01               	addlw	1
  4863  0EDE  1903               	skipnz
  4864  0EDF  2EE1               	goto	u4291
  4865  0EE0  07B9               	addwf	___flmul@prod+1,f
  4866  0EE1                     u4291:
  4867  0EE1  082E               	movf	??___flmul+2,w
  4868  0EE2  1103               	clrz
  4869  0EE3  1803               	skipnc
  4870  0EE4  3E01               	addlw	1
  4871  0EE5  1903               	skipnz
  4872  0EE6  2EE8               	goto	u4292
  4873  0EE7  07BA               	addwf	___flmul@prod+2,f
  4874  0EE8                     u4292:
  4875  0EE8  082F               	movf	??___flmul+3,w
  4876  0EE9  1103               	clrz
  4877  0EEA  1803               	skipnc
  4878  0EEB  3E01               	addlw	1
  4879  0EEC  1903               	skipnz
  4880  0EED  2EEF               	goto	u4293
  4881  0EEE  07BB               	addwf	___flmul@prod+3,f
  4882  0EEF                     u4293:
  4883  0EEF                     l2826:
  4884  0EEF  0832               	movf	___flmul@grs,w
  4885  0EF0  00AC               	movwf	??___flmul
  4886  0EF1  0833               	movf	___flmul@grs+1,w
  4887  0EF2  00AD               	movwf	??___flmul+1
  4888  0EF3  0834               	movf	___flmul@grs+2,w
  4889  0EF4  00AE               	movwf	??___flmul+2
  4890  0EF5  0835               	movf	___flmul@grs+3,w
  4891  0EF6  00AF               	movwf	??___flmul+3
  4892  0EF7  3018               	movlw	24
  4893  0EF8                     u4305:
  4894  0EF8  1003               	clrc
  4895  0EF9  0CAF               	rrf	??___flmul+3,f
  4896  0EFA  0CAE               	rrf	??___flmul+2,f
  4897  0EFB  0CAD               	rrf	??___flmul+1,f
  4898  0EFC  0CAC               	rrf	??___flmul,f
  4899  0EFD                     u4300:
  4900  0EFD  3EFF               	addlw	-1
  4901  0EFE  1D03               	skipz
  4902  0EFF  2EF8               	goto	u4305
  4903  0F00  082C               	movf	??___flmul,w
  4904  0F01  07B8               	addwf	___flmul@prod,f
  4905  0F02  082D               	movf	??___flmul+1,w
  4906  0F03  1103               	clrz
  4907  0F04  1803               	skipnc
  4908  0F05  3E01               	addlw	1
  4909  0F06  1903               	skipnz
  4910  0F07  2F09               	goto	u4311
  4911  0F08  07B9               	addwf	___flmul@prod+1,f
  4912  0F09                     u4311:
  4913  0F09  082E               	movf	??___flmul+2,w
  4914  0F0A  1103               	clrz
  4915  0F0B  1803               	skipnc
  4916  0F0C  3E01               	addlw	1
  4917  0F0D  1903               	skipnz
  4918  0F0E  2F10               	goto	u4312
  4919  0F0F  07BA               	addwf	___flmul@prod+2,f
  4920  0F10                     u4312:
  4921  0F10  082F               	movf	??___flmul+3,w
  4922  0F11  1103               	clrz
  4923  0F12  1803               	skipnc
  4924  0F13  3E01               	addlw	1
  4925  0F14  1903               	skipnz
  4926  0F15  2F17               	goto	u4313
  4927  0F16  07BB               	addwf	___flmul@prod+3,f
  4928  0F17                     u4313:
  4929  0F17                     l2828:
  4930  0F17  3008               	movlw	8
  4931  0F18  00AC               	movwf	??___flmul
  4932  0F19                     u4325:
  4933  0F19  1003               	clrc
  4934  0F1A  0DB2               	rlf	___flmul@grs,f
  4935  0F1B  0DB3               	rlf	___flmul@grs+1,f
  4936  0F1C  0DB4               	rlf	___flmul@grs+2,f
  4937  0F1D  0DB5               	rlf	___flmul@grs+3,f
  4938  0F1E  0BAC               	decfsz	??___flmul,f
  4939  0F1F  2F19               	goto	u4325
  4940  0F20                     l2830:
  4941  0F20  0837               	movf	___flmul@bexp,w
  4942  0F21  0736               	addwf	___flmul@aexp,w
  4943  0F22  00AC               	movwf	??___flmul
  4944  0F23  01AD               	clrf	??___flmul+1
  4945  0F24  0DAD               	rlf	??___flmul+1,f
  4946  0F25  082C               	movf	??___flmul,w
  4947  0F26  3E82               	addlw	130
  4948  0F27  00BC               	movwf	___flmul@temp
  4949  0F28  082D               	movf	??___flmul+1,w
  4950  0F29  1803               	skipnc
  4951  0F2A  3E01               	addlw	1
  4952  0F2B  3EFF               	addlw	255
  4953  0F2C  00BD               	movwf	___flmul@temp+1
  4954  0F2D  2F4B               	goto	l2842
  4955  0F2E                     l2832:
  4956  0F2E  3001               	movlw	1
  4957  0F2F  00AC               	movwf	??___flmul
  4958  0F30                     u4335:
  4959  0F30  1003               	clrc
  4960  0F31  0DB8               	rlf	___flmul@prod,f
  4961  0F32  0DB9               	rlf	___flmul@prod+1,f
  4962  0F33  0DBA               	rlf	___flmul@prod+2,f
  4963  0F34  0DBB               	rlf	___flmul@prod+3,f
  4964  0F35  0BAC               	decfsz	??___flmul,f
  4965  0F36  2F30               	goto	u4335
  4966  0F37                     l2834:
  4967  0F37  1FB5               	btfss	___flmul@grs+3,7
  4968  0F38  2F3A               	goto	u4341
  4969  0F39  2F3B               	goto	u4340
  4970  0F3A                     u4341:
  4971  0F3A  2F3C               	goto	l2838
  4972  0F3B                     u4340:
  4973  0F3B                     l2836:
  4974  0F3B  1438               	bsf	___flmul@prod,0
  4975  0F3C                     l2838:
  4976  0F3C  3001               	movlw	1
  4977  0F3D  00AC               	movwf	??___flmul
  4978  0F3E                     u4355:
  4979  0F3E  1003               	clrc
  4980  0F3F  0DB2               	rlf	___flmul@grs,f
  4981  0F40  0DB3               	rlf	___flmul@grs+1,f
  4982  0F41  0DB4               	rlf	___flmul@grs+2,f
  4983  0F42  0DB5               	rlf	___flmul@grs+3,f
  4984  0F43  0BAC               	decfsz	??___flmul,f
  4985  0F44  2F3E               	goto	u4355
  4986  0F45                     l2840:
  4987  0F45  30FF               	movlw	255
  4988  0F46  07BC               	addwf	___flmul@temp,f
  4989  0F47  1803               	skipnc
  4990  0F48  0ABD               	incf	___flmul@temp+1,f
  4991  0F49  30FF               	movlw	255
  4992  0F4A  07BD               	addwf	___flmul@temp+1,f
  4993  0F4B                     l2842:
  4994  0F4B  1FBA               	btfss	___flmul@prod+2,7
  4995  0F4C  2F4E               	goto	u4361
  4996  0F4D  2F4F               	goto	u4360
  4997  0F4E                     u4361:
  4998  0F4E  2F2E               	goto	l2832
  4999  0F4F                     u4360:
  5000  0F4F                     l2844:
  5001  0F4F  01B6               	clrf	___flmul@aexp
  5002  0F50                     l2846:
  5003  0F50  1FB5               	btfss	___flmul@grs+3,7
  5004  0F51  2F53               	goto	u4371
  5005  0F52  2F54               	goto	u4370
  5006  0F53                     u4371:
  5007  0F53  2F70               	goto	l2854
  5008  0F54                     u4370:
  5009  0F54                     l2848:
  5010  0F54  30FF               	movlw	255
  5011  0F55  0532               	andwf	___flmul@grs,w
  5012  0F56  00AC               	movwf	??___flmul
  5013  0F57  30FF               	movlw	255
  5014  0F58  0533               	andwf	___flmul@grs+1,w
  5015  0F59  00AD               	movwf	??___flmul+1
  5016  0F5A  30FF               	movlw	255
  5017  0F5B  0534               	andwf	___flmul@grs+2,w
  5018  0F5C  00AE               	movwf	??___flmul+2
  5019  0F5D  307F               	movlw	127
  5020  0F5E  0535               	andwf	___flmul@grs+3,w
  5021  0F5F  00AF               	movwf	??___flmul+3
  5022  0F60  082F               	movf	??___flmul+3,w
  5023  0F61  042E               	iorwf	??___flmul+2,w
  5024  0F62  042D               	iorwf	??___flmul+1,w
  5025  0F63  042C               	iorwf	??___flmul,w
  5026  0F64  1903               	skipnz
  5027  0F65  2F67               	goto	u4381
  5028  0F66  2F68               	goto	u4380
  5029  0F67                     u4381:
  5030  0F67  2F6B               	goto	l746
  5031  0F68                     u4380:
  5032  0F68                     l2850:
  5033  0F68  01B6               	clrf	___flmul@aexp
  5034  0F69  0AB6               	incf	___flmul@aexp,f
  5035  0F6A  2F70               	goto	l2854
  5036  0F6B                     l746:
  5037  0F6B  1C38               	btfss	___flmul@prod,0
  5038  0F6C  2F6E               	goto	u4391
  5039  0F6D  2F6F               	goto	u4390
  5040  0F6E                     u4391:
  5041  0F6E  2F70               	goto	l2854
  5042  0F6F                     u4390:
  5043  0F6F  2F68               	goto	l2850
  5044  0F70                     l2854:
  5045  0F70  0836               	movf	___flmul@aexp,w
  5046  0F71  1903               	btfsc	3,2
  5047  0F72  2F74               	goto	u4401
  5048  0F73  2F75               	goto	u4400
  5049  0F74                     u4401:
  5050  0F74  2FA6               	goto	l2864
  5051  0F75                     u4400:
  5052  0F75                     l2856:
  5053  0F75  3001               	movlw	1
  5054  0F76  07B8               	addwf	___flmul@prod,f
  5055  0F77  3000               	movlw	0
  5056  0F78  1803               	skipnc
  5057  0F79  3001               	movlw	1
  5058  0F7A  07B9               	addwf	___flmul@prod+1,f
  5059  0F7B  3000               	movlw	0
  5060  0F7C  1803               	skipnc
  5061  0F7D  3001               	movlw	1
  5062  0F7E  07BA               	addwf	___flmul@prod+2,f
  5063  0F7F  3000               	movlw	0
  5064  0F80  1803               	skipnc
  5065  0F81  3001               	movlw	1
  5066  0F82  07BB               	addwf	___flmul@prod+3,f
  5067  0F83                     l2858:
  5068  0F83  1C3B               	btfss	___flmul@prod+3,0
  5069  0F84  2F86               	goto	u4411
  5070  0F85  2F87               	goto	u4410
  5071  0F86                     u4411:
  5072  0F86  2FA6               	goto	l2864
  5073  0F87                     u4410:
  5074  0F87                     l2860:
  5075  0F87  0838               	movf	___flmul@prod,w
  5076  0F88  00AC               	movwf	??___flmul
  5077  0F89  0839               	movf	___flmul@prod+1,w
  5078  0F8A  00AD               	movwf	??___flmul+1
  5079  0F8B  083A               	movf	___flmul@prod+2,w
  5080  0F8C  00AE               	movwf	??___flmul+2
  5081  0F8D  083B               	movf	___flmul@prod+3,w
  5082  0F8E  00AF               	movwf	??___flmul+3
  5083  0F8F  3001               	movlw	1
  5084  0F90  00B0               	movwf	??___flmul+4
  5085  0F91                     u4425:
  5086  0F91  0D2F               	rlf	??___flmul+3,w
  5087  0F92  0CAF               	rrf	??___flmul+3,f
  5088  0F93  0CAE               	rrf	??___flmul+2,f
  5089  0F94  0CAD               	rrf	??___flmul+1,f
  5090  0F95  0CAC               	rrf	??___flmul,f
  5091  0F96                     u4420:
  5092  0F96  0BB0               	decfsz	??___flmul+4,f
  5093  0F97  2F91               	goto	u4425
  5094  0F98  082F               	movf	??___flmul+3,w
  5095  0F99  00BB               	movwf	___flmul@prod+3
  5096  0F9A  082E               	movf	??___flmul+2,w
  5097  0F9B  00BA               	movwf	___flmul@prod+2
  5098  0F9C  082D               	movf	??___flmul+1,w
  5099  0F9D  00B9               	movwf	___flmul@prod+1
  5100  0F9E  082C               	movf	??___flmul,w
  5101  0F9F  00B8               	movwf	___flmul@prod
  5102  0FA0                     l2862:
  5103  0FA0  3001               	movlw	1
  5104  0FA1  07BC               	addwf	___flmul@temp,f
  5105  0FA2  1803               	skipnc
  5106  0FA3  0ABD               	incf	___flmul@temp+1,f
  5107  0FA4  3000               	movlw	0
  5108  0FA5  07BD               	addwf	___flmul@temp+1,f
  5109  0FA6                     l2864:
  5110  0FA6  083D               	movf	___flmul@temp+1,w
  5111  0FA7  3A80               	xorlw	128
  5112  0FA8  00FF               	movwf	btemp+1
  5113  0FA9  3080               	movlw	128
  5114  0FAA  027F               	subwf	btemp+1,w
  5115  0FAB  1D03               	skipz
  5116  0FAC  2FAF               	goto	u4435
  5117  0FAD  30FF               	movlw	255
  5118  0FAE  023C               	subwf	___flmul@temp,w
  5119  0FAF                     u4435:
  5120  0FAF  1C03               	skipc
  5121  0FB0  2FB2               	goto	u4431
  5122  0FB1  2FB3               	goto	u4430
  5123  0FB2                     u4431:
  5124  0FB2  2FBE               	goto	l2868
  5125  0FB3                     u4430:
  5126  0FB3                     l2866:
  5127  0FB3  307F               	movlw	127
  5128  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5129  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5130  0FB6  00BB               	movwf	___flmul@prod+3
  5131  0FB7  3080               	movlw	128
  5132  0FB8  00BA               	movwf	___flmul@prod+2
  5133  0FB9  3000               	movlw	0
  5134  0FBA  00B9               	movwf	___flmul@prod+1
  5135  0FBB  3000               	movlw	0
  5136  0FBC  00B8               	movwf	___flmul@prod
  5137  0FBD  2FF3               	goto	l752
  5138  0FBE                     l2868:
  5139  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5140  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5141  0FC0  083D               	movf	___flmul@temp+1,w
  5142  0FC1  3A80               	xorlw	128
  5143  0FC2  00FF               	movwf	btemp+1
  5144  0FC3  3080               	movlw	128
  5145  0FC4  027F               	subwf	btemp+1,w
  5146  0FC5  1D03               	skipz
  5147  0FC6  2FC9               	goto	u4445
  5148  0FC7  3001               	movlw	1
  5149  0FC8  023C               	subwf	___flmul@temp,w
  5150  0FC9                     u4445:
  5151  0FC9  1803               	skipnc
  5152  0FCA  2FCC               	goto	u4441
  5153  0FCB  2FCD               	goto	u4440
  5154  0FCC                     u4441:
  5155  0FCC  2FD9               	goto	l2874
  5156  0FCD                     u4440:
  5157  0FCD                     l2870:
  5158  0FCD  3000               	movlw	0
  5159  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5160  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5161  0FD0  00BB               	movwf	___flmul@prod+3
  5162  0FD1  3000               	movlw	0
  5163  0FD2  00BA               	movwf	___flmul@prod+2
  5164  0FD3  3000               	movlw	0
  5165  0FD4  00B9               	movwf	___flmul@prod+1
  5166  0FD5  3000               	movlw	0
  5167  0FD6  00B8               	movwf	___flmul@prod
  5168  0FD7                     l2872:
  5169  0FD7  01B1               	clrf	___flmul@sign
  5170  0FD8  2FF3               	goto	l752
  5171  0FD9                     l2874:
  5172  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5173  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5174  0FDB  083C               	movf	___flmul@temp,w
  5175  0FDC  00AC               	movwf	??___flmul
  5176  0FDD  082C               	movf	??___flmul,w
  5177  0FDE  00B7               	movwf	___flmul@bexp
  5178  0FDF  30FF               	movlw	255
  5179  0FE0  05B8               	andwf	___flmul@prod,f
  5180  0FE1  30FF               	movlw	255
  5181  0FE2  05B9               	andwf	___flmul@prod+1,f
  5182  0FE3  307F               	movlw	127
  5183  0FE4  05BA               	andwf	___flmul@prod+2,f
  5184  0FE5  3000               	movlw	0
  5185  0FE6  05BB               	andwf	___flmul@prod+3,f
  5186  0FE7                     l2876:
  5187  0FE7  1C37               	btfss	___flmul@bexp,0
  5188  0FE8  2FEA               	goto	u4451
  5189  0FE9  2FEB               	goto	u4450
  5190  0FEA                     u4451:
  5191  0FEA  2FEC               	goto	l2880
  5192  0FEB                     u4450:
  5193  0FEB                     l2878:
  5194  0FEB  17BA               	bsf	___flmul@prod+2,7
  5195  0FEC                     l2880:
  5196  0FEC  0837               	movf	___flmul@bexp,w
  5197  0FED  00AC               	movwf	??___flmul
  5198  0FEE  1003               	clrc
  5199  0FEF  0C2C               	rrf	??___flmul,w
  5200  0FF0  00AD               	movwf	??___flmul+1
  5201  0FF1  082D               	movf	??___flmul+1,w
  5202  0FF2  00BB               	movwf	___flmul@prod+3
  5203  0FF3                     l752:
  5204  0FF3  0831               	movf	___flmul@sign,w
  5205  0FF4  00AC               	movwf	??___flmul
  5206  0FF5  082C               	movf	??___flmul,w
  5207  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5208  0FF7                     l2882:
  5209  0FF7  083B               	movf	___flmul@prod+3,w
  5210  0FF8  00A7               	movwf	?___flmul+3
  5211  0FF9  083A               	movf	___flmul@prod+2,w
  5212  0FFA  00A6               	movwf	?___flmul+2
  5213  0FFB  0839               	movf	___flmul@prod+1,w
  5214  0FFC  00A5               	movwf	?___flmul+1
  5215  0FFD  0838               	movf	___flmul@prod,w
  5216  0FFE  00A4               	movwf	?___flmul
  5217  0FFF                     l740:
  5218  0FFF  0008               	return
  5219  1000                     __end_of___flmul:
  5220                           
  5221                           	psect	text10
  5222  1002                     __ptext10:	
  5223 ;; *************** function __Umul8_16 *****************
  5224 ;; Defined at:
  5225 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  multiplier      1    wreg     unsigned char 
  5228 ;;  multiplicand    1    0[COMMON] unsigned char 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  multiplier      1    8[COMMON] unsigned char 
  5231 ;;  word_mpld       2    6[COMMON] unsigned int 
  5232 ;;  product         2    4[COMMON] unsigned int 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  2    0[COMMON] unsigned int 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5242 ;;      Params:         2       0       0       0       0
  5243 ;;      Locals:         5       0       0       0       0
  5244 ;;      Temps:          2       0       0       0       0
  5245 ;;      Totals:         9       0       0       0       0
  5246 ;;Total ram usage:        9 bytes
  5247 ;; Hardware stack levels used: 1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		___flmul
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255  1002                     __Umul8_16:	
  5256                           ;psect for function __Umul8_16
  5257                           
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5261                           ;__Umul8_16@multiplier stored from wreg
  5262  1002  00F8               	movwf	__Umul8_16@multiplier
  5263  1003                     l2398:
  5264  1003  01F4               	clrf	__Umul8_16@product
  5265  1004  01F5               	clrf	__Umul8_16@product+1
  5266  1005                     l2400:
  5267  1005  0870               	movf	__Umul8_16@multiplicand,w
  5268  1006  00F2               	movwf	??__Umul8_16
  5269  1007  01F3               	clrf	??__Umul8_16+1
  5270  1008  0872               	movf	??__Umul8_16,w
  5271  1009  00F6               	movwf	__Umul8_16@word_mpld
  5272  100A  0873               	movf	??__Umul8_16+1,w
  5273  100B  00F7               	movwf	__Umul8_16@word_mpld+1
  5274  100C                     l2402:
  5275  100C  1C78               	btfss	__Umul8_16@multiplier,0
  5276  100D  280F               	goto	u3241
  5277  100E  2810               	goto	u3240
  5278  100F                     u3241:
  5279  100F  2816               	goto	l759
  5280  1010                     u3240:
  5281  1010                     l2404:
  5282  1010  0876               	movf	__Umul8_16@word_mpld,w
  5283  1011  07F4               	addwf	__Umul8_16@product,f
  5284  1012  1803               	skipnc
  5285  1013  0AF5               	incf	__Umul8_16@product+1,f
  5286  1014  0877               	movf	__Umul8_16@word_mpld+1,w
  5287  1015  07F5               	addwf	__Umul8_16@product+1,f
  5288  1016                     l759:
  5289  1016  3001               	movlw	1
  5290  1017                     u3255:
  5291  1017  1003               	clrc
  5292  1018  0DF6               	rlf	__Umul8_16@word_mpld,f
  5293  1019  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5294  101A  3EFF               	addlw	-1
  5295  101B  1D03               	skipz
  5296  101C  2817               	goto	u3255
  5297  101D  1003               	clrc
  5298  101E  0CF8               	rrf	__Umul8_16@multiplier,f
  5299  101F                     l2406:
  5300  101F  0878               	movf	__Umul8_16@multiplier,w
  5301  1020  1D03               	btfss	3,2
  5302  1021  2823               	goto	u3261
  5303  1022  2824               	goto	u3260
  5304  1023                     u3261:
  5305  1023  280C               	goto	l2402
  5306  1024                     u3260:
  5307  1024                     l2408:
  5308  1024  0875               	movf	__Umul8_16@product+1,w
  5309  1025  00F1               	movwf	?__Umul8_16+1
  5310  1026  0874               	movf	__Umul8_16@product,w
  5311  1027  00F0               	movwf	?__Umul8_16
  5312  1028                     l761:
  5313  1028  0008               	return
  5314  1029                     __end_of__Umul8_16:
  5315                           
  5316                           	psect	text11
  5317  1D66                     __ptext11:	
  5318 ;; *************** function __tdiv_to_l_ *****************
  5319 ;; Defined at:
  5320 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\ftdivl.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  f1              4    0[COMMON] float 
  5323 ;;  f2              4    4[COMMON] float 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  quot            4    0[BANK0 ] unsigned long 
  5326 ;;  exp1            1    5[BANK0 ] unsigned char 
  5327 ;;  cntr            1    4[BANK0 ] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  4    0[COMMON] unsigned long 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5337 ;;      Params:         8       0       0       0       0
  5338 ;;      Locals:         0       6       0       0       0
  5339 ;;      Temps:          4       0       0       0       0
  5340 ;;      Totals:        12       6       0       0       0
  5341 ;;Total ram usage:       18 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_sprintf
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350  1D66                     __tdiv_to_l_:	
  5351                           ;psect for function __tdiv_to_l_
  5352                           
  5353  1D66                     l2986:	
  5354                           ;incstack = 0
  5355                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5356                           
  5357  1D66  0870               	movf	__tdiv_to_l_@f1,w
  5358  1D67  00F8               	movwf	??__tdiv_to_l_
  5359  1D68  0871               	movf	__tdiv_to_l_@f1+1,w
  5360  1D69  00F9               	movwf	??__tdiv_to_l_+1
  5361  1D6A  0872               	movf	__tdiv_to_l_@f1+2,w
  5362  1D6B  00FA               	movwf	??__tdiv_to_l_+2
  5363  1D6C  1003               	clrc
  5364  1D6D  0D79               	rlf	??__tdiv_to_l_+1,w
  5365  1D6E  0D7A               	rlf	??__tdiv_to_l_+2,w
  5366  1D6F  00FB               	movwf	??__tdiv_to_l_+3
  5367  1D70  087B               	movf	??__tdiv_to_l_+3,w
  5368  1D71  1283               	bcf	3,5	;RP0=0, select bank0
  5369  1D72  1303               	bcf	3,6	;RP1=0, select bank0
  5370  1D73  00A5               	movwf	__tdiv_to_l_@exp1
  5371  1D74  0825               	movf	__tdiv_to_l_@exp1,w
  5372  1D75  1D03               	btfss	3,2
  5373  1D76  2D78               	goto	u4741
  5374  1D77  2D79               	goto	u4740
  5375  1D78                     u4741:
  5376  1D78  2D82               	goto	l2992
  5377  1D79                     u4740:
  5378  1D79                     l2988:
  5379  1D79  3000               	movlw	0
  5380  1D7A  00F3               	movwf	?__tdiv_to_l_+3
  5381  1D7B  3000               	movlw	0
  5382  1D7C  00F2               	movwf	?__tdiv_to_l_+2
  5383  1D7D  3000               	movlw	0
  5384  1D7E  00F1               	movwf	?__tdiv_to_l_+1
  5385  1D7F  3000               	movlw	0
  5386  1D80  00F0               	movwf	?__tdiv_to_l_
  5387  1D81  2E22               	goto	l534
  5388  1D82                     l2992:
  5389  1D82  0874               	movf	__tdiv_to_l_@f2,w
  5390  1D83  00F8               	movwf	??__tdiv_to_l_
  5391  1D84  0875               	movf	__tdiv_to_l_@f2+1,w
  5392  1D85  00F9               	movwf	??__tdiv_to_l_+1
  5393  1D86  0876               	movf	__tdiv_to_l_@f2+2,w
  5394  1D87  00FA               	movwf	??__tdiv_to_l_+2
  5395  1D88  1003               	clrc
  5396  1D89  0D79               	rlf	??__tdiv_to_l_+1,w
  5397  1D8A  0D7A               	rlf	??__tdiv_to_l_+2,w
  5398  1D8B  00FB               	movwf	??__tdiv_to_l_+3
  5399  1D8C  087B               	movf	??__tdiv_to_l_+3,w
  5400  1D8D  00A4               	movwf	__tdiv_to_l_@cntr
  5401  1D8E  0824               	movf	__tdiv_to_l_@cntr,w
  5402  1D8F  1D03               	btfss	3,2
  5403  1D90  2D92               	goto	u4751
  5404  1D91  2D93               	goto	u4750
  5405  1D92                     u4751:
  5406  1D92  2D94               	goto	l535
  5407  1D93                     u4750:
  5408  1D93  2D79               	goto	l2988
  5409  1D94                     l535:
  5410  1D94  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5411  1D95                     l2998:
  5412  1D95  30FF               	movlw	255
  5413  1D96  05F0               	andwf	__tdiv_to_l_@f1,f
  5414  1D97  30FF               	movlw	255
  5415  1D98  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5416  1D99  3000               	movlw	0
  5417  1D9A  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5418  1D9B                     l3000:
  5419  1D9B  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5420  1D9C  30FF               	movlw	255
  5421  1D9D  05F4               	andwf	__tdiv_to_l_@f2,f
  5422  1D9E  30FF               	movlw	255
  5423  1D9F  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5424  1DA0  3000               	movlw	0
  5425  1DA1  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5426  1DA2  3000               	movlw	0
  5427  1DA3  00A3               	movwf	__tdiv_to_l_@quot+3
  5428  1DA4  3000               	movlw	0
  5429  1DA5  00A2               	movwf	__tdiv_to_l_@quot+2
  5430  1DA6  3000               	movlw	0
  5431  1DA7  00A1               	movwf	__tdiv_to_l_@quot+1
  5432  1DA8  3000               	movlw	0
  5433  1DA9  00A0               	movwf	__tdiv_to_l_@quot
  5434  1DAA                     l3002:
  5435  1DAA  307F               	movlw	127
  5436  1DAB  02A5               	subwf	__tdiv_to_l_@exp1,f
  5437  1DAC                     l3004:
  5438  1DAC  3098               	movlw	152
  5439  1DAD  0724               	addwf	__tdiv_to_l_@cntr,w
  5440  1DAE  00F8               	movwf	??__tdiv_to_l_
  5441  1DAF  0878               	movf	??__tdiv_to_l_,w
  5442  1DB0  02A5               	subwf	__tdiv_to_l_@exp1,f
  5443  1DB1  3018               	movlw	24
  5444  1DB2  00F8               	movwf	??__tdiv_to_l_
  5445  1DB3  0878               	movf	??__tdiv_to_l_,w
  5446  1DB4  00A4               	movwf	__tdiv_to_l_@cntr
  5447  1DB5                     l3006:
  5448  1DB5  3001               	movlw	1
  5449  1DB6  00F8               	movwf	??__tdiv_to_l_
  5450  1DB7                     u4765:
  5451  1DB7  1003               	clrc
  5452  1DB8  0DA0               	rlf	__tdiv_to_l_@quot,f
  5453  1DB9  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5454  1DBA  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5455  1DBB  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5456  1DBC  0BF8               	decfsz	??__tdiv_to_l_,f
  5457  1DBD  2DB7               	goto	u4765
  5458  1DBE                     l3008:
  5459  1DBE  0876               	movf	__tdiv_to_l_@f2+2,w
  5460  1DBF  0272               	subwf	__tdiv_to_l_@f1+2,w
  5461  1DC0  1D03               	skipz
  5462  1DC1  2DC8               	goto	u4775
  5463  1DC2  0875               	movf	__tdiv_to_l_@f2+1,w
  5464  1DC3  0271               	subwf	__tdiv_to_l_@f1+1,w
  5465  1DC4  1D03               	skipz
  5466  1DC5  2DC8               	goto	u4775
  5467  1DC6  0874               	movf	__tdiv_to_l_@f2,w
  5468  1DC7  0270               	subwf	__tdiv_to_l_@f1,w
  5469  1DC8                     u4775:
  5470  1DC8  1C03               	skipc
  5471  1DC9  2DCB               	goto	u4771
  5472  1DCA  2DCC               	goto	u4770
  5473  1DCB                     u4771:
  5474  1DCB  2DD7               	goto	l3014
  5475  1DCC                     u4770:
  5476  1DCC                     l3010:
  5477  1DCC  0874               	movf	__tdiv_to_l_@f2,w
  5478  1DCD  02F0               	subwf	__tdiv_to_l_@f1,f
  5479  1DCE  0875               	movf	__tdiv_to_l_@f2+1,w
  5480  1DCF  1C03               	skipc
  5481  1DD0  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5482  1DD1  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5483  1DD2  0876               	movf	__tdiv_to_l_@f2+2,w
  5484  1DD3  1C03               	skipc
  5485  1DD4  0A76               	incf	__tdiv_to_l_@f2+2,w
  5486  1DD5  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5487  1DD6                     l3012:
  5488  1DD6  1420               	bsf	__tdiv_to_l_@quot,0
  5489  1DD7                     l3014:
  5490  1DD7  3001               	movlw	1
  5491  1DD8                     u4785:
  5492  1DD8  1003               	clrc
  5493  1DD9  0DF0               	rlf	__tdiv_to_l_@f1,f
  5494  1DDA  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5495  1DDB  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5496  1DDC  3EFF               	addlw	-1
  5497  1DDD  1D03               	skipz
  5498  1DDE  2DD8               	goto	u4785
  5499  1DDF                     l3016:
  5500  1DDF  3001               	movlw	1
  5501  1DE0  02A4               	subwf	__tdiv_to_l_@cntr,f
  5502  1DE1  1D03               	btfss	3,2
  5503  1DE2  2DE4               	goto	u4791
  5504  1DE3  2DE5               	goto	u4790
  5505  1DE4                     u4791:
  5506  1DE4  2DB5               	goto	l3006
  5507  1DE5                     u4790:
  5508  1DE5                     l538:
  5509  1DE5  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5510  1DE6  2DE8               	goto	u4801
  5511  1DE7  2DE9               	goto	u4800
  5512  1DE8                     u4801:
  5513  1DE8  2E03               	goto	l3026
  5514  1DE9                     u4800:
  5515  1DE9                     l3018:
  5516  1DE9  0825               	movf	__tdiv_to_l_@exp1,w
  5517  1DEA  3A80               	xorlw	128
  5518  1DEB  3E97               	addlw	151
  5519  1DEC  1803               	skipnc
  5520  1DED  2DEF               	goto	u4811
  5521  1DEE  2DF0               	goto	u4810
  5522  1DEF                     u4811:
  5523  1DEF  2DF1               	goto	l3024
  5524  1DF0                     u4810:
  5525  1DF0  2D79               	goto	l2988
  5526  1DF1                     l3024:
  5527  1DF1  3001               	movlw	1
  5528  1DF2                     u4825:
  5529  1DF2  1003               	clrc
  5530  1DF3  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5531  1DF4  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5532  1DF5  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5533  1DF6  0CA0               	rrf	__tdiv_to_l_@quot,f
  5534  1DF7  3EFF               	addlw	-1
  5535  1DF8  1D03               	skipz
  5536  1DF9  2DF2               	goto	u4825
  5537  1DFA  3001               	movlw	1
  5538  1DFB  00F8               	movwf	??__tdiv_to_l_
  5539  1DFC  0878               	movf	??__tdiv_to_l_,w
  5540  1DFD  07A5               	addwf	__tdiv_to_l_@exp1,f
  5541  1DFE  1D03               	btfss	3,2
  5542  1DFF  2E01               	goto	u4831
  5543  1E00  2E02               	goto	u4830
  5544  1E01                     u4831:
  5545  1E01  2DF1               	goto	l3024
  5546  1E02                     u4830:
  5547  1E02  2E1A               	goto	l3034
  5548  1E03                     l3026:
  5549  1E03  3018               	movlw	24
  5550  1E04  0225               	subwf	__tdiv_to_l_@exp1,w
  5551  1E05  1C03               	skipc
  5552  1E06  2E08               	goto	u4841
  5553  1E07  2E09               	goto	u4840
  5554  1E08                     u4841:
  5555  1E08  2E15               	goto	l545
  5556  1E09                     u4840:
  5557  1E09  2D79               	goto	l2988
  5558  1E0A                     l3032:
  5559  1E0A  3001               	movlw	1
  5560  1E0B  00F8               	movwf	??__tdiv_to_l_
  5561  1E0C                     u4855:
  5562  1E0C  1003               	clrc
  5563  1E0D  0DA0               	rlf	__tdiv_to_l_@quot,f
  5564  1E0E  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5565  1E0F  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5566  1E10  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5567  1E11  0BF8               	decfsz	??__tdiv_to_l_,f
  5568  1E12  2E0C               	goto	u4855
  5569  1E13  3001               	movlw	1
  5570  1E14  02A5               	subwf	__tdiv_to_l_@exp1,f
  5571  1E15                     l545:
  5572  1E15  0825               	movf	__tdiv_to_l_@exp1,w
  5573  1E16  1D03               	btfss	3,2
  5574  1E17  2E19               	goto	u4861
  5575  1E18  2E1A               	goto	u4860
  5576  1E19                     u4861:
  5577  1E19  2E0A               	goto	l3032
  5578  1E1A                     u4860:
  5579  1E1A                     l3034:
  5580  1E1A  0823               	movf	__tdiv_to_l_@quot+3,w
  5581  1E1B  00F3               	movwf	?__tdiv_to_l_+3
  5582  1E1C  0822               	movf	__tdiv_to_l_@quot+2,w
  5583  1E1D  00F2               	movwf	?__tdiv_to_l_+2
  5584  1E1E  0821               	movf	__tdiv_to_l_@quot+1,w
  5585  1E1F  00F1               	movwf	?__tdiv_to_l_+1
  5586  1E20  0820               	movf	__tdiv_to_l_@quot,w
  5587  1E21  00F0               	movwf	?__tdiv_to_l_
  5588  1E22                     l534:
  5589  1E22  0008               	return
  5590  1E23                     __end_of__tdiv_to_l_:
  5591                           
  5592                           	psect	text12
  5593  0882                     __ptext12:	
  5594 ;; *************** function __div_to_l_ *****************
  5595 ;; Defined at:
  5596 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fldivl.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  f1              4    0[COMMON] unsigned long 
  5599 ;;  f2              4    4[COMMON] unsigned long 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  quot            4    0[BANK0 ] unsigned long 
  5602 ;;  exp1            1    5[BANK0 ] unsigned char 
  5603 ;;  cntr            1    4[BANK0 ] unsigned char 
  5604 ;; Return value:  Size  Location     Type
  5605 ;;                  4    0[COMMON] unsigned long 
  5606 ;; Registers used:
  5607 ;;		wreg, status,2, status,0
  5608 ;; Tracked objects:
  5609 ;;		On entry : 0/0
  5610 ;;		On exit  : 0/0
  5611 ;;		Unchanged: 0/0
  5612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5613 ;;      Params:         8       0       0       0       0
  5614 ;;      Locals:         0       6       0       0       0
  5615 ;;      Temps:          1       0       0       0       0
  5616 ;;      Totals:         9       6       0       0       0
  5617 ;;Total ram usage:       15 bytes
  5618 ;; Hardware stack levels used: 1
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_sprintf
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626  0882                     __div_to_l_:	
  5627                           ;psect for function __div_to_l_
  5628                           
  5629  0882                     l3038:	
  5630                           ;incstack = 0
  5631                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5632                           
  5633  0882  1003               	clrc
  5634  0883  0D72               	rlf	__div_to_l_@f1+2,w
  5635  0884  0D73               	rlf	__div_to_l_@f1+3,w
  5636  0885  00F8               	movwf	??__div_to_l_
  5637  0886  0878               	movf	??__div_to_l_,w
  5638  0887  1283               	bcf	3,5	;RP0=0, select bank0
  5639  0888  1303               	bcf	3,6	;RP1=0, select bank0
  5640  0889  00A5               	movwf	__div_to_l_@exp1
  5641  088A  0825               	movf	__div_to_l_@exp1,w
  5642  088B  1D03               	btfss	3,2
  5643  088C  288E               	goto	u4871
  5644  088D  288F               	goto	u4870
  5645  088E                     u4871:
  5646  088E  2898               	goto	l3044
  5647  088F                     u4870:
  5648  088F                     l3040:
  5649  088F  3000               	movlw	0
  5650  0890  00F3               	movwf	?__div_to_l_+3
  5651  0891  3000               	movlw	0
  5652  0892  00F2               	movwf	?__div_to_l_+2
  5653  0893  3000               	movlw	0
  5654  0894  00F1               	movwf	?__div_to_l_+1
  5655  0895  3000               	movlw	0
  5656  0896  00F0               	movwf	?__div_to_l_
  5657  0897  293F               	goto	l487
  5658  0898                     l3044:
  5659  0898  1003               	clrc
  5660  0899  0D76               	rlf	__div_to_l_@f2+2,w
  5661  089A  0D77               	rlf	__div_to_l_@f2+3,w
  5662  089B  00F8               	movwf	??__div_to_l_
  5663  089C  0878               	movf	??__div_to_l_,w
  5664  089D  00A4               	movwf	__div_to_l_@cntr
  5665  089E  0824               	movf	__div_to_l_@cntr,w
  5666  089F  1D03               	btfss	3,2
  5667  08A0  28A2               	goto	u4881
  5668  08A1  28A3               	goto	u4880
  5669  08A2                     u4881:
  5670  08A2  28A4               	goto	l488
  5671  08A3                     u4880:
  5672  08A3  288F               	goto	l3040
  5673  08A4                     l488:
  5674  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  5675  08A5                     l3050:
  5676  08A5  30FF               	movlw	255
  5677  08A6  05F0               	andwf	__div_to_l_@f1,f
  5678  08A7  30FF               	movlw	255
  5679  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  5680  08A9  30FF               	movlw	255
  5681  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  5682  08AB  3000               	movlw	0
  5683  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  5684  08AD                     l3052:
  5685  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  5686  08AE  30FF               	movlw	255
  5687  08AF  05F4               	andwf	__div_to_l_@f2,f
  5688  08B0  30FF               	movlw	255
  5689  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  5690  08B2  30FF               	movlw	255
  5691  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  5692  08B4  3000               	movlw	0
  5693  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  5694  08B6  3000               	movlw	0
  5695  08B7  00A3               	movwf	__div_to_l_@quot+3
  5696  08B8  3000               	movlw	0
  5697  08B9  00A2               	movwf	__div_to_l_@quot+2
  5698  08BA  3000               	movlw	0
  5699  08BB  00A1               	movwf	__div_to_l_@quot+1
  5700  08BC  3000               	movlw	0
  5701  08BD  00A0               	movwf	__div_to_l_@quot
  5702  08BE                     l3054:
  5703  08BE  307F               	movlw	127
  5704  08BF  02A5               	subwf	__div_to_l_@exp1,f
  5705  08C0                     l3056:
  5706  08C0  30A0               	movlw	160
  5707  08C1  0724               	addwf	__div_to_l_@cntr,w
  5708  08C2  00F8               	movwf	??__div_to_l_
  5709  08C3  0878               	movf	??__div_to_l_,w
  5710  08C4  02A5               	subwf	__div_to_l_@exp1,f
  5711  08C5  3020               	movlw	32
  5712  08C6  00F8               	movwf	??__div_to_l_
  5713  08C7  0878               	movf	??__div_to_l_,w
  5714  08C8  00A4               	movwf	__div_to_l_@cntr
  5715  08C9                     l3058:
  5716  08C9  3001               	movlw	1
  5717  08CA  00F8               	movwf	??__div_to_l_
  5718  08CB                     u4895:
  5719  08CB  1003               	clrc
  5720  08CC  0DA0               	rlf	__div_to_l_@quot,f
  5721  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  5722  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  5723  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  5724  08D0  0BF8               	decfsz	??__div_to_l_,f
  5725  08D1  28CB               	goto	u4895
  5726  08D2                     l3060:
  5727  08D2  0877               	movf	__div_to_l_@f2+3,w
  5728  08D3  0273               	subwf	__div_to_l_@f1+3,w
  5729  08D4  1D03               	skipz
  5730  08D5  28E0               	goto	u4905
  5731  08D6  0876               	movf	__div_to_l_@f2+2,w
  5732  08D7  0272               	subwf	__div_to_l_@f1+2,w
  5733  08D8  1D03               	skipz
  5734  08D9  28E0               	goto	u4905
  5735  08DA  0875               	movf	__div_to_l_@f2+1,w
  5736  08DB  0271               	subwf	__div_to_l_@f1+1,w
  5737  08DC  1D03               	skipz
  5738  08DD  28E0               	goto	u4905
  5739  08DE  0874               	movf	__div_to_l_@f2,w
  5740  08DF  0270               	subwf	__div_to_l_@f1,w
  5741  08E0                     u4905:
  5742  08E0  1C03               	skipc
  5743  08E1  28E3               	goto	u4901
  5744  08E2  28E4               	goto	u4900
  5745  08E3                     u4901:
  5746  08E3  28F3               	goto	l3066
  5747  08E4                     u4900:
  5748  08E4                     l3062:
  5749  08E4  0874               	movf	__div_to_l_@f2,w
  5750  08E5  02F0               	subwf	__div_to_l_@f1,f
  5751  08E6  0875               	movf	__div_to_l_@f2+1,w
  5752  08E7  1C03               	skipc
  5753  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  5754  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  5755  08EA  0876               	movf	__div_to_l_@f2+2,w
  5756  08EB  1C03               	skipc
  5757  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  5758  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  5759  08EE  0877               	movf	__div_to_l_@f2+3,w
  5760  08EF  1C03               	skipc
  5761  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  5762  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  5763  08F2                     l3064:
  5764  08F2  1420               	bsf	__div_to_l_@quot,0
  5765  08F3                     l3066:
  5766  08F3  3001               	movlw	1
  5767  08F4  00F8               	movwf	??__div_to_l_
  5768  08F5                     u4915:
  5769  08F5  1003               	clrc
  5770  08F6  0DF0               	rlf	__div_to_l_@f1,f
  5771  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  5772  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  5773  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  5774  08FA  0BF8               	decfsz	??__div_to_l_,f
  5775  08FB  28F5               	goto	u4915
  5776  08FC                     l3068:
  5777  08FC  3001               	movlw	1
  5778  08FD  02A4               	subwf	__div_to_l_@cntr,f
  5779  08FE  1D03               	btfss	3,2
  5780  08FF  2901               	goto	u4921
  5781  0900  2902               	goto	u4920
  5782  0901                     u4921:
  5783  0901  28C9               	goto	l3058
  5784  0902                     u4920:
  5785  0902                     l491:
  5786  0902  1FA5               	btfss	__div_to_l_@exp1,7
  5787  0903  2905               	goto	u4931
  5788  0904  2906               	goto	u4930
  5789  0905                     u4931:
  5790  0905  2920               	goto	l3078
  5791  0906                     u4930:
  5792  0906                     l3070:
  5793  0906  0825               	movf	__div_to_l_@exp1,w
  5794  0907  3A80               	xorlw	128
  5795  0908  3E9F               	addlw	159
  5796  0909  1803               	skipnc
  5797  090A  290C               	goto	u4941
  5798  090B  290D               	goto	u4940
  5799  090C                     u4941:
  5800  090C  290E               	goto	l3076
  5801  090D                     u4940:
  5802  090D  288F               	goto	l3040
  5803  090E                     l3076:
  5804  090E  3001               	movlw	1
  5805  090F                     u4955:
  5806  090F  1003               	clrc
  5807  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  5808  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  5809  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  5810  0913  0CA0               	rrf	__div_to_l_@quot,f
  5811  0914  3EFF               	addlw	-1
  5812  0915  1D03               	skipz
  5813  0916  290F               	goto	u4955
  5814  0917  3001               	movlw	1
  5815  0918  00F8               	movwf	??__div_to_l_
  5816  0919  0878               	movf	??__div_to_l_,w
  5817  091A  07A5               	addwf	__div_to_l_@exp1,f
  5818  091B  1D03               	btfss	3,2
  5819  091C  291E               	goto	u4961
  5820  091D  291F               	goto	u4960
  5821  091E                     u4961:
  5822  091E  290E               	goto	l3076
  5823  091F                     u4960:
  5824  091F  2937               	goto	l3086
  5825  0920                     l3078:
  5826  0920  3020               	movlw	32
  5827  0921  0225               	subwf	__div_to_l_@exp1,w
  5828  0922  1C03               	skipc
  5829  0923  2925               	goto	u4971
  5830  0924  2926               	goto	u4970
  5831  0925                     u4971:
  5832  0925  2932               	goto	l498
  5833  0926                     u4970:
  5834  0926  288F               	goto	l3040
  5835  0927                     l3084:
  5836  0927  3001               	movlw	1
  5837  0928  00F8               	movwf	??__div_to_l_
  5838  0929                     u4985:
  5839  0929  1003               	clrc
  5840  092A  0DA0               	rlf	__div_to_l_@quot,f
  5841  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  5842  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  5843  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  5844  092E  0BF8               	decfsz	??__div_to_l_,f
  5845  092F  2929               	goto	u4985
  5846  0930  3001               	movlw	1
  5847  0931  02A5               	subwf	__div_to_l_@exp1,f
  5848  0932                     l498:
  5849  0932  0825               	movf	__div_to_l_@exp1,w
  5850  0933  1D03               	btfss	3,2
  5851  0934  2936               	goto	u4991
  5852  0935  2937               	goto	u4990
  5853  0936                     u4991:
  5854  0936  2927               	goto	l3084
  5855  0937                     u4990:
  5856  0937                     l3086:
  5857  0937  0823               	movf	__div_to_l_@quot+3,w
  5858  0938  00F3               	movwf	?__div_to_l_+3
  5859  0939  0822               	movf	__div_to_l_@quot+2,w
  5860  093A  00F2               	movwf	?__div_to_l_+2
  5861  093B  0821               	movf	__div_to_l_@quot+1,w
  5862  093C  00F1               	movwf	?__div_to_l_+1
  5863  093D  0820               	movf	__div_to_l_@quot,w
  5864  093E  00F0               	movwf	?__div_to_l_
  5865  093F                     l487:
  5866  093F  0008               	return
  5867  0940                     __end_of__div_to_l_:
  5868                           
  5869                           	psect	text13
  5870  1CAC                     __ptext13:	
  5871 ;; *************** function ___xxtofl *****************
  5872 ;; Defined at:
  5873 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  sign            1    wreg     unsigned char 
  5876 ;;  val             4    0[COMMON] long 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  sign            1    8[COMMON] unsigned char 
  5879 ;;  arg             4   10[COMMON] unsigned long 
  5880 ;;  exp             1    9[COMMON] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  4    0[COMMON] unsigned char 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5890 ;;      Params:         4       0       0       0       0
  5891 ;;      Locals:         6       0       0       0       0
  5892 ;;      Temps:          4       0       0       0       0
  5893 ;;      Totals:        14       0       0       0       0
  5894 ;;Total ram usage:       14 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_main
  5900 ;;		_sprintf
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904  1CAC                     ___xxtofl:	
  5905                           ;psect for function ___xxtofl
  5906                           
  5907                           
  5908                           ;incstack = 0
  5909                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5910                           ;___xxtofl@sign stored from wreg
  5911  1CAC  00F8               	movwf	___xxtofl@sign
  5912  1CAD                     l3230:
  5913  1CAD  0878               	movf	___xxtofl@sign,w
  5914  1CAE  1903               	btfsc	3,2
  5915  1CAF  2CB1               	goto	u5381
  5916  1CB0  2CB2               	goto	u5380
  5917  1CB1                     u5381:
  5918  1CB1  2CC6               	goto	l3236
  5919  1CB2                     u5380:
  5920  1CB2                     l3232:
  5921  1CB2  1FF3               	btfss	___xxtofl@val+3,7
  5922  1CB3  2CB5               	goto	u5391
  5923  1CB4  2CB6               	goto	u5390
  5924  1CB5                     u5391:
  5925  1CB5  2CC6               	goto	l3236
  5926  1CB6                     u5390:
  5927  1CB6                     l3234:
  5928  1CB6  0970               	comf	___xxtofl@val,w
  5929  1CB7  00FA               	movwf	___xxtofl@arg
  5930  1CB8  0971               	comf	___xxtofl@val+1,w
  5931  1CB9  00FB               	movwf	___xxtofl@arg+1
  5932  1CBA  0972               	comf	___xxtofl@val+2,w
  5933  1CBB  00FC               	movwf	___xxtofl@arg+2
  5934  1CBC  0973               	comf	___xxtofl@val+3,w
  5935  1CBD  00FD               	movwf	___xxtofl@arg+3
  5936  1CBE  0AFA               	incf	___xxtofl@arg,f
  5937  1CBF  1903               	skipnz
  5938  1CC0  0AFB               	incf	___xxtofl@arg+1,f
  5939  1CC1  1903               	skipnz
  5940  1CC2  0AFC               	incf	___xxtofl@arg+2,f
  5941  1CC3  1903               	skipnz
  5942  1CC4  0AFD               	incf	___xxtofl@arg+3,f
  5943  1CC5  2CCE               	goto	l784
  5944  1CC6                     l3236:
  5945  1CC6  0873               	movf	___xxtofl@val+3,w
  5946  1CC7  00FD               	movwf	___xxtofl@arg+3
  5947  1CC8  0872               	movf	___xxtofl@val+2,w
  5948  1CC9  00FC               	movwf	___xxtofl@arg+2
  5949  1CCA  0871               	movf	___xxtofl@val+1,w
  5950  1CCB  00FB               	movwf	___xxtofl@arg+1
  5951  1CCC  0870               	movf	___xxtofl@val,w
  5952  1CCD  00FA               	movwf	___xxtofl@arg
  5953  1CCE                     l784:
  5954  1CCE  0873               	movf	___xxtofl@val+3,w
  5955  1CCF  0472               	iorwf	___xxtofl@val+2,w
  5956  1CD0  0471               	iorwf	___xxtofl@val+1,w
  5957  1CD1  0470               	iorwf	___xxtofl@val,w
  5958  1CD2  1D03               	skipz
  5959  1CD3  2CD5               	goto	u5401
  5960  1CD4  2CD6               	goto	u5400
  5961  1CD5                     u5401:
  5962  1CD5  2CDF               	goto	l3242
  5963  1CD6                     u5400:
  5964  1CD6                     l3238:
  5965  1CD6  3000               	movlw	0
  5966  1CD7  00F3               	movwf	?___xxtofl+3
  5967  1CD8  3000               	movlw	0
  5968  1CD9  00F2               	movwf	?___xxtofl+2
  5969  1CDA  3000               	movlw	0
  5970  1CDB  00F1               	movwf	?___xxtofl+1
  5971  1CDC  3000               	movlw	0
  5972  1CDD  00F0               	movwf	?___xxtofl
  5973  1CDE  2D65               	goto	l786
  5974  1CDF                     l3242:
  5975  1CDF  3096               	movlw	150
  5976  1CE0  00F4               	movwf	??___xxtofl
  5977  1CE1  0874               	movf	??___xxtofl,w
  5978  1CE2  00F9               	movwf	___xxtofl@exp
  5979  1CE3  2CF1               	goto	l3246
  5980  1CE4                     l3244:
  5981  1CE4  3001               	movlw	1
  5982  1CE5  00F4               	movwf	??___xxtofl
  5983  1CE6  0874               	movf	??___xxtofl,w
  5984  1CE7  07F9               	addwf	___xxtofl@exp,f
  5985  1CE8  3001               	movlw	1
  5986  1CE9                     u5415:
  5987  1CE9  1003               	clrc
  5988  1CEA  0CFD               	rrf	___xxtofl@arg+3,f
  5989  1CEB  0CFC               	rrf	___xxtofl@arg+2,f
  5990  1CEC  0CFB               	rrf	___xxtofl@arg+1,f
  5991  1CED  0CFA               	rrf	___xxtofl@arg,f
  5992  1CEE  3EFF               	addlw	-1
  5993  1CEF  1D03               	skipz
  5994  1CF0  2CE9               	goto	u5415
  5995  1CF1                     l3246:
  5996  1CF1  30FE               	movlw	254
  5997  1CF2  057D               	andwf	___xxtofl@arg+3,w
  5998  1CF3  1D03               	btfss	3,2
  5999  1CF4  2CF6               	goto	u5421
  6000  1CF5  2CF7               	goto	u5420
  6001  1CF6                     u5421:
  6002  1CF6  2CE4               	goto	l3244
  6003  1CF7                     u5420:
  6004  1CF7  2D13               	goto	l790
  6005  1CF8                     l3248:
  6006  1CF8  3001               	movlw	1
  6007  1CF9  00F4               	movwf	??___xxtofl
  6008  1CFA  0874               	movf	??___xxtofl,w
  6009  1CFB  07F9               	addwf	___xxtofl@exp,f
  6010  1CFC                     l3250:
  6011  1CFC  3001               	movlw	1
  6012  1CFD  07FA               	addwf	___xxtofl@arg,f
  6013  1CFE  3000               	movlw	0
  6014  1CFF  1803               	skipnc
  6015  1D00  3001               	movlw	1
  6016  1D01  07FB               	addwf	___xxtofl@arg+1,f
  6017  1D02  3000               	movlw	0
  6018  1D03  1803               	skipnc
  6019  1D04  3001               	movlw	1
  6020  1D05  07FC               	addwf	___xxtofl@arg+2,f
  6021  1D06  3000               	movlw	0
  6022  1D07  1803               	skipnc
  6023  1D08  3001               	movlw	1
  6024  1D09  07FD               	addwf	___xxtofl@arg+3,f
  6025  1D0A                     l3252:
  6026  1D0A  3001               	movlw	1
  6027  1D0B                     u5435:
  6028  1D0B  1003               	clrc
  6029  1D0C  0CFD               	rrf	___xxtofl@arg+3,f
  6030  1D0D  0CFC               	rrf	___xxtofl@arg+2,f
  6031  1D0E  0CFB               	rrf	___xxtofl@arg+1,f
  6032  1D0F  0CFA               	rrf	___xxtofl@arg,f
  6033  1D10  3EFF               	addlw	-1
  6034  1D11  1D03               	skipz
  6035  1D12  2D0B               	goto	u5435
  6036  1D13                     l790:
  6037  1D13  30FF               	movlw	255
  6038  1D14  057D               	andwf	___xxtofl@arg+3,w
  6039  1D15  1D03               	btfss	3,2
  6040  1D16  2D18               	goto	u5441
  6041  1D17  2D19               	goto	u5440
  6042  1D18                     u5441:
  6043  1D18  2CF8               	goto	l3248
  6044  1D19                     u5440:
  6045  1D19  2D25               	goto	l3256
  6046  1D1A                     l3254:
  6047  1D1A  3001               	movlw	1
  6048  1D1B  02F9               	subwf	___xxtofl@exp,f
  6049  1D1C  3001               	movlw	1
  6050  1D1D  00F4               	movwf	??___xxtofl
  6051  1D1E                     u5455:
  6052  1D1E  1003               	clrc
  6053  1D1F  0DFA               	rlf	___xxtofl@arg,f
  6054  1D20  0DFB               	rlf	___xxtofl@arg+1,f
  6055  1D21  0DFC               	rlf	___xxtofl@arg+2,f
  6056  1D22  0DFD               	rlf	___xxtofl@arg+3,f
  6057  1D23  0BF4               	decfsz	??___xxtofl,f
  6058  1D24  2D1E               	goto	u5455
  6059  1D25                     l3256:
  6060  1D25  1BFC               	btfsc	___xxtofl@arg+2,7
  6061  1D26  2D28               	goto	u5461
  6062  1D27  2D29               	goto	u5460
  6063  1D28                     u5461:
  6064  1D28  2D2F               	goto	l797
  6065  1D29                     u5460:
  6066  1D29                     l3258:
  6067  1D29  3002               	movlw	2
  6068  1D2A  0279               	subwf	___xxtofl@exp,w
  6069  1D2B  1803               	skipnc
  6070  1D2C  2D2E               	goto	u5471
  6071  1D2D  2D2F               	goto	u5470
  6072  1D2E                     u5471:
  6073  1D2E  2D1A               	goto	l3254
  6074  1D2F                     u5470:
  6075  1D2F                     l797:
  6076  1D2F  1879               	btfsc	___xxtofl@exp,0
  6077  1D30  2D32               	goto	u5481
  6078  1D31  2D33               	goto	u5480
  6079  1D32                     u5481:
  6080  1D32  2D3B               	goto	l798
  6081  1D33                     u5480:
  6082  1D33                     l3260:
  6083  1D33  30FF               	movlw	255
  6084  1D34  05FA               	andwf	___xxtofl@arg,f
  6085  1D35  30FF               	movlw	255
  6086  1D36  05FB               	andwf	___xxtofl@arg+1,f
  6087  1D37  307F               	movlw	127
  6088  1D38  05FC               	andwf	___xxtofl@arg+2,f
  6089  1D39  30FF               	movlw	255
  6090  1D3A  05FD               	andwf	___xxtofl@arg+3,f
  6091  1D3B                     l798:
  6092  1D3B  1003               	clrc
  6093  1D3C  0CF9               	rrf	___xxtofl@exp,f
  6094  1D3D                     l3262:
  6095  1D3D  0879               	movf	___xxtofl@exp,w
  6096  1D3E  00F4               	movwf	??___xxtofl
  6097  1D3F  01F5               	clrf	??___xxtofl+1
  6098  1D40  01F6               	clrf	??___xxtofl+2
  6099  1D41  01F7               	clrf	??___xxtofl+3
  6100  1D42  3018               	movlw	24
  6101  1D43                     u5495:
  6102  1D43  1003               	clrc
  6103  1D44  0DF4               	rlf	??___xxtofl,f
  6104  1D45  0DF5               	rlf	??___xxtofl+1,f
  6105  1D46  0DF6               	rlf	??___xxtofl+2,f
  6106  1D47  0DF7               	rlf	??___xxtofl+3,f
  6107  1D48                     u5490:
  6108  1D48  3EFF               	addlw	-1
  6109  1D49  1D03               	skipz
  6110  1D4A  2D43               	goto	u5495
  6111  1D4B  0874               	movf	??___xxtofl,w
  6112  1D4C  04FA               	iorwf	___xxtofl@arg,f
  6113  1D4D  0875               	movf	??___xxtofl+1,w
  6114  1D4E  04FB               	iorwf	___xxtofl@arg+1,f
  6115  1D4F  0876               	movf	??___xxtofl+2,w
  6116  1D50  04FC               	iorwf	___xxtofl@arg+2,f
  6117  1D51  0877               	movf	??___xxtofl+3,w
  6118  1D52  04FD               	iorwf	___xxtofl@arg+3,f
  6119  1D53                     l3264:
  6120  1D53  0878               	movf	___xxtofl@sign,w
  6121  1D54  1903               	btfsc	3,2
  6122  1D55  2D57               	goto	u5501
  6123  1D56  2D58               	goto	u5500
  6124  1D57                     u5501:
  6125  1D57  2D5D               	goto	l3270
  6126  1D58                     u5500:
  6127  1D58                     l3266:
  6128  1D58  1FF3               	btfss	___xxtofl@val+3,7
  6129  1D59  2D5B               	goto	u5511
  6130  1D5A  2D5C               	goto	u5510
  6131  1D5B                     u5511:
  6132  1D5B  2D5D               	goto	l3270
  6133  1D5C                     u5510:
  6134  1D5C                     l3268:
  6135  1D5C  17FD               	bsf	___xxtofl@arg+3,7
  6136  1D5D                     l3270:
  6137  1D5D  087D               	movf	___xxtofl@arg+3,w
  6138  1D5E  00F3               	movwf	?___xxtofl+3
  6139  1D5F  087C               	movf	___xxtofl@arg+2,w
  6140  1D60  00F2               	movwf	?___xxtofl+2
  6141  1D61  087B               	movf	___xxtofl@arg+1,w
  6142  1D62  00F1               	movwf	?___xxtofl+1
  6143  1D63  087A               	movf	___xxtofl@arg,w
  6144  1D64  00F0               	movwf	?___xxtofl
  6145  1D65                     l786:
  6146  1D65  0008               	return
  6147  1D66                     __end_of___xxtofl:
  6148                           
  6149                           	psect	text14
  6150  196C                     __ptext14:	
  6151 ;; *************** function ___wmul *****************
  6152 ;; Defined at:
  6153 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul16.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  multiplier      2    0[COMMON] unsigned int 
  6156 ;;  multiplicand    2    2[COMMON] unsigned int 
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  product         2    4[COMMON] unsigned int 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  2    0[COMMON] unsigned int 
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6168 ;;      Params:         4       0       0       0       0
  6169 ;;      Locals:         2       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0
  6171 ;;      Totals:         6       0       0       0       0
  6172 ;;Total ram usage:        6 bytes
  6173 ;; Hardware stack levels used: 1
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		_sprintf
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181  196C                     ___wmul:	
  6182                           ;psect for function ___wmul
  6183                           
  6184  196C                     l3090:	
  6185                           ;incstack = 0
  6186                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6187                           
  6188  196C  01F4               	clrf	___wmul@product
  6189  196D  01F5               	clrf	___wmul@product+1
  6190  196E                     l3092:
  6191  196E  1C70               	btfss	___wmul@multiplier,0
  6192  196F  2971               	goto	u5001
  6193  1970  2972               	goto	u5000
  6194  1971                     u5001:
  6195  1971  2978               	goto	l317
  6196  1972                     u5000:
  6197  1972                     l3094:
  6198  1972  0872               	movf	___wmul@multiplicand,w
  6199  1973  07F4               	addwf	___wmul@product,f
  6200  1974  1803               	skipnc
  6201  1975  0AF5               	incf	___wmul@product+1,f
  6202  1976  0873               	movf	___wmul@multiplicand+1,w
  6203  1977  07F5               	addwf	___wmul@product+1,f
  6204  1978                     l317:
  6205  1978  3001               	movlw	1
  6206  1979                     u5015:
  6207  1979  1003               	clrc
  6208  197A  0DF2               	rlf	___wmul@multiplicand,f
  6209  197B  0DF3               	rlf	___wmul@multiplicand+1,f
  6210  197C  3EFF               	addlw	-1
  6211  197D  1D03               	skipz
  6212  197E  2979               	goto	u5015
  6213  197F                     l3096:
  6214  197F  3001               	movlw	1
  6215  1980                     u5025:
  6216  1980  1003               	clrc
  6217  1981  0CF1               	rrf	___wmul@multiplier+1,f
  6218  1982  0CF0               	rrf	___wmul@multiplier,f
  6219  1983  3EFF               	addlw	-1
  6220  1984  1D03               	skipz
  6221  1985  2980               	goto	u5025
  6222  1986                     l3098:
  6223  1986  0870               	movf	___wmul@multiplier,w
  6224  1987  0471               	iorwf	___wmul@multiplier+1,w
  6225  1988  1D03               	btfss	3,2
  6226  1989  298B               	goto	u5031
  6227  198A  298C               	goto	u5030
  6228  198B                     u5031:
  6229  198B  296E               	goto	l3092
  6230  198C                     u5030:
  6231  198C                     l3100:
  6232  198C  0875               	movf	___wmul@product+1,w
  6233  198D  00F1               	movwf	?___wmul+1
  6234  198E  0874               	movf	___wmul@product,w
  6235  198F  00F0               	movwf	?___wmul
  6236  1990                     l319:
  6237  1990  0008               	return
  6238  1991                     __end_of___wmul:
  6239                           
  6240                           	psect	text15
  6241  1A98                     __ptext15:	
  6242 ;; *************** function ___llmod *****************
  6243 ;; Defined at:
  6244 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\llmod.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  divisor         4    0[BANK0 ] unsigned long 
  6247 ;;  dividend        4    4[BANK0 ] unsigned long 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  counter         1    9[BANK0 ] unsigned char 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  4    0[BANK0 ] unsigned long 
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6259 ;;      Params:         0       8       0       0       0
  6260 ;;      Locals:         0       1       0       0       0
  6261 ;;      Temps:          0       1       0       0       0
  6262 ;;      Totals:         0      10       0       0       0
  6263 ;;Total ram usage:       10 bytes
  6264 ;; Hardware stack levels used: 1
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_sprintf
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272  1A98                     ___llmod:	
  6273                           ;psect for function ___llmod
  6274                           
  6275  1A98                     l3204:	
  6276                           ;incstack = 0
  6277                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6278                           
  6279  1A98  1283               	bcf	3,5	;RP0=0, select bank0
  6280  1A99  1303               	bcf	3,6	;RP1=0, select bank0
  6281  1A9A  0823               	movf	___llmod@divisor+3,w
  6282  1A9B  0422               	iorwf	___llmod@divisor+2,w
  6283  1A9C  0421               	iorwf	___llmod@divisor+1,w
  6284  1A9D  0420               	iorwf	___llmod@divisor,w
  6285  1A9E  1903               	skipnz
  6286  1A9F  2AA1               	goto	u5321
  6287  1AA0  2AA2               	goto	u5320
  6288  1AA1                     u5321:
  6289  1AA1  2AE5               	goto	l3220
  6290  1AA2                     u5320:
  6291  1AA2                     l3206:
  6292  1AA2  01A9               	clrf	___llmod@counter
  6293  1AA3  0AA9               	incf	___llmod@counter,f
  6294  1AA4  2AB2               	goto	l3210
  6295  1AA5                     l3208:
  6296  1AA5  3001               	movlw	1
  6297  1AA6  00A8               	movwf	??___llmod
  6298  1AA7                     u5335:
  6299  1AA7  1003               	clrc
  6300  1AA8  0DA0               	rlf	___llmod@divisor,f
  6301  1AA9  0DA1               	rlf	___llmod@divisor+1,f
  6302  1AAA  0DA2               	rlf	___llmod@divisor+2,f
  6303  1AAB  0DA3               	rlf	___llmod@divisor+3,f
  6304  1AAC  0BA8               	decfsz	??___llmod,f
  6305  1AAD  2AA7               	goto	u5335
  6306  1AAE  3001               	movlw	1
  6307  1AAF  00A8               	movwf	??___llmod
  6308  1AB0  0828               	movf	??___llmod,w
  6309  1AB1  07A9               	addwf	___llmod@counter,f
  6310  1AB2                     l3210:
  6311  1AB2  1FA3               	btfss	___llmod@divisor+3,7
  6312  1AB3  2AB5               	goto	u5341
  6313  1AB4  2AB6               	goto	u5340
  6314  1AB5                     u5341:
  6315  1AB5  2AA5               	goto	l3208
  6316  1AB6                     u5340:
  6317  1AB6                     l3212:
  6318  1AB6  0823               	movf	___llmod@divisor+3,w
  6319  1AB7  0227               	subwf	___llmod@dividend+3,w
  6320  1AB8  1D03               	skipz
  6321  1AB9  2AC4               	goto	u5355
  6322  1ABA  0822               	movf	___llmod@divisor+2,w
  6323  1ABB  0226               	subwf	___llmod@dividend+2,w
  6324  1ABC  1D03               	skipz
  6325  1ABD  2AC4               	goto	u5355
  6326  1ABE  0821               	movf	___llmod@divisor+1,w
  6327  1ABF  0225               	subwf	___llmod@dividend+1,w
  6328  1AC0  1D03               	skipz
  6329  1AC1  2AC4               	goto	u5355
  6330  1AC2  0820               	movf	___llmod@divisor,w
  6331  1AC3  0224               	subwf	___llmod@dividend,w
  6332  1AC4                     u5355:
  6333  1AC4  1C03               	skipc
  6334  1AC5  2AC7               	goto	u5351
  6335  1AC6  2AC8               	goto	u5350
  6336  1AC7                     u5351:
  6337  1AC7  2AD6               	goto	l3216
  6338  1AC8                     u5350:
  6339  1AC8                     l3214:
  6340  1AC8  0820               	movf	___llmod@divisor,w
  6341  1AC9  02A4               	subwf	___llmod@dividend,f
  6342  1ACA  0821               	movf	___llmod@divisor+1,w
  6343  1ACB  1C03               	skipc
  6344  1ACC  0F21               	incfsz	___llmod@divisor+1,w
  6345  1ACD  02A5               	subwf	___llmod@dividend+1,f
  6346  1ACE  0822               	movf	___llmod@divisor+2,w
  6347  1ACF  1C03               	skipc
  6348  1AD0  0F22               	incfsz	___llmod@divisor+2,w
  6349  1AD1  02A6               	subwf	___llmod@dividend+2,f
  6350  1AD2  0823               	movf	___llmod@divisor+3,w
  6351  1AD3  1C03               	skipc
  6352  1AD4  0F23               	incfsz	___llmod@divisor+3,w
  6353  1AD5  02A7               	subwf	___llmod@dividend+3,f
  6354  1AD6                     l3216:
  6355  1AD6  3001               	movlw	1
  6356  1AD7                     u5365:
  6357  1AD7  1003               	clrc
  6358  1AD8  0CA3               	rrf	___llmod@divisor+3,f
  6359  1AD9  0CA2               	rrf	___llmod@divisor+2,f
  6360  1ADA  0CA1               	rrf	___llmod@divisor+1,f
  6361  1ADB  0CA0               	rrf	___llmod@divisor,f
  6362  1ADC  3EFF               	addlw	-1
  6363  1ADD  1D03               	skipz
  6364  1ADE  2AD7               	goto	u5365
  6365  1ADF                     l3218:
  6366  1ADF  3001               	movlw	1
  6367  1AE0  02A9               	subwf	___llmod@counter,f
  6368  1AE1  1D03               	btfss	3,2
  6369  1AE2  2AE4               	goto	u5371
  6370  1AE3  2AE5               	goto	u5370
  6371  1AE4                     u5371:
  6372  1AE4  2AB6               	goto	l3212
  6373  1AE5                     u5370:
  6374  1AE5                     l3220:
  6375  1AE5  0827               	movf	___llmod@dividend+3,w
  6376  1AE6  00A3               	movwf	?___llmod+3
  6377  1AE7  0826               	movf	___llmod@dividend+2,w
  6378  1AE8  00A2               	movwf	?___llmod+2
  6379  1AE9  0825               	movf	___llmod@dividend+1,w
  6380  1AEA  00A1               	movwf	?___llmod+1
  6381  1AEB  0824               	movf	___llmod@dividend,w
  6382  1AEC  00A0               	movwf	?___llmod
  6383  1AED                     l573:
  6384  1AED  0008               	return
  6385  1AEE                     __end_of___llmod:
  6386                           
  6387                           	psect	text16
  6388  1BA4                     __ptext16:	
  6389 ;; *************** function ___lldiv *****************
  6390 ;; Defined at:
  6391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  divisor         4    0[COMMON] unsigned long 
  6394 ;;  dividend        4    4[COMMON] unsigned long 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  quotient        4    9[COMMON] unsigned long 
  6397 ;;  counter         1   13[COMMON] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  4    0[COMMON] unsigned long 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         8       0       0       0       0
  6408 ;;      Locals:         5       0       0       0       0
  6409 ;;      Temps:          1       0       0       0       0
  6410 ;;      Totals:        14       0       0       0       0
  6411 ;;Total ram usage:       14 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_sprintf
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420  1BA4                     ___lldiv:	
  6421                           ;psect for function ___lldiv
  6422                           
  6423  1BA4                     l3104:	
  6424                           ;incstack = 0
  6425                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6426                           
  6427  1BA4  3000               	movlw	0
  6428  1BA5  00FC               	movwf	___lldiv@quotient+3
  6429  1BA6  3000               	movlw	0
  6430  1BA7  00FB               	movwf	___lldiv@quotient+2
  6431  1BA8  3000               	movlw	0
  6432  1BA9  00FA               	movwf	___lldiv@quotient+1
  6433  1BAA  3000               	movlw	0
  6434  1BAB  00F9               	movwf	___lldiv@quotient
  6435  1BAC  0873               	movf	___lldiv@divisor+3,w
  6436  1BAD  0472               	iorwf	___lldiv@divisor+2,w
  6437  1BAE  0471               	iorwf	___lldiv@divisor+1,w
  6438  1BAF  0470               	iorwf	___lldiv@divisor,w
  6439  1BB0  1903               	skipnz
  6440  1BB1  2BB3               	goto	u5041
  6441  1BB2  2BB4               	goto	u5040
  6442  1BB3                     u5041:
  6443  1BB3  2C01               	goto	l3124
  6444  1BB4                     u5040:
  6445  1BB4                     l3106:
  6446  1BB4  01FD               	clrf	___lldiv@counter
  6447  1BB5  0AFD               	incf	___lldiv@counter,f
  6448  1BB6  2BC4               	goto	l3110
  6449  1BB7                     l3108:
  6450  1BB7  3001               	movlw	1
  6451  1BB8  00F8               	movwf	??___lldiv
  6452  1BB9                     u5055:
  6453  1BB9  1003               	clrc
  6454  1BBA  0DF0               	rlf	___lldiv@divisor,f
  6455  1BBB  0DF1               	rlf	___lldiv@divisor+1,f
  6456  1BBC  0DF2               	rlf	___lldiv@divisor+2,f
  6457  1BBD  0DF3               	rlf	___lldiv@divisor+3,f
  6458  1BBE  0BF8               	decfsz	??___lldiv,f
  6459  1BBF  2BB9               	goto	u5055
  6460  1BC0  3001               	movlw	1
  6461  1BC1  00F8               	movwf	??___lldiv
  6462  1BC2  0878               	movf	??___lldiv,w
  6463  1BC3  07FD               	addwf	___lldiv@counter,f
  6464  1BC4                     l3110:
  6465  1BC4  1FF3               	btfss	___lldiv@divisor+3,7
  6466  1BC5  2BC7               	goto	u5061
  6467  1BC6  2BC8               	goto	u5060
  6468  1BC7                     u5061:
  6469  1BC7  2BB7               	goto	l3108
  6470  1BC8                     u5060:
  6471  1BC8                     l3112:
  6472  1BC8  3001               	movlw	1
  6473  1BC9  00F8               	movwf	??___lldiv
  6474  1BCA                     u5075:
  6475  1BCA  1003               	clrc
  6476  1BCB  0DF9               	rlf	___lldiv@quotient,f
  6477  1BCC  0DFA               	rlf	___lldiv@quotient+1,f
  6478  1BCD  0DFB               	rlf	___lldiv@quotient+2,f
  6479  1BCE  0DFC               	rlf	___lldiv@quotient+3,f
  6480  1BCF  0BF8               	decfsz	??___lldiv,f
  6481  1BD0  2BCA               	goto	u5075
  6482  1BD1                     l3114:
  6483  1BD1  0873               	movf	___lldiv@divisor+3,w
  6484  1BD2  0277               	subwf	___lldiv@dividend+3,w
  6485  1BD3  1D03               	skipz
  6486  1BD4  2BDF               	goto	u5085
  6487  1BD5  0872               	movf	___lldiv@divisor+2,w
  6488  1BD6  0276               	subwf	___lldiv@dividend+2,w
  6489  1BD7  1D03               	skipz
  6490  1BD8  2BDF               	goto	u5085
  6491  1BD9  0871               	movf	___lldiv@divisor+1,w
  6492  1BDA  0275               	subwf	___lldiv@dividend+1,w
  6493  1BDB  1D03               	skipz
  6494  1BDC  2BDF               	goto	u5085
  6495  1BDD  0870               	movf	___lldiv@divisor,w
  6496  1BDE  0274               	subwf	___lldiv@dividend,w
  6497  1BDF                     u5085:
  6498  1BDF  1C03               	skipc
  6499  1BE0  2BE2               	goto	u5081
  6500  1BE1  2BE3               	goto	u5080
  6501  1BE2                     u5081:
  6502  1BE2  2BF2               	goto	l3120
  6503  1BE3                     u5080:
  6504  1BE3                     l3116:
  6505  1BE3  0870               	movf	___lldiv@divisor,w
  6506  1BE4  02F4               	subwf	___lldiv@dividend,f
  6507  1BE5  0871               	movf	___lldiv@divisor+1,w
  6508  1BE6  1C03               	skipc
  6509  1BE7  0F71               	incfsz	___lldiv@divisor+1,w
  6510  1BE8  02F5               	subwf	___lldiv@dividend+1,f
  6511  1BE9  0872               	movf	___lldiv@divisor+2,w
  6512  1BEA  1C03               	skipc
  6513  1BEB  0F72               	incfsz	___lldiv@divisor+2,w
  6514  1BEC  02F6               	subwf	___lldiv@dividend+2,f
  6515  1BED  0873               	movf	___lldiv@divisor+3,w
  6516  1BEE  1C03               	skipc
  6517  1BEF  0F73               	incfsz	___lldiv@divisor+3,w
  6518  1BF0  02F7               	subwf	___lldiv@dividend+3,f
  6519  1BF1                     l3118:
  6520  1BF1  1479               	bsf	___lldiv@quotient,0
  6521  1BF2                     l3120:
  6522  1BF2  3001               	movlw	1
  6523  1BF3                     u5095:
  6524  1BF3  1003               	clrc
  6525  1BF4  0CF3               	rrf	___lldiv@divisor+3,f
  6526  1BF5  0CF2               	rrf	___lldiv@divisor+2,f
  6527  1BF6  0CF1               	rrf	___lldiv@divisor+1,f
  6528  1BF7  0CF0               	rrf	___lldiv@divisor,f
  6529  1BF8  3EFF               	addlw	-1
  6530  1BF9  1D03               	skipz
  6531  1BFA  2BF3               	goto	u5095
  6532  1BFB                     l3122:
  6533  1BFB  3001               	movlw	1
  6534  1BFC  02FD               	subwf	___lldiv@counter,f
  6535  1BFD  1D03               	btfss	3,2
  6536  1BFE  2C00               	goto	u5101
  6537  1BFF  2C01               	goto	u5100
  6538  1C00                     u5101:
  6539  1C00  2BC8               	goto	l3112
  6540  1C01                     u5100:
  6541  1C01                     l3124:
  6542  1C01  087C               	movf	___lldiv@quotient+3,w
  6543  1C02  00F3               	movwf	?___lldiv+3
  6544  1C03  087B               	movf	___lldiv@quotient+2,w
  6545  1C04  00F2               	movwf	?___lldiv+2
  6546  1C05  087A               	movf	___lldiv@quotient+1,w
  6547  1C06  00F1               	movwf	?___lldiv+1
  6548  1C07  0879               	movf	___lldiv@quotient,w
  6549  1C08  00F0               	movwf	?___lldiv
  6550  1C09                     l353:
  6551  1C09  0008               	return
  6552  1C0A                     __end_of___lldiv:
  6553                           
  6554                           	psect	text17
  6555  0806                     __ptext17:	
  6556 ;; *************** function ___fltol *****************
  6557 ;; Defined at:
  6558 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  f1              4   56[BANK0 ] unsigned long 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  exp1            1   66[BANK0 ] unsigned char 
  6563 ;;  sign1           1   65[BANK0 ] unsigned char 
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  4   56[BANK0 ] long 
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6573 ;;      Params:         0       4       0       0       0
  6574 ;;      Locals:         0       2       0       0       0
  6575 ;;      Temps:          0       5       0       0       0
  6576 ;;      Totals:         0      11       0       0       0
  6577 ;;Total ram usage:       11 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_main
  6583 ;;		_sprintf
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587  0806                     ___fltol:	
  6588                           ;psect for function ___fltol
  6589                           
  6590  0806                     l3168:	
  6591                           ;incstack = 0
  6592                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6593                           
  6594  0806  1003               	clrc
  6595  0807  1283               	bcf	3,5	;RP0=0, select bank0
  6596  0808  1303               	bcf	3,6	;RP1=0, select bank0
  6597  0809  0D5A               	rlf	___fltol@f1+2,w
  6598  080A  0D5B               	rlf	___fltol@f1+3,w
  6599  080B  00DC               	movwf	??___fltol
  6600  080C  085C               	movf	??___fltol,w
  6601  080D  00E2               	movwf	___fltol@exp1
  6602  080E  0862               	movf	___fltol@exp1,w
  6603  080F  1D03               	btfss	3,2
  6604  0810  2812               	goto	u5221
  6605  0811  2813               	goto	u5220
  6606  0812                     u5221:
  6607  0812  281C               	goto	l3174
  6608  0813                     u5220:
  6609  0813                     l3170:
  6610  0813  3000               	movlw	0
  6611  0814  00DB               	movwf	?___fltol+3
  6612  0815  3000               	movlw	0
  6613  0816  00DA               	movwf	?___fltol+2
  6614  0817  3000               	movlw	0
  6615  0818  00D9               	movwf	?___fltol+1
  6616  0819  3000               	movlw	0
  6617  081A  00D8               	movwf	?___fltol
  6618  081B  2881               	goto	l520
  6619  081C                     l3174:
  6620  081C  0858               	movf	___fltol@f1,w
  6621  081D  00DC               	movwf	??___fltol
  6622  081E  0859               	movf	___fltol@f1+1,w
  6623  081F  00DD               	movwf	??___fltol+1
  6624  0820  085A               	movf	___fltol@f1+2,w
  6625  0821  00DE               	movwf	??___fltol+2
  6626  0822  085B               	movf	___fltol@f1+3,w
  6627  0823  00DF               	movwf	??___fltol+3
  6628  0824  301F               	movlw	31
  6629  0825                     u5235:
  6630  0825  1003               	clrc
  6631  0826  0CDF               	rrf	??___fltol+3,f
  6632  0827  0CDE               	rrf	??___fltol+2,f
  6633  0828  0CDD               	rrf	??___fltol+1,f
  6634  0829  0CDC               	rrf	??___fltol,f
  6635  082A                     u5230:
  6636  082A  3EFF               	addlw	-1
  6637  082B  1D03               	skipz
  6638  082C  2825               	goto	u5235
  6639  082D  085C               	movf	??___fltol,w
  6640  082E  00E0               	movwf	??___fltol+4
  6641  082F  0860               	movf	??___fltol+4,w
  6642  0830  00E1               	movwf	___fltol@sign1
  6643  0831                     l3176:
  6644  0831  17DA               	bsf	___fltol@f1+2,7
  6645  0832                     l3178:
  6646  0832  30FF               	movlw	255
  6647  0833  05D8               	andwf	___fltol@f1,f
  6648  0834  30FF               	movlw	255
  6649  0835  05D9               	andwf	___fltol@f1+1,f
  6650  0836  30FF               	movlw	255
  6651  0837  05DA               	andwf	___fltol@f1+2,f
  6652  0838  3000               	movlw	0
  6653  0839  05DB               	andwf	___fltol@f1+3,f
  6654  083A                     l3180:
  6655  083A  3096               	movlw	150
  6656  083B  02E2               	subwf	___fltol@exp1,f
  6657  083C                     l3182:
  6658  083C  1FE2               	btfss	___fltol@exp1,7
  6659  083D  283F               	goto	u5241
  6660  083E  2840               	goto	u5240
  6661  083F                     u5241:
  6662  083F  285A               	goto	l3192
  6663  0840                     u5240:
  6664  0840                     l3184:
  6665  0840  0862               	movf	___fltol@exp1,w
  6666  0841  3A80               	xorlw	128
  6667  0842  3E97               	addlw	151
  6668  0843  1803               	skipnc
  6669  0844  2846               	goto	u5251
  6670  0845  2847               	goto	u5250
  6671  0846                     u5251:
  6672  0846  2848               	goto	l3190
  6673  0847                     u5250:
  6674  0847  2813               	goto	l3170
  6675  0848                     l3190:
  6676  0848  3001               	movlw	1
  6677  0849                     u5265:
  6678  0849  1003               	clrc
  6679  084A  0CDB               	rrf	___fltol@f1+3,f
  6680  084B  0CDA               	rrf	___fltol@f1+2,f
  6681  084C  0CD9               	rrf	___fltol@f1+1,f
  6682  084D  0CD8               	rrf	___fltol@f1,f
  6683  084E  3EFF               	addlw	-1
  6684  084F  1D03               	skipz
  6685  0850  2849               	goto	u5265
  6686  0851  3001               	movlw	1
  6687  0852  00DC               	movwf	??___fltol
  6688  0853  085C               	movf	??___fltol,w
  6689  0854  07E2               	addwf	___fltol@exp1,f
  6690  0855  1D03               	btfss	3,2
  6691  0856  2858               	goto	u5271
  6692  0857  2859               	goto	u5270
  6693  0858                     u5271:
  6694  0858  2848               	goto	l3190
  6695  0859                     u5270:
  6696  0859  2871               	goto	l3200
  6697  085A                     l3192:
  6698  085A  3020               	movlw	32
  6699  085B  0262               	subwf	___fltol@exp1,w
  6700  085C  1C03               	skipc
  6701  085D  285F               	goto	u5281
  6702  085E  2860               	goto	u5280
  6703  085F                     u5281:
  6704  085F  286C               	goto	l527
  6705  0860                     u5280:
  6706  0860  2813               	goto	l3170
  6707  0861                     l3198:
  6708  0861  3001               	movlw	1
  6709  0862  00DC               	movwf	??___fltol
  6710  0863                     u5295:
  6711  0863  1003               	clrc
  6712  0864  0DD8               	rlf	___fltol@f1,f
  6713  0865  0DD9               	rlf	___fltol@f1+1,f
  6714  0866  0DDA               	rlf	___fltol@f1+2,f
  6715  0867  0DDB               	rlf	___fltol@f1+3,f
  6716  0868  0BDC               	decfsz	??___fltol,f
  6717  0869  2863               	goto	u5295
  6718  086A  3001               	movlw	1
  6719  086B  02E2               	subwf	___fltol@exp1,f
  6720  086C                     l527:
  6721  086C  0862               	movf	___fltol@exp1,w
  6722  086D  1D03               	btfss	3,2
  6723  086E  2870               	goto	u5301
  6724  086F  2871               	goto	u5300
  6725  0870                     u5301:
  6726  0870  2861               	goto	l3198
  6727  0871                     u5300:
  6728  0871                     l3200:
  6729  0871  0861               	movf	___fltol@sign1,w
  6730  0872  1903               	btfsc	3,2
  6731  0873  2875               	goto	u5311
  6732  0874  2876               	goto	u5310
  6733  0875                     u5311:
  6734  0875  2881               	goto	l530
  6735  0876                     u5310:
  6736  0876                     l3202:
  6737  0876  09D8               	comf	___fltol@f1,f
  6738  0877  09D9               	comf	___fltol@f1+1,f
  6739  0878  09DA               	comf	___fltol@f1+2,f
  6740  0879  09DB               	comf	___fltol@f1+3,f
  6741  087A  0AD8               	incf	___fltol@f1,f
  6742  087B  1903               	skipnz
  6743  087C  0AD9               	incf	___fltol@f1+1,f
  6744  087D  1903               	skipnz
  6745  087E  0ADA               	incf	___fltol@f1+2,f
  6746  087F  1903               	skipnz
  6747  0880  0ADB               	incf	___fltol@f1+3,f
  6748  0881                     l530:
  6749  0881                     l520:
  6750  0881  0008               	return
  6751  0882                     __end_of___fltol:
  6752                           
  6753                           	psect	text18
  6754  1948                     __ptext18:	
  6755 ;; *************** function ___flsub *****************
  6756 ;; Defined at:
  6757 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  a               4   70[BANK0 ] long 
  6760 ;;  b               4   74[BANK0 ] long 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;		None
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  4   70[BANK0 ] long 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6772 ;;      Params:         0       8       0       0       0
  6773 ;;      Locals:         0       0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0
  6775 ;;      Totals:         0       8       0       0       0
  6776 ;;Total ram usage:        8 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; Hardware stack levels required when called: 1
  6779 ;; This function calls:
  6780 ;;		___fladd
  6781 ;; This function is called by:
  6782 ;;		_sprintf
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786  1948                     ___flsub:	
  6787                           ;psect for function ___flsub
  6788                           
  6789  1948                     l3224:	
  6790                           ;incstack = 0
  6791                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6792                           
  6793  1948  3080               	movlw	128
  6794  1949  1283               	bcf	3,5	;RP0=0, select bank0
  6795  194A  1303               	bcf	3,6	;RP1=0, select bank0
  6796  194B  06E9               	xorwf	___flsub@a+3,f
  6797  194C                     l3226:
  6798  194C  086D               	movf	___flsub@b+3,w
  6799  194D  00D5               	movwf	___fladd@b+3
  6800  194E  086C               	movf	___flsub@b+2,w
  6801  194F  00D4               	movwf	___fladd@b+2
  6802  1950  086B               	movf	___flsub@b+1,w
  6803  1951  00D3               	movwf	___fladd@b+1
  6804  1952  086A               	movf	___flsub@b,w
  6805  1953  00D2               	movwf	___fladd@b
  6806  1954  0869               	movf	___flsub@a+3,w
  6807  1955  00D9               	movwf	___fladd@a+3
  6808  1956  0868               	movf	___flsub@a+2,w
  6809  1957  00D8               	movwf	___fladd@a+2
  6810  1958  0867               	movf	___flsub@a+1,w
  6811  1959  00D7               	movwf	___fladd@a+1
  6812  195A  0866               	movf	___flsub@a,w
  6813  195B  00D6               	movwf	___fladd@a
  6814  195C  160A  118A  229D  160A  158A  	fcall	___fladd
  6815  1961  1283               	bcf	3,5	;RP0=0, select bank0
  6816  1962  1303               	bcf	3,6	;RP1=0, select bank0
  6817  1963  0855               	movf	?___fladd+3,w
  6818  1964  00E9               	movwf	?___flsub+3
  6819  1965  0854               	movf	?___fladd+2,w
  6820  1966  00E8               	movwf	?___flsub+2
  6821  1967  0853               	movf	?___fladd+1,w
  6822  1968  00E7               	movwf	?___flsub+1
  6823  1969  0852               	movf	?___fladd,w
  6824  196A  00E6               	movwf	?___flsub
  6825  196B                     l690:
  6826  196B  0008               	return
  6827  196C                     __end_of___flsub:
  6828                           
  6829                           	psect	text19
  6830  129D                     __ptext19:	
  6831 ;; *************** function ___fladd *****************
  6832 ;; Defined at:
  6833 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;  b               4   50[BANK0 ] long 
  6836 ;;  a               4   54[BANK0 ] long 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  grs             1   69[BANK0 ] unsigned char 
  6839 ;;  bexp            1   68[BANK0 ] unsigned char 
  6840 ;;  aexp            1   67[BANK0 ] unsigned char 
  6841 ;;  signs           1   66[BANK0 ] unsigned char 
  6842 ;; Return value:  Size  Location     Type
  6843 ;;                  4   50[BANK0 ] unsigned char 
  6844 ;; Registers used:
  6845 ;;		wreg, status,2, status,0, btemp+1
  6846 ;; Tracked objects:
  6847 ;;		On entry : 0/0
  6848 ;;		On exit  : 0/0
  6849 ;;		Unchanged: 0/0
  6850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6851 ;;      Params:         0       8       0       0       0
  6852 ;;      Locals:         0       4       0       0       0
  6853 ;;      Temps:          0       8       0       0       0
  6854 ;;      Totals:         0      20       0       0       0
  6855 ;;Total ram usage:       20 bytes
  6856 ;; Hardware stack levels used: 1
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_sprintf
  6861 ;;		___flsub
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865  129D                     ___fladd:	
  6866                           ;psect for function ___fladd
  6867                           
  6868  129D                     l2552:	
  6869                           ;incstack = 0
  6870                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6871                           
  6872  129D  1283               	bcf	3,5	;RP0=0, select bank0
  6873  129E  1303               	bcf	3,6	;RP1=0, select bank0
  6874  129F  0855               	movf	___fladd@b+3,w
  6875  12A0  3980               	andlw	128
  6876  12A1  00DA               	movwf	??___fladd
  6877  12A2  085A               	movf	??___fladd,w
  6878  12A3  00E2               	movwf	___fladd@signs
  6879  12A4                     l2554:
  6880  12A4  0855               	movf	___fladd@b+3,w
  6881  12A5  00DA               	movwf	??___fladd
  6882  12A6  075A               	addwf	??___fladd,w
  6883  12A7  00DB               	movwf	??___fladd+1
  6884  12A8  085B               	movf	??___fladd+1,w
  6885  12A9  00E4               	movwf	___fladd@bexp
  6886  12AA                     l2556:
  6887  12AA  1FD4               	btfss	___fladd@b+2,7
  6888  12AB  2AAD               	goto	u3631
  6889  12AC  2AAE               	goto	u3630
  6890  12AD                     u3631:
  6891  12AD  2AAF               	goto	l2560
  6892  12AE                     u3630:
  6893  12AE                     l2558:
  6894  12AE  1464               	bsf	___fladd@bexp,0
  6895  12AF                     l2560:
  6896  12AF  0864               	movf	___fladd@bexp,w
  6897  12B0  1903               	btfsc	3,2
  6898  12B1  2AB3               	goto	u3641
  6899  12B2  2AB4               	goto	u3640
  6900  12B3                     u3641:
  6901  12B3  2AC4               	goto	l2570
  6902  12B4                     u3640:
  6903  12B4                     l2562:
  6904  12B4  0A64               	incf	___fladd@bexp,w
  6905  12B5  1D03               	btfss	3,2
  6906  12B6  2AB8               	goto	u3651
  6907  12B7  2AB9               	goto	u3650
  6908  12B8                     u3651:
  6909  12B8  2AC1               	goto	l2566
  6910  12B9                     u3650:
  6911  12B9                     l2564:
  6912  12B9  3000               	movlw	0
  6913  12BA  00D5               	movwf	___fladd@b+3
  6914  12BB  3000               	movlw	0
  6915  12BC  00D4               	movwf	___fladd@b+2
  6916  12BD  3000               	movlw	0
  6917  12BE  00D3               	movwf	___fladd@b+1
  6918  12BF  3000               	movlw	0
  6919  12C0  00D2               	movwf	___fladd@b
  6920  12C1                     l2566:
  6921  12C1  17D4               	bsf	___fladd@b+2,7
  6922  12C2                     l2568:
  6923  12C2  01D5               	clrf	___fladd@b+3
  6924  12C3  2ACC               	goto	l2572
  6925  12C4                     l2570:
  6926  12C4  3000               	movlw	0
  6927  12C5  00D5               	movwf	___fladd@b+3
  6928  12C6  3000               	movlw	0
  6929  12C7  00D4               	movwf	___fladd@b+2
  6930  12C8  3000               	movlw	0
  6931  12C9  00D3               	movwf	___fladd@b+1
  6932  12CA  3000               	movlw	0
  6933  12CB  00D2               	movwf	___fladd@b
  6934  12CC                     l2572:
  6935  12CC  0859               	movf	___fladd@a+3,w
  6936  12CD  3980               	andlw	128
  6937  12CE  00DA               	movwf	??___fladd
  6938  12CF  085A               	movf	??___fladd,w
  6939  12D0  00E3               	movwf	___fladd@aexp
  6940  12D1                     l2574:
  6941  12D1  0863               	movf	___fladd@aexp,w
  6942  12D2  0662               	xorwf	___fladd@signs,w
  6943  12D3  1903               	skipnz
  6944  12D4  2AD6               	goto	u3661
  6945  12D5  2AD7               	goto	u3660
  6946  12D6                     u3661:
  6947  12D6  2AD8               	goto	l2578
  6948  12D7                     u3660:
  6949  12D7                     l2576:
  6950  12D7  1762               	bsf	___fladd@signs,6
  6951  12D8                     l2578:
  6952  12D8  0859               	movf	___fladd@a+3,w
  6953  12D9  00DA               	movwf	??___fladd
  6954  12DA  075A               	addwf	??___fladd,w
  6955  12DB  00DB               	movwf	??___fladd+1
  6956  12DC  085B               	movf	??___fladd+1,w
  6957  12DD  00E3               	movwf	___fladd@aexp
  6958  12DE                     l2580:
  6959  12DE  1FD8               	btfss	___fladd@a+2,7
  6960  12DF  2AE1               	goto	u3671
  6961  12E0  2AE2               	goto	u3670
  6962  12E1                     u3671:
  6963  12E1  2AE3               	goto	l2584
  6964  12E2                     u3670:
  6965  12E2                     l2582:
  6966  12E2  1463               	bsf	___fladd@aexp,0
  6967  12E3                     l2584:
  6968  12E3  0863               	movf	___fladd@aexp,w
  6969  12E4  1903               	btfsc	3,2
  6970  12E5  2AE7               	goto	u3681
  6971  12E6  2AE8               	goto	u3680
  6972  12E7                     u3681:
  6973  12E7  2AF8               	goto	l2594
  6974  12E8                     u3680:
  6975  12E8                     l2586:
  6976  12E8  0A63               	incf	___fladd@aexp,w
  6977  12E9  1D03               	btfss	3,2
  6978  12EA  2AEC               	goto	u3691
  6979  12EB  2AED               	goto	u3690
  6980  12EC                     u3691:
  6981  12EC  2AF5               	goto	l2590
  6982  12ED                     u3690:
  6983  12ED                     l2588:
  6984  12ED  3000               	movlw	0
  6985  12EE  00D9               	movwf	___fladd@a+3
  6986  12EF  3000               	movlw	0
  6987  12F0  00D8               	movwf	___fladd@a+2
  6988  12F1  3000               	movlw	0
  6989  12F2  00D7               	movwf	___fladd@a+1
  6990  12F3  3000               	movlw	0
  6991  12F4  00D6               	movwf	___fladd@a
  6992  12F5                     l2590:
  6993  12F5  17D8               	bsf	___fladd@a+2,7
  6994  12F6                     l2592:
  6995  12F6  01D9               	clrf	___fladd@a+3
  6996  12F7  2B00               	goto	l644
  6997  12F8                     l2594:
  6998  12F8  3000               	movlw	0
  6999  12F9  00D9               	movwf	___fladd@a+3
  7000  12FA  3000               	movlw	0
  7001  12FB  00D8               	movwf	___fladd@a+2
  7002  12FC  3000               	movlw	0
  7003  12FD  00D7               	movwf	___fladd@a+1
  7004  12FE  3000               	movlw	0
  7005  12FF  00D6               	movwf	___fladd@a
  7006  1300                     l644:
  7007  1300  0864               	movf	___fladd@bexp,w
  7008  1301  0263               	subwf	___fladd@aexp,w
  7009  1302  1803               	skipnc
  7010  1303  2B05               	goto	u3701
  7011  1304  2B06               	goto	u3700
  7012  1305                     u3701:
  7013  1305  2B4A               	goto	l2630
  7014  1306                     u3700:
  7015  1306                     l2596:
  7016  1306  1F62               	btfss	___fladd@signs,6
  7017  1307  2B09               	goto	u3711
  7018  1308  2B0A               	goto	u3710
  7019  1309                     u3711:
  7020  1309  2B0E               	goto	l2600
  7021  130A                     u3710:
  7022  130A                     l2598:
  7023  130A  3080               	movlw	128
  7024  130B  00DA               	movwf	??___fladd
  7025  130C  085A               	movf	??___fladd,w
  7026  130D  06E2               	xorwf	___fladd@signs,f
  7027  130E                     l2600:
  7028  130E  0864               	movf	___fladd@bexp,w
  7029  130F  00DA               	movwf	??___fladd
  7030  1310  085A               	movf	??___fladd,w
  7031  1311  00E5               	movwf	___fladd@grs
  7032  1312                     l2602:
  7033  1312  0863               	movf	___fladd@aexp,w
  7034  1313  00DA               	movwf	??___fladd
  7035  1314  085A               	movf	??___fladd,w
  7036  1315  00E4               	movwf	___fladd@bexp
  7037  1316                     l2604:
  7038  1316  0865               	movf	___fladd@grs,w
  7039  1317  00DA               	movwf	??___fladd
  7040  1318  085A               	movf	??___fladd,w
  7041  1319  00E3               	movwf	___fladd@aexp
  7042  131A                     l2606:
  7043  131A  0852               	movf	___fladd@b,w
  7044  131B  00DA               	movwf	??___fladd
  7045  131C  085A               	movf	??___fladd,w
  7046  131D  00E5               	movwf	___fladd@grs
  7047  131E                     l2608:
  7048  131E  0856               	movf	___fladd@a,w
  7049  131F  00DA               	movwf	??___fladd
  7050  1320  085A               	movf	??___fladd,w
  7051  1321  00D2               	movwf	___fladd@b
  7052  1322                     l2610:
  7053  1322  0865               	movf	___fladd@grs,w
  7054  1323  00DA               	movwf	??___fladd
  7055  1324  085A               	movf	??___fladd,w
  7056  1325  00D6               	movwf	___fladd@a
  7057  1326                     l2612:
  7058  1326  0853               	movf	___fladd@b+1,w
  7059  1327  00DA               	movwf	??___fladd
  7060  1328  085A               	movf	??___fladd,w
  7061  1329  00E5               	movwf	___fladd@grs
  7062  132A                     l2614:
  7063  132A  0857               	movf	___fladd@a+1,w
  7064  132B  00DA               	movwf	??___fladd
  7065  132C  085A               	movf	??___fladd,w
  7066  132D  00D3               	movwf	___fladd@b+1
  7067  132E                     l2616:
  7068  132E  0865               	movf	___fladd@grs,w
  7069  132F  00DA               	movwf	??___fladd
  7070  1330  085A               	movf	??___fladd,w
  7071  1331  00D7               	movwf	___fladd@a+1
  7072  1332                     l2618:
  7073  1332  0854               	movf	___fladd@b+2,w
  7074  1333  00DA               	movwf	??___fladd
  7075  1334  085A               	movf	??___fladd,w
  7076  1335  00E5               	movwf	___fladd@grs
  7077  1336                     l2620:
  7078  1336  0858               	movf	___fladd@a+2,w
  7079  1337  00DA               	movwf	??___fladd
  7080  1338  085A               	movf	??___fladd,w
  7081  1339  00D4               	movwf	___fladd@b+2
  7082  133A                     l2622:
  7083  133A  0865               	movf	___fladd@grs,w
  7084  133B  00DA               	movwf	??___fladd
  7085  133C  085A               	movf	??___fladd,w
  7086  133D  00D8               	movwf	___fladd@a+2
  7087  133E                     l2624:
  7088  133E  0855               	movf	___fladd@b+3,w
  7089  133F  00DA               	movwf	??___fladd
  7090  1340  085A               	movf	??___fladd,w
  7091  1341  00E5               	movwf	___fladd@grs
  7092  1342                     l2626:
  7093  1342  0859               	movf	___fladd@a+3,w
  7094  1343  00DA               	movwf	??___fladd
  7095  1344  085A               	movf	??___fladd,w
  7096  1345  00D5               	movwf	___fladd@b+3
  7097  1346                     l2628:
  7098  1346  0865               	movf	___fladd@grs,w
  7099  1347  00DA               	movwf	??___fladd
  7100  1348  085A               	movf	??___fladd,w
  7101  1349  00D9               	movwf	___fladd@a+3
  7102  134A                     l2630:
  7103  134A  01E5               	clrf	___fladd@grs
  7104  134B                     l2632:
  7105  134B  0863               	movf	___fladd@aexp,w
  7106  134C  00DA               	movwf	??___fladd
  7107  134D  01DB               	clrf	??___fladd+1
  7108  134E  085B               	movf	??___fladd+1,w
  7109  134F  00DD               	movwf	??___fladd+3
  7110  1350  0864               	movf	___fladd@bexp,w
  7111  1351  025A               	subwf	??___fladd,w
  7112  1352  00DC               	movwf	??___fladd+2
  7113  1353  1C03               	skipc
  7114  1354  03DD               	decf	??___fladd+3,f
  7115  1355  085D               	movf	??___fladd+3,w
  7116  1356  3A80               	xorlw	128
  7117  1357  00FF               	movwf	btemp+1
  7118  1358  3080               	movlw	128
  7119  1359  027F               	subwf	btemp+1,w
  7120  135A  1D03               	skipz
  7121  135B  2B5E               	goto	u3725
  7122  135C  301A               	movlw	26
  7123  135D  025C               	subwf	??___fladd+2,w
  7124  135E                     u3725:
  7125  135E  1C03               	skipc
  7126  135F  2B61               	goto	u3721
  7127  1360  2B62               	goto	u3720
  7128  1361                     u3721:
  7129  1361  2B9F               	goto	l2648
  7130  1362                     u3720:
  7131  1362                     l2634:
  7132  1362  1283               	bcf	3,5	;RP0=0, select bank0
  7133  1363  1303               	bcf	3,6	;RP1=0, select bank0
  7134  1364  0855               	movf	___fladd@b+3,w
  7135  1365  0454               	iorwf	___fladd@b+2,w
  7136  1366  0453               	iorwf	___fladd@b+1,w
  7137  1367  0452               	iorwf	___fladd@b,w
  7138  1368  1D03               	skipz
  7139  1369  2B6B               	goto	u3731
  7140  136A  2B6D               	goto	u3730
  7141  136B                     u3731:
  7142  136B  3001               	movlw	1
  7143  136C  2B6E               	goto	u3740
  7144  136D                     u3730:
  7145  136D  3000               	movlw	0
  7146  136E                     u3740:
  7147  136E  00DA               	movwf	??___fladd
  7148  136F  085A               	movf	??___fladd,w
  7149  1370  00E5               	movwf	___fladd@grs
  7150  1371  3000               	movlw	0
  7151  1372  00D5               	movwf	___fladd@b+3
  7152  1373  3000               	movlw	0
  7153  1374  00D4               	movwf	___fladd@b+2
  7154  1375  3000               	movlw	0
  7155  1376  00D3               	movwf	___fladd@b+1
  7156  1377  3000               	movlw	0
  7157  1378  00D2               	movwf	___fladd@b
  7158  1379  0863               	movf	___fladd@aexp,w
  7159  137A  00DA               	movwf	??___fladd
  7160  137B  085A               	movf	??___fladd,w
  7161  137C  00E4               	movwf	___fladd@bexp
  7162  137D  2BA7               	goto	l648
  7163  137E                     l650:
  7164  137E  1C65               	btfss	___fladd@grs,0
  7165  137F  2B81               	goto	u3751
  7166  1380  2B82               	goto	u3750
  7167  1381                     u3751:
  7168  1381  2B8B               	goto	l2638
  7169  1382                     u3750:
  7170  1382                     l2636:
  7171  1382  0865               	movf	___fladd@grs,w
  7172  1383  00DA               	movwf	??___fladd
  7173  1384  1003               	clrc
  7174  1385  0C5A               	rrf	??___fladd,w
  7175  1386  3801               	iorlw	1
  7176  1387  00DB               	movwf	??___fladd+1
  7177  1388  085B               	movf	??___fladd+1,w
  7178  1389  00E5               	movwf	___fladd@grs
  7179  138A  2B8D               	goto	l2640
  7180  138B                     l2638:
  7181  138B  1003               	clrc
  7182  138C  0CE5               	rrf	___fladd@grs,f
  7183  138D                     l2640:
  7184  138D  1C52               	btfss	___fladd@b,0
  7185  138E  2B90               	goto	u3761
  7186  138F  2B91               	goto	u3760
  7187  1390                     u3761:
  7188  1390  2B92               	goto	l2644
  7189  1391                     u3760:
  7190  1391                     l2642:
  7191  1391  17E5               	bsf	___fladd@grs,7
  7192  1392                     l2644:
  7193  1392  3001               	movlw	1
  7194  1393  00DA               	movwf	??___fladd
  7195  1394                     u3775:
  7196  1394  0D55               	rlf	___fladd@b+3,w
  7197  1395  0CD5               	rrf	___fladd@b+3,f
  7198  1396  0CD4               	rrf	___fladd@b+2,f
  7199  1397  0CD3               	rrf	___fladd@b+1,f
  7200  1398  0CD2               	rrf	___fladd@b,f
  7201  1399  0BDA               	decfsz	??___fladd& (0+127),f
  7202  139A  2B94               	goto	u3775
  7203  139B                     l2646:
  7204  139B  3001               	movlw	1
  7205  139C  00DA               	movwf	??___fladd
  7206  139D  085A               	movf	??___fladd,w
  7207  139E  07E4               	addwf	___fladd@bexp,f
  7208  139F                     l2648:
  7209  139F  1283               	bcf	3,5	;RP0=0, select bank0
  7210  13A0  1303               	bcf	3,6	;RP1=0, select bank0
  7211  13A1  0863               	movf	___fladd@aexp,w
  7212  13A2  0264               	subwf	___fladd@bexp,w
  7213  13A3  1C03               	skipc
  7214  13A4  2BA6               	goto	u3781
  7215  13A5  2BA7               	goto	u3780
  7216  13A6                     u3781:
  7217  13A6  2B7E               	goto	l650
  7218  13A7                     u3780:
  7219  13A7                     l648:
  7220  13A7  1B62               	btfsc	___fladd@signs,6
  7221  13A8  2BAA               	goto	u3791
  7222  13A9  2BAB               	goto	u3790
  7223  13AA                     u3791:
  7224  13AA  2BF6               	goto	l2674
  7225  13AB                     u3790:
  7226  13AB                     l2650:
  7227  13AB  0864               	movf	___fladd@bexp,w
  7228  13AC  1D03               	btfss	3,2
  7229  13AD  2BAF               	goto	u3801
  7230  13AE  2BB0               	goto	u3800
  7231  13AF                     u3801:
  7232  13AF  2BB9               	goto	l2656
  7233  13B0                     u3800:
  7234  13B0                     l2652:
  7235  13B0  3000               	movlw	0
  7236  13B1  00D5               	movwf	?___fladd+3
  7237  13B2  3000               	movlw	0
  7238  13B3  00D4               	movwf	?___fladd+2
  7239  13B4  3000               	movlw	0
  7240  13B5  00D3               	movwf	?___fladd+1
  7241  13B6  3000               	movlw	0
  7242  13B7  00D2               	movwf	?___fladd
  7243  13B8  2D24               	goto	l657
  7244  13B9                     l2656:
  7245  13B9  0856               	movf	___fladd@a,w
  7246  13BA  07D2               	addwf	___fladd@b,f
  7247  13BB  0857               	movf	___fladd@a+1,w
  7248  13BC  1103               	clrz
  7249  13BD  1803               	skipnc
  7250  13BE  3E01               	addlw	1
  7251  13BF  1903               	skipnz
  7252  13C0  2BC2               	goto	u3811
  7253  13C1  07D3               	addwf	___fladd@b+1,f
  7254  13C2                     u3811:
  7255  13C2  0858               	movf	___fladd@a+2,w
  7256  13C3  1103               	clrz
  7257  13C4  1803               	skipnc
  7258  13C5  3E01               	addlw	1
  7259  13C6  1903               	skipnz
  7260  13C7  2BC9               	goto	u3812
  7261  13C8  07D4               	addwf	___fladd@b+2,f
  7262  13C9                     u3812:
  7263  13C9  0859               	movf	___fladd@a+3,w
  7264  13CA  1103               	clrz
  7265  13CB  1803               	skipnc
  7266  13CC  3E01               	addlw	1
  7267  13CD  1903               	skipnz
  7268  13CE  2BD0               	goto	u3813
  7269  13CF  07D5               	addwf	___fladd@b+3,f
  7270  13D0                     u3813:
  7271  13D0                     l2658:
  7272  13D0  1C55               	btfss	___fladd@b+3,0
  7273  13D1  2BD3               	goto	u3821
  7274  13D2  2BD4               	goto	u3820
  7275  13D3                     u3821:
  7276  13D3  2CAA               	goto	l2708
  7277  13D4                     u3820:
  7278  13D4                     l2660:
  7279  13D4  1C65               	btfss	___fladd@grs,0
  7280  13D5  2BD7               	goto	u3831
  7281  13D6  2BD8               	goto	u3830
  7282  13D7                     u3831:
  7283  13D7  2BE1               	goto	l2664
  7284  13D8                     u3830:
  7285  13D8                     l2662:
  7286  13D8  0865               	movf	___fladd@grs,w
  7287  13D9  00DA               	movwf	??___fladd
  7288  13DA  1003               	clrc
  7289  13DB  0C5A               	rrf	??___fladd,w
  7290  13DC  3801               	iorlw	1
  7291  13DD  00DB               	movwf	??___fladd+1
  7292  13DE  085B               	movf	??___fladd+1,w
  7293  13DF  00E5               	movwf	___fladd@grs
  7294  13E0  2BE3               	goto	l2666
  7295  13E1                     l2664:
  7296  13E1  1003               	clrc
  7297  13E2  0CE5               	rrf	___fladd@grs,f
  7298  13E3                     l2666:
  7299  13E3  1C52               	btfss	___fladd@b,0
  7300  13E4  2BE6               	goto	u3841
  7301  13E5  2BE7               	goto	u3840
  7302  13E6                     u3841:
  7303  13E6  2BE8               	goto	l2670
  7304  13E7                     u3840:
  7305  13E7                     l2668:
  7306  13E7  17E5               	bsf	___fladd@grs,7
  7307  13E8                     l2670:
  7308  13E8  3001               	movlw	1
  7309  13E9  00DA               	movwf	??___fladd
  7310  13EA                     u3855:
  7311  13EA  0D55               	rlf	___fladd@b+3,w
  7312  13EB  0CD5               	rrf	___fladd@b+3,f
  7313  13EC  0CD4               	rrf	___fladd@b+2,f
  7314  13ED  0CD3               	rrf	___fladd@b+1,f
  7315  13EE  0CD2               	rrf	___fladd@b,f
  7316  13EF  0BDA               	decfsz	??___fladd& (0+127),f
  7317  13F0  2BEA               	goto	u3855
  7318  13F1                     l2672:
  7319  13F1  3001               	movlw	1
  7320  13F2  00DA               	movwf	??___fladd
  7321  13F3  085A               	movf	??___fladd,w
  7322  13F4  07E4               	addwf	___fladd@bexp,f
  7323  13F5  2CAA               	goto	l2708
  7324  13F6                     l2674:
  7325  13F6  0855               	movf	___fladd@b+3,w
  7326  13F7  3A80               	xorlw	128
  7327  13F8  00FF               	movwf	btemp+1
  7328  13F9  0859               	movf	___fladd@a+3,w
  7329  13FA  3A80               	xorlw	128
  7330  13FB  027F               	subwf	btemp+1,w
  7331  13FC  1D03               	skipz
  7332  13FD  2C08               	goto	u3863
  7333  13FE  0858               	movf	___fladd@a+2,w
  7334  13FF  0254               	subwf	___fladd@b+2,w
  7335  1400  1D03               	skipz
  7336  1401  2C08               	goto	u3863
  7337  1402  0857               	movf	___fladd@a+1,w
  7338  1403  0253               	subwf	___fladd@b+1,w
  7339  1404  1D03               	skipz
  7340  1405  2C08               	goto	u3863
  7341  1406  0856               	movf	___fladd@a,w
  7342  1407  0252               	subwf	___fladd@b,w
  7343  1408                     u3863:
  7344  1408  1803               	skipnc
  7345  1409  2C0B               	goto	u3861
  7346  140A  2C0C               	goto	u3860
  7347  140B                     u3861:
  7348  140B  2C64               	goto	l2684
  7349  140C                     u3860:
  7350  140C                     l2676:
  7351  140C  30FF               	movlw	255
  7352  140D  00DA               	movwf	??___fladd
  7353  140E  30FF               	movlw	255
  7354  140F  00DB               	movwf	??___fladd+1
  7355  1410  30FF               	movlw	255
  7356  1411  00DC               	movwf	??___fladd+2
  7357  1412  30FF               	movlw	255
  7358  1413  00DD               	movwf	??___fladd+3
  7359  1414  0856               	movf	___fladd@a,w
  7360  1415  00DE               	movwf	??___fladd+4
  7361  1416  0857               	movf	___fladd@a+1,w
  7362  1417  00DF               	movwf	??___fladd+5
  7363  1418  0858               	movf	___fladd@a+2,w
  7364  1419  00E0               	movwf	??___fladd+6
  7365  141A  0859               	movf	___fladd@a+3,w
  7366  141B  00E1               	movwf	??___fladd+7
  7367  141C  0852               	movf	___fladd@b,w
  7368  141D  02DE               	subwf	??___fladd+4,f
  7369  141E  0853               	movf	___fladd@b+1,w
  7370  141F  1C03               	skipc
  7371  1420  0F53               	incfsz	___fladd@b+1,w
  7372  1421  2C23               	goto	u3871
  7373  1422  2C24               	goto	u3872
  7374  1423                     u3871:
  7375  1423  02DF               	subwf	??___fladd+5,f
  7376  1424                     u3872:
  7377  1424  0854               	movf	___fladd@b+2,w
  7378  1425  1C03               	skipc
  7379  1426  0F54               	incfsz	___fladd@b+2,w
  7380  1427  2C29               	goto	u3873
  7381  1428  2C2A               	goto	u3874
  7382  1429                     u3873:
  7383  1429  02E0               	subwf	??___fladd+6,f
  7384  142A                     u3874:
  7385  142A  0855               	movf	___fladd@b+3,w
  7386  142B  1C03               	skipc
  7387  142C  0F55               	incfsz	___fladd@b+3,w
  7388  142D  2C2F               	goto	u3875
  7389  142E  2C30               	goto	u3876
  7390  142F                     u3875:
  7391  142F  02E1               	subwf	??___fladd+7,f
  7392  1430                     u3876:
  7393  1430  085E               	movf	??___fladd+4,w
  7394  1431  07DA               	addwf	??___fladd,f
  7395  1432  085F               	movf	??___fladd+5,w
  7396  1433  1803               	skipnc
  7397  1434  0F5F               	incfsz	??___fladd+5,w
  7398  1435  2C37               	goto	u3880
  7399  1436  2C38               	goto	u3881
  7400  1437                     u3880:
  7401  1437  07DB               	addwf	??___fladd+1,f
  7402  1438                     u3881:
  7403  1438  0860               	movf	??___fladd+6,w
  7404  1439  1803               	skipnc
  7405  143A  0F60               	incfsz	??___fladd+6,w
  7406  143B  2C3D               	goto	u3882
  7407  143C  2C3E               	goto	u3883
  7408  143D                     u3882:
  7409  143D  07DC               	addwf	??___fladd+2,f
  7410  143E                     u3883:
  7411  143E  0861               	movf	??___fladd+7,w
  7412  143F  1803               	skipnc
  7413  1440  0A61               	incf	??___fladd+7,w
  7414  1441  07DD               	addwf	??___fladd+3,f
  7415  1442  085D               	movf	??___fladd+3,w
  7416  1443  00D5               	movwf	___fladd@b+3
  7417  1444  085C               	movf	??___fladd+2,w
  7418  1445  00D4               	movwf	___fladd@b+2
  7419  1446  085B               	movf	??___fladd+1,w
  7420  1447  00D3               	movwf	___fladd@b+1
  7421  1448  085A               	movf	??___fladd,w
  7422  1449  00D2               	movwf	___fladd@b
  7423  144A                     l2678:
  7424  144A  3080               	movlw	128
  7425  144B  00DA               	movwf	??___fladd
  7426  144C  085A               	movf	??___fladd,w
  7427  144D  06E2               	xorwf	___fladd@signs,f
  7428  144E  09E5               	comf	___fladd@grs,f
  7429  144F  0AE5               	incf	___fladd@grs,f
  7430  1450                     l2680:
  7431  1450  0865               	movf	___fladd@grs,w
  7432  1451  1D03               	btfss	3,2
  7433  1452  2C54               	goto	u3891
  7434  1453  2C55               	goto	u3890
  7435  1454                     u3891:
  7436  1454  2C72               	goto	l665
  7437  1455                     u3890:
  7438  1455                     l2682:
  7439  1455  3001               	movlw	1
  7440  1456  07D2               	addwf	___fladd@b,f
  7441  1457  3000               	movlw	0
  7442  1458  1803               	skipnc
  7443  1459  3001               	movlw	1
  7444  145A  07D3               	addwf	___fladd@b+1,f
  7445  145B  3000               	movlw	0
  7446  145C  1803               	skipnc
  7447  145D  3001               	movlw	1
  7448  145E  07D4               	addwf	___fladd@b+2,f
  7449  145F  3000               	movlw	0
  7450  1460  1803               	skipnc
  7451  1461  3001               	movlw	1
  7452  1462  07D5               	addwf	___fladd@b+3,f
  7453  1463  2C72               	goto	l665
  7454  1464                     l2684:
  7455  1464  0856               	movf	___fladd@a,w
  7456  1465  02D2               	subwf	___fladd@b,f
  7457  1466  0857               	movf	___fladd@a+1,w
  7458  1467  1C03               	skipc
  7459  1468  0F57               	incfsz	___fladd@a+1,w
  7460  1469  02D3               	subwf	___fladd@b+1,f
  7461  146A  0858               	movf	___fladd@a+2,w
  7462  146B  1C03               	skipc
  7463  146C  0F58               	incfsz	___fladd@a+2,w
  7464  146D  02D4               	subwf	___fladd@b+2,f
  7465  146E  0859               	movf	___fladd@a+3,w
  7466  146F  1C03               	skipc
  7467  1470  0F59               	incfsz	___fladd@a+3,w
  7468  1471  02D5               	subwf	___fladd@b+3,f
  7469  1472                     l665:
  7470  1472  0855               	movf	___fladd@b+3,w
  7471  1473  0454               	iorwf	___fladd@b+2,w
  7472  1474  0453               	iorwf	___fladd@b+1,w
  7473  1475  0452               	iorwf	___fladd@b,w
  7474  1476  1D03               	skipz
  7475  1477  2C79               	goto	u3901
  7476  1478  2C7A               	goto	u3900
  7477  1479                     u3901:
  7478  1479  2CA6               	goto	l2706
  7479  147A                     u3900:
  7480  147A                     l2686:
  7481  147A  0865               	movf	___fladd@grs,w
  7482  147B  1D03               	btfss	3,2
  7483  147C  2C7E               	goto	u3911
  7484  147D  2C7F               	goto	u3910
  7485  147E                     u3911:
  7486  147E  2CA6               	goto	l2706
  7487  147F                     u3910:
  7488  147F                     l2688:
  7489  147F  3000               	movlw	0
  7490  1480  00D5               	movwf	?___fladd+3
  7491  1481  3000               	movlw	0
  7492  1482  00D4               	movwf	?___fladd+2
  7493  1483  3000               	movlw	0
  7494  1484  00D3               	movwf	?___fladd+1
  7495  1485  3000               	movlw	0
  7496  1486  00D2               	movwf	?___fladd
  7497  1487  2D24               	goto	l657
  7498  1488                     l2692:
  7499  1488  3001               	movlw	1
  7500  1489  00DA               	movwf	??___fladd
  7501  148A                     u3925:
  7502  148A  1003               	clrc
  7503  148B  0DD2               	rlf	___fladd@b,f
  7504  148C  0DD3               	rlf	___fladd@b+1,f
  7505  148D  0DD4               	rlf	___fladd@b+2,f
  7506  148E  0DD5               	rlf	___fladd@b+3,f
  7507  148F  0BDA               	decfsz	??___fladd,f
  7508  1490  2C8A               	goto	u3925
  7509  1491                     l2694:
  7510  1491  1FE5               	btfss	___fladd@grs,7
  7511  1492  2C94               	goto	u3931
  7512  1493  2C95               	goto	u3930
  7513  1494                     u3931:
  7514  1494  2C96               	goto	l669
  7515  1495                     u3930:
  7516  1495                     l2696:
  7517  1495  1452               	bsf	___fladd@b,0
  7518  1496                     l669:
  7519  1496  1C65               	btfss	___fladd@grs,0
  7520  1497  2C99               	goto	u3941
  7521  1498  2C9A               	goto	u3940
  7522  1499                     u3941:
  7523  1499  2C9D               	goto	l2700
  7524  149A                     u3940:
  7525  149A                     l2698:
  7526  149A  1403               	setc
  7527  149B  0DE5               	rlf	___fladd@grs,f
  7528  149C  2C9F               	goto	l2702
  7529  149D                     l2700:
  7530  149D  1003               	clrc
  7531  149E  0DE5               	rlf	___fladd@grs,f
  7532  149F                     l2702:
  7533  149F  0864               	movf	___fladd@bexp,w
  7534  14A0  1903               	btfsc	3,2
  7535  14A1  2CA3               	goto	u3951
  7536  14A2  2CA4               	goto	u3950
  7537  14A3                     u3951:
  7538  14A3  2CA6               	goto	l2706
  7539  14A4                     u3950:
  7540  14A4                     l2704:
  7541  14A4  3001               	movlw	1
  7542  14A5  02E4               	subwf	___fladd@bexp,f
  7543  14A6                     l2706:
  7544  14A6  1FD4               	btfss	___fladd@b+2,7
  7545  14A7  2CA9               	goto	u3961
  7546  14A8  2CAA               	goto	u3960
  7547  14A9                     u3961:
  7548  14A9  2C88               	goto	l2692
  7549  14AA                     u3960:
  7550  14AA                     l2708:
  7551  14AA  01E3               	clrf	___fladd@aexp
  7552  14AB                     l2710:
  7553  14AB  1FE5               	btfss	___fladd@grs,7
  7554  14AC  2CAE               	goto	u3971
  7555  14AD  2CAF               	goto	u3970
  7556  14AE                     u3971:
  7557  14AE  2CBD               	goto	l2718
  7558  14AF                     u3970:
  7559  14AF                     l2712:
  7560  14AF  0865               	movf	___fladd@grs,w
  7561  14B0  397F               	andlw	127
  7562  14B1  1903               	btfsc	3,2
  7563  14B2  2CB4               	goto	u3981
  7564  14B3  2CB5               	goto	u3980
  7565  14B4                     u3981:
  7566  14B4  2CB8               	goto	l675
  7567  14B5                     u3980:
  7568  14B5                     l2714:
  7569  14B5  01E3               	clrf	___fladd@aexp
  7570  14B6  0AE3               	incf	___fladd@aexp,f
  7571  14B7  2CBD               	goto	l2718
  7572  14B8                     l675:
  7573  14B8  1C52               	btfss	___fladd@b,0
  7574  14B9  2CBB               	goto	u3991
  7575  14BA  2CBC               	goto	u3990
  7576  14BB                     u3991:
  7577  14BB  2CBD               	goto	l2718
  7578  14BC                     u3990:
  7579  14BC  2CB5               	goto	l2714
  7580  14BD                     l2718:
  7581  14BD  0863               	movf	___fladd@aexp,w
  7582  14BE  1903               	btfsc	3,2
  7583  14BF  2CC1               	goto	u4001
  7584  14C0  2CC2               	goto	u4000
  7585  14C1                     u4001:
  7586  14C1  2CF6               	goto	l678
  7587  14C2                     u4000:
  7588  14C2                     l2720:
  7589  14C2  3001               	movlw	1
  7590  14C3  07D2               	addwf	___fladd@b,f
  7591  14C4  3000               	movlw	0
  7592  14C5  1803               	skipnc
  7593  14C6  3001               	movlw	1
  7594  14C7  07D3               	addwf	___fladd@b+1,f
  7595  14C8  3000               	movlw	0
  7596  14C9  1803               	skipnc
  7597  14CA  3001               	movlw	1
  7598  14CB  07D4               	addwf	___fladd@b+2,f
  7599  14CC  3000               	movlw	0
  7600  14CD  1803               	skipnc
  7601  14CE  3001               	movlw	1
  7602  14CF  07D5               	addwf	___fladd@b+3,f
  7603  14D0                     l2722:
  7604  14D0  1C55               	btfss	___fladd@b+3,0
  7605  14D1  2CD3               	goto	u4011
  7606  14D2  2CD4               	goto	u4010
  7607  14D3                     u4011:
  7608  14D3  2CF6               	goto	l678
  7609  14D4                     u4010:
  7610  14D4                     l2724:
  7611  14D4  0852               	movf	___fladd@b,w
  7612  14D5  00DA               	movwf	??___fladd
  7613  14D6  0853               	movf	___fladd@b+1,w
  7614  14D7  00DB               	movwf	??___fladd+1
  7615  14D8  0854               	movf	___fladd@b+2,w
  7616  14D9  00DC               	movwf	??___fladd+2
  7617  14DA  0855               	movf	___fladd@b+3,w
  7618  14DB  00DD               	movwf	??___fladd+3
  7619  14DC  3001               	movlw	1
  7620  14DD  00DE               	movwf	??___fladd+4
  7621  14DE                     u4025:
  7622  14DE  0D5D               	rlf	??___fladd+3,w
  7623  14DF  0CDD               	rrf	??___fladd+3,f
  7624  14E0  0CDC               	rrf	??___fladd+2,f
  7625  14E1  0CDB               	rrf	??___fladd+1,f
  7626  14E2  0CDA               	rrf	??___fladd,f
  7627  14E3                     u4020:
  7628  14E3  0BDE               	decfsz	??___fladd+4,f
  7629  14E4  2CDE               	goto	u4025
  7630  14E5  085D               	movf	??___fladd+3,w
  7631  14E6  00D5               	movwf	___fladd@b+3
  7632  14E7  085C               	movf	??___fladd+2,w
  7633  14E8  00D4               	movwf	___fladd@b+2
  7634  14E9  085B               	movf	??___fladd+1,w
  7635  14EA  00D3               	movwf	___fladd@b+1
  7636  14EB  085A               	movf	??___fladd,w
  7637  14EC  00D2               	movwf	___fladd@b
  7638  14ED  0A64               	incf	___fladd@bexp,w
  7639  14EE  1903               	btfsc	3,2
  7640  14EF  2CF1               	goto	u4031
  7641  14F0  2CF2               	goto	u4030
  7642  14F1                     u4031:
  7643  14F1  2CF6               	goto	l678
  7644  14F2                     u4030:
  7645  14F2                     l2726:
  7646  14F2  3001               	movlw	1
  7647  14F3  00DA               	movwf	??___fladd
  7648  14F4  085A               	movf	??___fladd,w
  7649  14F5  07E4               	addwf	___fladd@bexp,f
  7650  14F6                     l678:
  7651  14F6  0A64               	incf	___fladd@bexp,w
  7652  14F7  1903               	btfsc	3,2
  7653  14F8  2CFA               	goto	u4041
  7654  14F9  2CFB               	goto	u4040
  7655  14FA                     u4041:
  7656  14FA  2D00               	goto	l2730
  7657  14FB                     u4040:
  7658  14FB                     l2728:
  7659  14FB  0864               	movf	___fladd@bexp,w
  7660  14FC  1D03               	btfss	3,2
  7661  14FD  2CFF               	goto	u4051
  7662  14FE  2D00               	goto	u4050
  7663  14FF                     u4051:
  7664  14FF  2D0E               	goto	l2736
  7665  1500                     u4050:
  7666  1500                     l2730:
  7667  1500  3000               	movlw	0
  7668  1501  00D5               	movwf	___fladd@b+3
  7669  1502  3000               	movlw	0
  7670  1503  00D4               	movwf	___fladd@b+2
  7671  1504  3000               	movlw	0
  7672  1505  00D3               	movwf	___fladd@b+1
  7673  1506  3000               	movlw	0
  7674  1507  00D2               	movwf	___fladd@b
  7675  1508                     l2732:
  7676  1508  0864               	movf	___fladd@bexp,w
  7677  1509  1D03               	btfss	3,2
  7678  150A  2D0C               	goto	u4061
  7679  150B  2D0D               	goto	u4060
  7680  150C                     u4061:
  7681  150C  2D0E               	goto	l2736
  7682  150D                     u4060:
  7683  150D                     l2734:
  7684  150D  01E2               	clrf	___fladd@signs
  7685  150E                     l2736:
  7686  150E  1C64               	btfss	___fladd@bexp,0
  7687  150F  2D11               	goto	u4071
  7688  1510  2D12               	goto	u4070
  7689  1511                     u4071:
  7690  1511  2D14               	goto	l2740
  7691  1512                     u4070:
  7692  1512                     l2738:
  7693  1512  17D4               	bsf	___fladd@b+2,7
  7694  1513  2D18               	goto	l686
  7695  1514                     l2740:
  7696  1514  307F               	movlw	127
  7697  1515  00DA               	movwf	??___fladd
  7698  1516  085A               	movf	??___fladd,w
  7699  1517  05D4               	andwf	___fladd@b+2,f
  7700  1518                     l686:
  7701  1518  0864               	movf	___fladd@bexp,w
  7702  1519  00DA               	movwf	??___fladd
  7703  151A  1003               	clrc
  7704  151B  0C5A               	rrf	??___fladd,w
  7705  151C  00DB               	movwf	??___fladd+1
  7706  151D  085B               	movf	??___fladd+1,w
  7707  151E  00D5               	movwf	___fladd@b+3
  7708  151F                     l2742:
  7709  151F  1FE2               	btfss	___fladd@signs,7
  7710  1520  2D22               	goto	u4081
  7711  1521  2D23               	goto	u4080
  7712  1522                     u4081:
  7713  1522  2D24               	goto	l687
  7714  1523                     u4080:
  7715  1523                     l2744:
  7716  1523  17D5               	bsf	___fladd@b+3,7
  7717  1524                     l687:
  7718  1524                     l657:
  7719  1524  0008               	return
  7720  1525                     __end_of___fladd:
  7721                           
  7722                           	psect	text20
  7723  18CE                     __ptext20:	
  7724 ;; *************** function ___flneg *****************
  7725 ;; Defined at:
  7726 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\flneg.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  f1              4    0[COMMON] unsigned char 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  4    0[COMMON] unsigned char 
  7733 ;; Registers used:
  7734 ;;		wreg
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7740 ;;      Params:         4       0       0       0       0
  7741 ;;      Locals:         0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0
  7743 ;;      Totals:         4       0       0       0       0
  7744 ;;Total ram usage:        4 bytes
  7745 ;; Hardware stack levels used: 1
  7746 ;; This function calls:
  7747 ;;		Nothing
  7748 ;; This function is called by:
  7749 ;;		_sprintf
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753  18CE                     ___flneg:	
  7754                           ;psect for function ___flneg
  7755                           
  7756  18CE                     l3160:	
  7757                           ;incstack = 0
  7758                           ; Regs used in ___flneg: [wreg]
  7759                           
  7760  18CE  0873               	movf	___flneg@f1+3,w
  7761  18CF  0472               	iorwf	___flneg@f1+2,w
  7762  18D0  0471               	iorwf	___flneg@f1+1,w
  7763  18D1  0470               	iorwf	___flneg@f1,w
  7764  18D2  1903               	skipnz
  7765  18D3  28D5               	goto	u5211
  7766  18D4  28D6               	goto	u5210
  7767  18D5                     u5211:
  7768  18D5  28D8               	goto	l3164
  7769  18D6                     u5210:
  7770  18D6                     l3162:
  7771  18D6  3080               	movlw	128
  7772  18D7  06F3               	xorwf	___flneg@f1+3,f
  7773  18D8                     l3164:
  7774  18D8                     l516:
  7775  18D8  0008               	return
  7776  18D9                     __end_of___flneg:
  7777                           
  7778                           	psect	text21
  7779  1C0A                     __ptext21:	
  7780 ;; *************** function ___flge *****************
  7781 ;; Defined at:
  7782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\flge.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  ff1             4    0[COMMON] unsigned char 
  7785 ;;  ff2             4    4[COMMON] unsigned char 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;		None               void
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7797 ;;      Params:         8       0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0
  7799 ;;      Temps:          4       0       0       0       0
  7800 ;;      Totals:        12       0       0       0       0
  7801 ;;Total ram usage:       12 bytes
  7802 ;; Hardware stack levels used: 1
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_sprintf
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810  1C0A                     ___flge:	
  7811                           ;psect for function ___flge
  7812                           
  7813  1C0A                     l3140:	
  7814                           ;incstack = 0
  7815                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7816                           
  7817  1C0A  3000               	movlw	0
  7818  1C0B  0570               	andwf	___flge@ff1,w
  7819  1C0C  00F8               	movwf	??___flge
  7820  1C0D  3000               	movlw	0
  7821  1C0E  0571               	andwf	___flge@ff1+1,w
  7822  1C0F  00F9               	movwf	??___flge+1
  7823  1C10  3080               	movlw	128
  7824  1C11  0572               	andwf	___flge@ff1+2,w
  7825  1C12  00FA               	movwf	??___flge+2
  7826  1C13  307F               	movlw	127
  7827  1C14  0573               	andwf	___flge@ff1+3,w
  7828  1C15  00FB               	movwf	??___flge+3
  7829  1C16  087B               	movf	??___flge+3,w
  7830  1C17  047A               	iorwf	??___flge+2,w
  7831  1C18  0479               	iorwf	??___flge+1,w
  7832  1C19  0478               	iorwf	??___flge,w
  7833  1C1A  1D03               	skipz
  7834  1C1B  2C1D               	goto	u5141
  7835  1C1C  2C1E               	goto	u5140
  7836  1C1D                     u5141:
  7837  1C1D  2C26               	goto	l508
  7838  1C1E                     u5140:
  7839  1C1E                     l3142:
  7840  1C1E  3000               	movlw	0
  7841  1C1F  00F3               	movwf	___flge@ff1+3
  7842  1C20  3000               	movlw	0
  7843  1C21  00F2               	movwf	___flge@ff1+2
  7844  1C22  3000               	movlw	0
  7845  1C23  00F1               	movwf	___flge@ff1+1
  7846  1C24  3000               	movlw	0
  7847  1C25  00F0               	movwf	___flge@ff1
  7848  1C26                     l508:
  7849  1C26  3000               	movlw	0
  7850  1C27  0574               	andwf	___flge@ff2,w
  7851  1C28  00F8               	movwf	??___flge
  7852  1C29  3000               	movlw	0
  7853  1C2A  0575               	andwf	___flge@ff2+1,w
  7854  1C2B  00F9               	movwf	??___flge+1
  7855  1C2C  3080               	movlw	128
  7856  1C2D  0576               	andwf	___flge@ff2+2,w
  7857  1C2E  00FA               	movwf	??___flge+2
  7858  1C2F  307F               	movlw	127
  7859  1C30  0577               	andwf	___flge@ff2+3,w
  7860  1C31  00FB               	movwf	??___flge+3
  7861  1C32  087B               	movf	??___flge+3,w
  7862  1C33  047A               	iorwf	??___flge+2,w
  7863  1C34  0479               	iorwf	??___flge+1,w
  7864  1C35  0478               	iorwf	??___flge,w
  7865  1C36  1D03               	skipz
  7866  1C37  2C39               	goto	u5151
  7867  1C38  2C3A               	goto	u5150
  7868  1C39                     u5151:
  7869  1C39  2C42               	goto	l3146
  7870  1C3A                     u5150:
  7871  1C3A                     l3144:
  7872  1C3A  3000               	movlw	0
  7873  1C3B  00F7               	movwf	___flge@ff2+3
  7874  1C3C  3000               	movlw	0
  7875  1C3D  00F6               	movwf	___flge@ff2+2
  7876  1C3E  3000               	movlw	0
  7877  1C3F  00F5               	movwf	___flge@ff2+1
  7878  1C40  3000               	movlw	0
  7879  1C41  00F4               	movwf	___flge@ff2
  7880  1C42                     l3146:
  7881  1C42  1FF3               	btfss	___flge@ff1+3,7
  7882  1C43  2C45               	goto	u5161
  7883  1C44  2C46               	goto	u5160
  7884  1C45                     u5161:
  7885  1C45  2C6A               	goto	l3150
  7886  1C46                     u5160:
  7887  1C46                     l3148:
  7888  1C46  3000               	movlw	0
  7889  1C47  00F8               	movwf	??___flge
  7890  1C48  3000               	movlw	0
  7891  1C49  00F9               	movwf	??___flge+1
  7892  1C4A  3000               	movlw	0
  7893  1C4B  00FA               	movwf	??___flge+2
  7894  1C4C  3080               	movlw	128
  7895  1C4D  00FB               	movwf	??___flge+3
  7896  1C4E  0870               	movf	___flge@ff1,w
  7897  1C4F  02F8               	subwf	??___flge,f
  7898  1C50  0871               	movf	___flge@ff1+1,w
  7899  1C51  1C03               	skipc
  7900  1C52  0F71               	incfsz	___flge@ff1+1,w
  7901  1C53  2C55               	goto	u5171
  7902  1C54  2C56               	goto	u5172
  7903  1C55                     u5171:
  7904  1C55  02F9               	subwf	??___flge+1,f
  7905  1C56                     u5172:
  7906  1C56  0872               	movf	___flge@ff1+2,w
  7907  1C57  1C03               	skipc
  7908  1C58  0F72               	incfsz	___flge@ff1+2,w
  7909  1C59  2C5B               	goto	u5173
  7910  1C5A  2C5C               	goto	u5174
  7911  1C5B                     u5173:
  7912  1C5B  02FA               	subwf	??___flge+2,f
  7913  1C5C                     u5174:
  7914  1C5C  0873               	movf	___flge@ff1+3,w
  7915  1C5D  1C03               	skipc
  7916  1C5E  0F73               	incfsz	___flge@ff1+3,w
  7917  1C5F  2C61               	goto	u5175
  7918  1C60  2C62               	goto	u5176
  7919  1C61                     u5175:
  7920  1C61  02FB               	subwf	??___flge+3,f
  7921  1C62                     u5176:
  7922  1C62  087B               	movf	??___flge+3,w
  7923  1C63  00F3               	movwf	___flge@ff1+3
  7924  1C64  087A               	movf	??___flge+2,w
  7925  1C65  00F2               	movwf	___flge@ff1+2
  7926  1C66  0879               	movf	??___flge+1,w
  7927  1C67  00F1               	movwf	___flge@ff1+1
  7928  1C68  0878               	movf	??___flge,w
  7929  1C69  00F0               	movwf	___flge@ff1
  7930  1C6A                     l3150:
  7931  1C6A  1FF7               	btfss	___flge@ff2+3,7
  7932  1C6B  2C6D               	goto	u5181
  7933  1C6C  2C6E               	goto	u5180
  7934  1C6D                     u5181:
  7935  1C6D  2C92               	goto	l511
  7936  1C6E                     u5180:
  7937  1C6E                     l3152:
  7938  1C6E  3000               	movlw	0
  7939  1C6F  00F8               	movwf	??___flge
  7940  1C70  3000               	movlw	0
  7941  1C71  00F9               	movwf	??___flge+1
  7942  1C72  3000               	movlw	0
  7943  1C73  00FA               	movwf	??___flge+2
  7944  1C74  3080               	movlw	128
  7945  1C75  00FB               	movwf	??___flge+3
  7946  1C76  0874               	movf	___flge@ff2,w
  7947  1C77  02F8               	subwf	??___flge,f
  7948  1C78  0875               	movf	___flge@ff2+1,w
  7949  1C79  1C03               	skipc
  7950  1C7A  0F75               	incfsz	___flge@ff2+1,w
  7951  1C7B  2C7D               	goto	u5191
  7952  1C7C  2C7E               	goto	u5192
  7953  1C7D                     u5191:
  7954  1C7D  02F9               	subwf	??___flge+1,f
  7955  1C7E                     u5192:
  7956  1C7E  0876               	movf	___flge@ff2+2,w
  7957  1C7F  1C03               	skipc
  7958  1C80  0F76               	incfsz	___flge@ff2+2,w
  7959  1C81  2C83               	goto	u5193
  7960  1C82  2C84               	goto	u5194
  7961  1C83                     u5193:
  7962  1C83  02FA               	subwf	??___flge+2,f
  7963  1C84                     u5194:
  7964  1C84  0877               	movf	___flge@ff2+3,w
  7965  1C85  1C03               	skipc
  7966  1C86  0F77               	incfsz	___flge@ff2+3,w
  7967  1C87  2C89               	goto	u5195
  7968  1C88  2C8A               	goto	u5196
  7969  1C89                     u5195:
  7970  1C89  02FB               	subwf	??___flge+3,f
  7971  1C8A                     u5196:
  7972  1C8A  087B               	movf	??___flge+3,w
  7973  1C8B  00F7               	movwf	___flge@ff2+3
  7974  1C8C  087A               	movf	??___flge+2,w
  7975  1C8D  00F6               	movwf	___flge@ff2+2
  7976  1C8E  0879               	movf	??___flge+1,w
  7977  1C8F  00F5               	movwf	___flge@ff2+1
  7978  1C90  0878               	movf	??___flge,w
  7979  1C91  00F4               	movwf	___flge@ff2
  7980  1C92                     l511:
  7981  1C92  3080               	movlw	128
  7982  1C93  06F3               	xorwf	___flge@ff1+3,f
  7983  1C94  3080               	movlw	128
  7984  1C95  06F7               	xorwf	___flge@ff2+3,f
  7985  1C96  0877               	movf	___flge@ff2+3,w
  7986  1C97  0273               	subwf	___flge@ff1+3,w
  7987  1C98  1D03               	skipz
  7988  1C99  2CA4               	goto	u5205
  7989  1C9A  0876               	movf	___flge@ff2+2,w
  7990  1C9B  0272               	subwf	___flge@ff1+2,w
  7991  1C9C  1D03               	skipz
  7992  1C9D  2CA4               	goto	u5205
  7993  1C9E  0875               	movf	___flge@ff2+1,w
  7994  1C9F  0271               	subwf	___flge@ff1+1,w
  7995  1CA0  1D03               	skipz
  7996  1CA1  2CA4               	goto	u5205
  7997  1CA2  0874               	movf	___flge@ff2,w
  7998  1CA3  0270               	subwf	___flge@ff1,w
  7999  1CA4                     u5205:
  8000  1CA4  1803               	skipnc
  8001  1CA5  2CA7               	goto	u5201
  8002  1CA6  2CA8               	goto	u5200
  8003  1CA7                     u5201:
  8004  1CA7  2CAA               	goto	l3156
  8005  1CA8                     u5200:
  8006  1CA8                     l3154:
  8007  1CA8  1003               	clrc
  8008  1CA9  2CAB               	goto	l512
  8009  1CAA                     l3156:
  8010  1CAA  1403               	setc
  8011  1CAB                     l512:
  8012  1CAB  0008               	return
  8013  1CAC                     __end_of___flge:
  8014                           
  8015                           	psect	text22
  8016  0003                     __ptext22:	
  8017 ;; *************** function ___fleq *****************
  8018 ;; Defined at:
  8019 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fleq.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  ff1             4    0[COMMON] unsigned char 
  8022 ;;  ff2             4    4[COMMON] unsigned char 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;		None               void
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8034 ;;      Params:         8       0       0       0       0
  8035 ;;      Locals:         0       0       0       0       0
  8036 ;;      Temps:          4       0       0       0       0
  8037 ;;      Totals:        12       0       0       0       0
  8038 ;;Total ram usage:       12 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_sprintf
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047  0003                     ___fleq:	
  8048                           ;psect for function ___fleq
  8049                           
  8050  0003                     l3128:	
  8051                           ;incstack = 0
  8052                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8053                           
  8054  0003  3000               	movlw	0
  8055  0004  0570               	andwf	___fleq@ff1,w
  8056  0005  00F8               	movwf	??___fleq
  8057  0006  3000               	movlw	0
  8058  0007  0571               	andwf	___fleq@ff1+1,w
  8059  0008  00F9               	movwf	??___fleq+1
  8060  0009  3080               	movlw	128
  8061  000A  0572               	andwf	___fleq@ff1+2,w
  8062  000B  00FA               	movwf	??___fleq+2
  8063  000C  307F               	movlw	127
  8064  000D  0573               	andwf	___fleq@ff1+3,w
  8065  000E  00FB               	movwf	??___fleq+3
  8066  000F  087B               	movf	??___fleq+3,w
  8067  0010  047A               	iorwf	??___fleq+2,w
  8068  0011  0479               	iorwf	??___fleq+1,w
  8069  0012  0478               	iorwf	??___fleq,w
  8070  0013  1D03               	skipz
  8071  0014  2816               	goto	u5111
  8072  0015  2817               	goto	u5110
  8073  0016                     u5111:
  8074  0016  281F               	goto	l503
  8075  0017                     u5110:
  8076  0017                     l3130:
  8077  0017  3000               	movlw	0
  8078  0018  00F3               	movwf	___fleq@ff1+3
  8079  0019  3000               	movlw	0
  8080  001A  00F2               	movwf	___fleq@ff1+2
  8081  001B  3000               	movlw	0
  8082  001C  00F1               	movwf	___fleq@ff1+1
  8083  001D  3000               	movlw	0
  8084  001E  00F0               	movwf	___fleq@ff1
  8085  001F                     l503:
  8086  001F  3000               	movlw	0
  8087  0020  0574               	andwf	___fleq@ff2,w
  8088  0021  00F8               	movwf	??___fleq
  8089  0022  3000               	movlw	0
  8090  0023  0575               	andwf	___fleq@ff2+1,w
  8091  0024  00F9               	movwf	??___fleq+1
  8092  0025  3080               	movlw	128
  8093  0026  0576               	andwf	___fleq@ff2+2,w
  8094  0027  00FA               	movwf	??___fleq+2
  8095  0028  307F               	movlw	127
  8096  0029  0577               	andwf	___fleq@ff2+3,w
  8097  002A  00FB               	movwf	??___fleq+3
  8098  002B  087B               	movf	??___fleq+3,w
  8099  002C  047A               	iorwf	??___fleq+2,w
  8100  002D  0479               	iorwf	??___fleq+1,w
  8101  002E  0478               	iorwf	??___fleq,w
  8102  002F  1D03               	skipz
  8103  0030  2832               	goto	u5121
  8104  0031  2833               	goto	u5120
  8105  0032                     u5121:
  8106  0032  283B               	goto	l504
  8107  0033                     u5120:
  8108  0033                     l3132:
  8109  0033  3000               	movlw	0
  8110  0034  00F7               	movwf	___fleq@ff2+3
  8111  0035  3000               	movlw	0
  8112  0036  00F6               	movwf	___fleq@ff2+2
  8113  0037  3000               	movlw	0
  8114  0038  00F5               	movwf	___fleq@ff2+1
  8115  0039  3000               	movlw	0
  8116  003A  00F4               	movwf	___fleq@ff2
  8117  003B                     l504:
  8118  003B  0877               	movf	___fleq@ff2+3,w
  8119  003C  0673               	xorwf	___fleq@ff1+3,w
  8120  003D  1D03               	skipz
  8121  003E  2849               	goto	u5135
  8122  003F  0876               	movf	___fleq@ff2+2,w
  8123  0040  0672               	xorwf	___fleq@ff1+2,w
  8124  0041  1D03               	skipz
  8125  0042  2849               	goto	u5135
  8126  0043  0875               	movf	___fleq@ff2+1,w
  8127  0044  0671               	xorwf	___fleq@ff1+1,w
  8128  0045  1D03               	skipz
  8129  0046  2849               	goto	u5135
  8130  0047  0874               	movf	___fleq@ff2,w
  8131  0048  0670               	xorwf	___fleq@ff1,w
  8132  0049                     u5135:
  8133  0049  1903               	skipnz
  8134  004A  284C               	goto	u5131
  8135  004B  284D               	goto	u5130
  8136  004C                     u5131:
  8137  004C  284F               	goto	l3136
  8138  004D                     u5130:
  8139  004D                     l3134:
  8140  004D  1003               	clrc
  8141  004E  2850               	goto	l505
  8142  004F                     l3136:
  8143  004F  1403               	setc
  8144  0050                     l505:
  8145  0050  0008               	return
  8146  0051                     __end_of___fleq:
  8147                           
  8148                           	psect	text23
  8149  1E23                     __ptext23:	
  8150 ;; *************** function ___fldiv *****************
  8151 ;; Defined at:
  8152 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcdiv.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  a               4   30[BANK0 ] unsigned char 
  8155 ;;  b               4   34[BANK0 ] unsigned char 
  8156 ;; Auto vars:     Size  Location     Type
  8157 ;;  grs             4   50[BANK0 ] unsigned long 
  8158 ;;  rem             4   43[BANK0 ] unsigned long 
  8159 ;;  new_exp         2   48[BANK0 ] int 
  8160 ;;  aexp            1   55[BANK0 ] unsigned char 
  8161 ;;  bexp            1   54[BANK0 ] unsigned char 
  8162 ;;  sign            1   47[BANK0 ] unsigned char 
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  4   30[BANK0 ] unsigned char 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2, status,0, btemp+1
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8172 ;;      Params:         0       8       0       0       0
  8173 ;;      Locals:         0      13       0       0       0
  8174 ;;      Temps:          0       5       0       0       0
  8175 ;;      Totals:         0      26       0       0       0
  8176 ;;Total ram usage:       26 bytes
  8177 ;; Hardware stack levels used: 1
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_main
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185  1E23                     ___fldiv:	
  8186                           ;psect for function ___fldiv
  8187                           
  8188  1E23                     l3650:	
  8189                           ;incstack = 0
  8190                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8191                           
  8192  1E23  1283               	bcf	3,5	;RP0=0, select bank0
  8193  1E24  1303               	bcf	3,6	;RP1=0, select bank0
  8194  1E25  0845               	movf	___fldiv@b+3,w
  8195  1E26  3980               	andlw	128
  8196  1E27  00C6               	movwf	??___fldiv
  8197  1E28  0846               	movf	??___fldiv,w
  8198  1E29  00CF               	movwf	___fldiv@sign
  8199  1E2A                     l3652:
  8200  1E2A  0845               	movf	___fldiv@b+3,w
  8201  1E2B  00C6               	movwf	??___fldiv
  8202  1E2C  0746               	addwf	??___fldiv,w
  8203  1E2D  00C7               	movwf	??___fldiv+1
  8204  1E2E  0847               	movf	??___fldiv+1,w
  8205  1E2F  00D6               	movwf	___fldiv@bexp
  8206  1E30                     l3654:
  8207  1E30  1FC4               	btfss	___fldiv@b+2,7
  8208  1E31  2E33               	goto	u6171
  8209  1E32  2E34               	goto	u6170
  8210  1E33                     u6171:
  8211  1E33  2E35               	goto	l3658
  8212  1E34                     u6170:
  8213  1E34                     l3656:
  8214  1E34  1456               	bsf	___fldiv@bexp,0
  8215  1E35                     l3658:
  8216  1E35  0856               	movf	___fldiv@bexp,w
  8217  1E36  1903               	btfsc	3,2
  8218  1E37  2E39               	goto	u6181
  8219  1E38  2E3A               	goto	u6180
  8220  1E39                     u6181:
  8221  1E39  2E4A               	goto	l3668
  8222  1E3A                     u6180:
  8223  1E3A                     l3660:
  8224  1E3A  0A56               	incf	___fldiv@bexp,w
  8225  1E3B  1D03               	btfss	3,2
  8226  1E3C  2E3E               	goto	u6191
  8227  1E3D  2E3F               	goto	u6190
  8228  1E3E                     u6191:
  8229  1E3E  2E47               	goto	l3664
  8230  1E3F                     u6190:
  8231  1E3F                     l3662:
  8232  1E3F  3000               	movlw	0
  8233  1E40  00C5               	movwf	___fldiv@b+3
  8234  1E41  3000               	movlw	0
  8235  1E42  00C4               	movwf	___fldiv@b+2
  8236  1E43  3000               	movlw	0
  8237  1E44  00C3               	movwf	___fldiv@b+1
  8238  1E45  3000               	movlw	0
  8239  1E46  00C2               	movwf	___fldiv@b
  8240  1E47                     l3664:
  8241  1E47  17C4               	bsf	___fldiv@b+2,7
  8242  1E48                     l3666:
  8243  1E48  01C5               	clrf	___fldiv@b+3
  8244  1E49  2E52               	goto	l3670
  8245  1E4A                     l3668:
  8246  1E4A  3000               	movlw	0
  8247  1E4B  00C5               	movwf	___fldiv@b+3
  8248  1E4C  3000               	movlw	0
  8249  1E4D  00C4               	movwf	___fldiv@b+2
  8250  1E4E  3000               	movlw	0
  8251  1E4F  00C3               	movwf	___fldiv@b+1
  8252  1E50  3000               	movlw	0
  8253  1E51  00C2               	movwf	___fldiv@b
  8254  1E52                     l3670:
  8255  1E52  0841               	movf	___fldiv@a+3,w
  8256  1E53  3980               	andlw	128
  8257  1E54  00C6               	movwf	??___fldiv
  8258  1E55  0846               	movf	??___fldiv,w
  8259  1E56  06CF               	xorwf	___fldiv@sign,f
  8260  1E57                     l3672:
  8261  1E57  0841               	movf	___fldiv@a+3,w
  8262  1E58  00C6               	movwf	??___fldiv
  8263  1E59  0746               	addwf	??___fldiv,w
  8264  1E5A  00C7               	movwf	??___fldiv+1
  8265  1E5B  0847               	movf	??___fldiv+1,w
  8266  1E5C  00D7               	movwf	___fldiv@aexp
  8267  1E5D                     l3674:
  8268  1E5D  1FC0               	btfss	___fldiv@a+2,7
  8269  1E5E  2E60               	goto	u6201
  8270  1E5F  2E61               	goto	u6200
  8271  1E60                     u6201:
  8272  1E60  2E62               	goto	l3678
  8273  1E61                     u6200:
  8274  1E61                     l3676:
  8275  1E61  1457               	bsf	___fldiv@aexp,0
  8276  1E62                     l3678:
  8277  1E62  0857               	movf	___fldiv@aexp,w
  8278  1E63  1903               	btfsc	3,2
  8279  1E64  2E66               	goto	u6211
  8280  1E65  2E67               	goto	u6210
  8281  1E66                     u6211:
  8282  1E66  2E77               	goto	l3688
  8283  1E67                     u6210:
  8284  1E67                     l3680:
  8285  1E67  0A57               	incf	___fldiv@aexp,w
  8286  1E68  1D03               	btfss	3,2
  8287  1E69  2E6B               	goto	u6221
  8288  1E6A  2E6C               	goto	u6220
  8289  1E6B                     u6221:
  8290  1E6B  2E74               	goto	l3684
  8291  1E6C                     u6220:
  8292  1E6C                     l3682:
  8293  1E6C  3000               	movlw	0
  8294  1E6D  00C1               	movwf	___fldiv@a+3
  8295  1E6E  3000               	movlw	0
  8296  1E6F  00C0               	movwf	___fldiv@a+2
  8297  1E70  3000               	movlw	0
  8298  1E71  00BF               	movwf	___fldiv@a+1
  8299  1E72  3000               	movlw	0
  8300  1E73  00BE               	movwf	___fldiv@a
  8301  1E74                     l3684:
  8302  1E74  17C0               	bsf	___fldiv@a+2,7
  8303  1E75                     l3686:
  8304  1E75  01C1               	clrf	___fldiv@a+3
  8305  1E76  2E7F               	goto	l700
  8306  1E77                     l3688:
  8307  1E77  3000               	movlw	0
  8308  1E78  00C1               	movwf	___fldiv@a+3
  8309  1E79  3000               	movlw	0
  8310  1E7A  00C0               	movwf	___fldiv@a+2
  8311  1E7B  3000               	movlw	0
  8312  1E7C  00BF               	movwf	___fldiv@a+1
  8313  1E7D  3000               	movlw	0
  8314  1E7E  00BE               	movwf	___fldiv@a
  8315  1E7F                     l700:
  8316  1E7F  0841               	movf	___fldiv@a+3,w
  8317  1E80  0440               	iorwf	___fldiv@a+2,w
  8318  1E81  043F               	iorwf	___fldiv@a+1,w
  8319  1E82  043E               	iorwf	___fldiv@a,w
  8320  1E83  1D03               	skipz
  8321  1E84  2E86               	goto	u6231
  8322  1E85  2E87               	goto	u6230
  8323  1E86                     u6231:
  8324  1E86  2EA0               	goto	l3698
  8325  1E87                     u6230:
  8326  1E87                     l3690:
  8327  1E87  3000               	movlw	0
  8328  1E88  00C5               	movwf	___fldiv@b+3
  8329  1E89  3000               	movlw	0
  8330  1E8A  00C4               	movwf	___fldiv@b+2
  8331  1E8B  3000               	movlw	0
  8332  1E8C  00C3               	movwf	___fldiv@b+1
  8333  1E8D  3000               	movlw	0
  8334  1E8E  00C2               	movwf	___fldiv@b
  8335  1E8F  3080               	movlw	128
  8336  1E90  04C4               	iorwf	___fldiv@b+2,f
  8337  1E91  307F               	movlw	127
  8338  1E92  04C5               	iorwf	___fldiv@b+3,f
  8339  1E93                     l3692:
  8340  1E93  084F               	movf	___fldiv@sign,w
  8341  1E94  00C6               	movwf	??___fldiv
  8342  1E95  0846               	movf	??___fldiv,w
  8343  1E96  04C5               	iorwf	___fldiv@b+3,f
  8344  1E97                     l3694:
  8345  1E97  0845               	movf	___fldiv@b+3,w
  8346  1E98  00C1               	movwf	?___fldiv+3
  8347  1E99  0844               	movf	___fldiv@b+2,w
  8348  1E9A  00C0               	movwf	?___fldiv+2
  8349  1E9B  0843               	movf	___fldiv@b+1,w
  8350  1E9C  00BF               	movwf	?___fldiv+1
  8351  1E9D  0842               	movf	___fldiv@b,w
  8352  1E9E  00BE               	movwf	?___fldiv
  8353  1E9F  2FFF               	goto	l702
  8354  1EA0                     l3698:
  8355  1EA0  0856               	movf	___fldiv@bexp,w
  8356  1EA1  1D03               	btfss	3,2
  8357  1EA2  2EA4               	goto	u6241
  8358  1EA3  2EA5               	goto	u6240
  8359  1EA4                     u6241:
  8360  1EA4  2EAE               	goto	l3704
  8361  1EA5                     u6240:
  8362  1EA5                     l3700:
  8363  1EA5  3000               	movlw	0
  8364  1EA6  00C1               	movwf	?___fldiv+3
  8365  1EA7  3000               	movlw	0
  8366  1EA8  00C0               	movwf	?___fldiv+2
  8367  1EA9  3000               	movlw	0
  8368  1EAA  00BF               	movwf	?___fldiv+1
  8369  1EAB  3000               	movlw	0
  8370  1EAC  00BE               	movwf	?___fldiv
  8371  1EAD  2FFF               	goto	l702
  8372  1EAE                     l3704:
  8373  1EAE  0856               	movf	___fldiv@bexp,w
  8374  1EAF  00C6               	movwf	??___fldiv
  8375  1EB0  01C7               	clrf	??___fldiv+1
  8376  1EB1  0847               	movf	??___fldiv+1,w
  8377  1EB2  00C9               	movwf	??___fldiv+3
  8378  1EB3  0857               	movf	___fldiv@aexp,w
  8379  1EB4  0246               	subwf	??___fldiv,w
  8380  1EB5  00C8               	movwf	??___fldiv+2
  8381  1EB6  1C03               	skipc
  8382  1EB7  03C9               	decf	??___fldiv+3,f
  8383  1EB8  0848               	movf	??___fldiv+2,w
  8384  1EB9  3E7F               	addlw	127
  8385  1EBA  00D0               	movwf	___fldiv@new_exp
  8386  1EBB  0849               	movf	??___fldiv+3,w
  8387  1EBC  1803               	skipnc
  8388  1EBD  3E01               	addlw	1
  8389  1EBE  3E00               	addlw	0
  8390  1EBF  00D1               	movwf	___fldiv@new_exp+1
  8391  1EC0                     l3706:
  8392  1EC0  0845               	movf	___fldiv@b+3,w
  8393  1EC1  00CE               	movwf	___fldiv@rem+3
  8394  1EC2  0844               	movf	___fldiv@b+2,w
  8395  1EC3  00CD               	movwf	___fldiv@rem+2
  8396  1EC4  0843               	movf	___fldiv@b+1,w
  8397  1EC5  00CC               	movwf	___fldiv@rem+1
  8398  1EC6  0842               	movf	___fldiv@b,w
  8399  1EC7  00CB               	movwf	___fldiv@rem
  8400  1EC8                     l3708:
  8401  1EC8  3000               	movlw	0
  8402  1EC9  00C5               	movwf	___fldiv@b+3
  8403  1ECA  3000               	movlw	0
  8404  1ECB  00C4               	movwf	___fldiv@b+2
  8405  1ECC  3000               	movlw	0
  8406  1ECD  00C3               	movwf	___fldiv@b+1
  8407  1ECE  3000               	movlw	0
  8408  1ECF  00C2               	movwf	___fldiv@b
  8409  1ED0                     l3710:
  8410  1ED0  3000               	movlw	0
  8411  1ED1  00D5               	movwf	___fldiv@grs+3
  8412  1ED2  3000               	movlw	0
  8413  1ED3  00D4               	movwf	___fldiv@grs+2
  8414  1ED4  3000               	movlw	0
  8415  1ED5  00D3               	movwf	___fldiv@grs+1
  8416  1ED6  3000               	movlw	0
  8417  1ED7  00D2               	movwf	___fldiv@grs
  8418  1ED8                     l3712:
  8419  1ED8  01D7               	clrf	___fldiv@aexp
  8420  1ED9  2F24               	goto	l3732
  8421  1EDA                     l3714:
  8422  1EDA  0857               	movf	___fldiv@aexp,w
  8423  1EDB  1903               	btfsc	3,2
  8424  1EDC  2EDE               	goto	u6251
  8425  1EDD  2EDF               	goto	u6250
  8426  1EDE                     u6251:
  8427  1EDE  2EFF               	goto	l3724
  8428  1EDF                     u6250:
  8429  1EDF                     l3716:
  8430  1EDF  3001               	movlw	1
  8431  1EE0  00C6               	movwf	??___fldiv
  8432  1EE1                     u6265:
  8433  1EE1  1003               	clrc
  8434  1EE2  0DCB               	rlf	___fldiv@rem,f
  8435  1EE3  0DCC               	rlf	___fldiv@rem+1,f
  8436  1EE4  0DCD               	rlf	___fldiv@rem+2,f
  8437  1EE5  0DCE               	rlf	___fldiv@rem+3,f
  8438  1EE6  0BC6               	decfsz	??___fldiv,f
  8439  1EE7  2EE1               	goto	u6265
  8440  1EE8  3001               	movlw	1
  8441  1EE9  00C6               	movwf	??___fldiv
  8442  1EEA                     u6275:
  8443  1EEA  1003               	clrc
  8444  1EEB  0DC2               	rlf	___fldiv@b,f
  8445  1EEC  0DC3               	rlf	___fldiv@b+1,f
  8446  1EED  0DC4               	rlf	___fldiv@b+2,f
  8447  1EEE  0DC5               	rlf	___fldiv@b+3,f
  8448  1EEF  0BC6               	decfsz	??___fldiv,f
  8449  1EF0  2EEA               	goto	u6275
  8450  1EF1                     l3718:
  8451  1EF1  1FD5               	btfss	___fldiv@grs+3,7
  8452  1EF2  2EF4               	goto	u6281
  8453  1EF3  2EF5               	goto	u6280
  8454  1EF4                     u6281:
  8455  1EF4  2EF6               	goto	l3722
  8456  1EF5                     u6280:
  8457  1EF5                     l3720:
  8458  1EF5  1442               	bsf	___fldiv@b,0
  8459  1EF6                     l3722:
  8460  1EF6  3001               	movlw	1
  8461  1EF7  00C6               	movwf	??___fldiv
  8462  1EF8                     u6295:
  8463  1EF8  1003               	clrc
  8464  1EF9  0DD2               	rlf	___fldiv@grs,f
  8465  1EFA  0DD3               	rlf	___fldiv@grs+1,f
  8466  1EFB  0DD4               	rlf	___fldiv@grs+2,f
  8467  1EFC  0DD5               	rlf	___fldiv@grs+3,f
  8468  1EFD  0BC6               	decfsz	??___fldiv,f
  8469  1EFE  2EF8               	goto	u6295
  8470  1EFF                     l3724:
  8471  1EFF  0841               	movf	___fldiv@a+3,w
  8472  1F00  024E               	subwf	___fldiv@rem+3,w
  8473  1F01  1D03               	skipz
  8474  1F02  2F0D               	goto	u6305
  8475  1F03  0840               	movf	___fldiv@a+2,w
  8476  1F04  024D               	subwf	___fldiv@rem+2,w
  8477  1F05  1D03               	skipz
  8478  1F06  2F0D               	goto	u6305
  8479  1F07  083F               	movf	___fldiv@a+1,w
  8480  1F08  024C               	subwf	___fldiv@rem+1,w
  8481  1F09  1D03               	skipz
  8482  1F0A  2F0D               	goto	u6305
  8483  1F0B  083E               	movf	___fldiv@a,w
  8484  1F0C  024B               	subwf	___fldiv@rem,w
  8485  1F0D                     u6305:
  8486  1F0D  1C03               	skipc
  8487  1F0E  2F10               	goto	u6301
  8488  1F0F  2F11               	goto	u6300
  8489  1F10                     u6301:
  8490  1F10  2F20               	goto	l3730
  8491  1F11                     u6300:
  8492  1F11                     l3726:
  8493  1F11  1755               	bsf	___fldiv@grs+3,6
  8494  1F12                     l3728:
  8495  1F12  083E               	movf	___fldiv@a,w
  8496  1F13  02CB               	subwf	___fldiv@rem,f
  8497  1F14  083F               	movf	___fldiv@a+1,w
  8498  1F15  1C03               	skipc
  8499  1F16  0F3F               	incfsz	___fldiv@a+1,w
  8500  1F17  02CC               	subwf	___fldiv@rem+1,f
  8501  1F18  0840               	movf	___fldiv@a+2,w
  8502  1F19  1C03               	skipc
  8503  1F1A  0F40               	incfsz	___fldiv@a+2,w
  8504  1F1B  02CD               	subwf	___fldiv@rem+2,f
  8505  1F1C  0841               	movf	___fldiv@a+3,w
  8506  1F1D  1C03               	skipc
  8507  1F1E  0F41               	incfsz	___fldiv@a+3,w
  8508  1F1F  02CE               	subwf	___fldiv@rem+3,f
  8509  1F20                     l3730:
  8510  1F20  3001               	movlw	1
  8511  1F21  00C6               	movwf	??___fldiv
  8512  1F22  0846               	movf	??___fldiv,w
  8513  1F23  07D7               	addwf	___fldiv@aexp,f
  8514  1F24                     l3732:
  8515  1F24  301A               	movlw	26
  8516  1F25  0257               	subwf	___fldiv@aexp,w
  8517  1F26  1C03               	skipc
  8518  1F27  2F29               	goto	u6311
  8519  1F28  2F2A               	goto	u6310
  8520  1F29                     u6311:
  8521  1F29  2EDA               	goto	l3714
  8522  1F2A                     u6310:
  8523  1F2A                     l3734:
  8524  1F2A  084E               	movf	___fldiv@rem+3,w
  8525  1F2B  044D               	iorwf	___fldiv@rem+2,w
  8526  1F2C  044C               	iorwf	___fldiv@rem+1,w
  8527  1F2D  044B               	iorwf	___fldiv@rem,w
  8528  1F2E  1903               	skipnz
  8529  1F2F  2F31               	goto	u6321
  8530  1F30  2F32               	goto	u6320
  8531  1F31                     u6321:
  8532  1F31  2F51               	goto	l3748
  8533  1F32                     u6320:
  8534  1F32                     l3736:
  8535  1F32  1452               	bsf	___fldiv@grs,0
  8536  1F33  2F51               	goto	l3748
  8537  1F34                     l3738:
  8538  1F34  3001               	movlw	1
  8539  1F35  00C6               	movwf	??___fldiv
  8540  1F36                     u6335:
  8541  1F36  1003               	clrc
  8542  1F37  0DC2               	rlf	___fldiv@b,f
  8543  1F38  0DC3               	rlf	___fldiv@b+1,f
  8544  1F39  0DC4               	rlf	___fldiv@b+2,f
  8545  1F3A  0DC5               	rlf	___fldiv@b+3,f
  8546  1F3B  0BC6               	decfsz	??___fldiv,f
  8547  1F3C  2F36               	goto	u6335
  8548  1F3D                     l3740:
  8549  1F3D  1FD5               	btfss	___fldiv@grs+3,7
  8550  1F3E  2F40               	goto	u6341
  8551  1F3F  2F41               	goto	u6340
  8552  1F40                     u6341:
  8553  1F40  2F42               	goto	l3744
  8554  1F41                     u6340:
  8555  1F41                     l3742:
  8556  1F41  1442               	bsf	___fldiv@b,0
  8557  1F42                     l3744:
  8558  1F42  3001               	movlw	1
  8559  1F43  00C6               	movwf	??___fldiv
  8560  1F44                     u6355:
  8561  1F44  1003               	clrc
  8562  1F45  0DD2               	rlf	___fldiv@grs,f
  8563  1F46  0DD3               	rlf	___fldiv@grs+1,f
  8564  1F47  0DD4               	rlf	___fldiv@grs+2,f
  8565  1F48  0DD5               	rlf	___fldiv@grs+3,f
  8566  1F49  0BC6               	decfsz	??___fldiv,f
  8567  1F4A  2F44               	goto	u6355
  8568  1F4B                     l3746:
  8569  1F4B  30FF               	movlw	255
  8570  1F4C  07D0               	addwf	___fldiv@new_exp,f
  8571  1F4D  1803               	skipnc
  8572  1F4E  0AD1               	incf	___fldiv@new_exp+1,f
  8573  1F4F  30FF               	movlw	255
  8574  1F50  07D1               	addwf	___fldiv@new_exp+1,f
  8575  1F51                     l3748:
  8576  1F51  1FC4               	btfss	___fldiv@b+2,7
  8577  1F52  2F54               	goto	u6361
  8578  1F53  2F55               	goto	u6360
  8579  1F54                     u6361:
  8580  1F54  2F34               	goto	l3738
  8581  1F55                     u6360:
  8582  1F55                     l3750:
  8583  1F55  01D7               	clrf	___fldiv@aexp
  8584  1F56                     l3752:
  8585  1F56  1FD5               	btfss	___fldiv@grs+3,7
  8586  1F57  2F59               	goto	u6371
  8587  1F58  2F5A               	goto	u6370
  8588  1F59                     u6371:
  8589  1F59  2F76               	goto	l3760
  8590  1F5A                     u6370:
  8591  1F5A                     l3754:
  8592  1F5A  30FF               	movlw	255
  8593  1F5B  0552               	andwf	___fldiv@grs,w
  8594  1F5C  00C6               	movwf	??___fldiv
  8595  1F5D  30FF               	movlw	255
  8596  1F5E  0553               	andwf	___fldiv@grs+1,w
  8597  1F5F  00C7               	movwf	??___fldiv+1
  8598  1F60  30FF               	movlw	255
  8599  1F61  0554               	andwf	___fldiv@grs+2,w
  8600  1F62  00C8               	movwf	??___fldiv+2
  8601  1F63  307F               	movlw	127
  8602  1F64  0555               	andwf	___fldiv@grs+3,w
  8603  1F65  00C9               	movwf	??___fldiv+3
  8604  1F66  0849               	movf	??___fldiv+3,w
  8605  1F67  0448               	iorwf	??___fldiv+2,w
  8606  1F68  0447               	iorwf	??___fldiv+1,w
  8607  1F69  0446               	iorwf	??___fldiv,w
  8608  1F6A  1903               	skipnz
  8609  1F6B  2F6D               	goto	u6381
  8610  1F6C  2F6E               	goto	u6380
  8611  1F6D                     u6381:
  8612  1F6D  2F71               	goto	l716
  8613  1F6E                     u6380:
  8614  1F6E                     l3756:
  8615  1F6E  01D7               	clrf	___fldiv@aexp
  8616  1F6F  0AD7               	incf	___fldiv@aexp,f
  8617  1F70  2F76               	goto	l3760
  8618  1F71                     l716:
  8619  1F71  1C42               	btfss	___fldiv@b,0
  8620  1F72  2F74               	goto	u6391
  8621  1F73  2F75               	goto	u6390
  8622  1F74                     u6391:
  8623  1F74  2F76               	goto	l3760
  8624  1F75                     u6390:
  8625  1F75  2F6E               	goto	l3756
  8626  1F76                     l3760:
  8627  1F76  0857               	movf	___fldiv@aexp,w
  8628  1F77  1903               	btfsc	3,2
  8629  1F78  2F7A               	goto	u6401
  8630  1F79  2F7B               	goto	u6400
  8631  1F7A                     u6401:
  8632  1F7A  2FAC               	goto	l3770
  8633  1F7B                     u6400:
  8634  1F7B                     l3762:
  8635  1F7B  3001               	movlw	1
  8636  1F7C  07C2               	addwf	___fldiv@b,f
  8637  1F7D  3000               	movlw	0
  8638  1F7E  1803               	skipnc
  8639  1F7F  3001               	movlw	1
  8640  1F80  07C3               	addwf	___fldiv@b+1,f
  8641  1F81  3000               	movlw	0
  8642  1F82  1803               	skipnc
  8643  1F83  3001               	movlw	1
  8644  1F84  07C4               	addwf	___fldiv@b+2,f
  8645  1F85  3000               	movlw	0
  8646  1F86  1803               	skipnc
  8647  1F87  3001               	movlw	1
  8648  1F88  07C5               	addwf	___fldiv@b+3,f
  8649  1F89                     l3764:
  8650  1F89  1C45               	btfss	___fldiv@b+3,0
  8651  1F8A  2F8C               	goto	u6411
  8652  1F8B  2F8D               	goto	u6410
  8653  1F8C                     u6411:
  8654  1F8C  2FAC               	goto	l3770
  8655  1F8D                     u6410:
  8656  1F8D                     l3766:
  8657  1F8D  0842               	movf	___fldiv@b,w
  8658  1F8E  00C6               	movwf	??___fldiv
  8659  1F8F  0843               	movf	___fldiv@b+1,w
  8660  1F90  00C7               	movwf	??___fldiv+1
  8661  1F91  0844               	movf	___fldiv@b+2,w
  8662  1F92  00C8               	movwf	??___fldiv+2
  8663  1F93  0845               	movf	___fldiv@b+3,w
  8664  1F94  00C9               	movwf	??___fldiv+3
  8665  1F95  3001               	movlw	1
  8666  1F96  00CA               	movwf	??___fldiv+4
  8667  1F97                     u6425:
  8668  1F97  0D49               	rlf	??___fldiv+3,w
  8669  1F98  0CC9               	rrf	??___fldiv+3,f
  8670  1F99  0CC8               	rrf	??___fldiv+2,f
  8671  1F9A  0CC7               	rrf	??___fldiv+1,f
  8672  1F9B  0CC6               	rrf	??___fldiv,f
  8673  1F9C                     u6420:
  8674  1F9C  0BCA               	decfsz	??___fldiv+4,f
  8675  1F9D  2F97               	goto	u6425
  8676  1F9E  0849               	movf	??___fldiv+3,w
  8677  1F9F  00C5               	movwf	___fldiv@b+3
  8678  1FA0  0848               	movf	??___fldiv+2,w
  8679  1FA1  00C4               	movwf	___fldiv@b+2
  8680  1FA2  0847               	movf	??___fldiv+1,w
  8681  1FA3  00C3               	movwf	___fldiv@b+1
  8682  1FA4  0846               	movf	??___fldiv,w
  8683  1FA5  00C2               	movwf	___fldiv@b
  8684  1FA6                     l3768:
  8685  1FA6  3001               	movlw	1
  8686  1FA7  07D0               	addwf	___fldiv@new_exp,f
  8687  1FA8  1803               	skipnc
  8688  1FA9  0AD1               	incf	___fldiv@new_exp+1,f
  8689  1FAA  3000               	movlw	0
  8690  1FAB  07D1               	addwf	___fldiv@new_exp+1,f
  8691  1FAC                     l3770:
  8692  1FAC  0851               	movf	___fldiv@new_exp+1,w
  8693  1FAD  3A80               	xorlw	128
  8694  1FAE  00FF               	movwf	btemp+1
  8695  1FAF  3080               	movlw	128
  8696  1FB0  027F               	subwf	btemp+1,w
  8697  1FB1  1D03               	skipz
  8698  1FB2  2FB5               	goto	u6435
  8699  1FB3  30FF               	movlw	255
  8700  1FB4  0250               	subwf	___fldiv@new_exp,w
  8701  1FB5                     u6435:
  8702  1FB5  1C03               	skipc
  8703  1FB6  2FB8               	goto	u6431
  8704  1FB7  2FB9               	goto	u6430
  8705  1FB8                     u6431:
  8706  1FB8  2FC7               	goto	l3774
  8707  1FB9                     u6430:
  8708  1FB9                     l3772:
  8709  1FB9  30FF               	movlw	255
  8710  1FBA  1283               	bcf	3,5	;RP0=0, select bank0
  8711  1FBB  1303               	bcf	3,6	;RP1=0, select bank0
  8712  1FBC  00D0               	movwf	___fldiv@new_exp
  8713  1FBD  3000               	movlw	0
  8714  1FBE  00D1               	movwf	___fldiv@new_exp+1
  8715  1FBF  3000               	movlw	0
  8716  1FC0  00C5               	movwf	___fldiv@b+3
  8717  1FC1  3000               	movlw	0
  8718  1FC2  00C4               	movwf	___fldiv@b+2
  8719  1FC3  3000               	movlw	0
  8720  1FC4  00C3               	movwf	___fldiv@b+1
  8721  1FC5  3000               	movlw	0
  8722  1FC6  00C2               	movwf	___fldiv@b
  8723  1FC7                     l3774:
  8724  1FC7  1283               	bcf	3,5	;RP0=0, select bank0
  8725  1FC8  1303               	bcf	3,6	;RP1=0, select bank0
  8726  1FC9  0851               	movf	___fldiv@new_exp+1,w
  8727  1FCA  3A80               	xorlw	128
  8728  1FCB  00FF               	movwf	btemp+1
  8729  1FCC  3080               	movlw	128
  8730  1FCD  027F               	subwf	btemp+1,w
  8731  1FCE  1D03               	skipz
  8732  1FCF  2FD2               	goto	u6445
  8733  1FD0  3001               	movlw	1
  8734  1FD1  0250               	subwf	___fldiv@new_exp,w
  8735  1FD2                     u6445:
  8736  1FD2  1803               	skipnc
  8737  1FD3  2FD5               	goto	u6441
  8738  1FD4  2FD6               	goto	u6440
  8739  1FD5                     u6441:
  8740  1FD5  2FE3               	goto	l722
  8741  1FD6                     u6440:
  8742  1FD6                     l3776:
  8743  1FD6  1283               	bcf	3,5	;RP0=0, select bank0
  8744  1FD7  1303               	bcf	3,6	;RP1=0, select bank0
  8745  1FD8  01D0               	clrf	___fldiv@new_exp
  8746  1FD9  01D1               	clrf	___fldiv@new_exp+1
  8747  1FDA                     l3778:
  8748  1FDA  3000               	movlw	0
  8749  1FDB  00C5               	movwf	___fldiv@b+3
  8750  1FDC  3000               	movlw	0
  8751  1FDD  00C4               	movwf	___fldiv@b+2
  8752  1FDE  3000               	movlw	0
  8753  1FDF  00C3               	movwf	___fldiv@b+1
  8754  1FE0  3000               	movlw	0
  8755  1FE1  00C2               	movwf	___fldiv@b
  8756  1FE2                     l3780:
  8757  1FE2  01CF               	clrf	___fldiv@sign
  8758  1FE3                     l722:
  8759  1FE3  1283               	bcf	3,5	;RP0=0, select bank0
  8760  1FE4  1303               	bcf	3,6	;RP1=0, select bank0
  8761  1FE5  0850               	movf	___fldiv@new_exp,w
  8762  1FE6  00C6               	movwf	??___fldiv
  8763  1FE7  0846               	movf	??___fldiv,w
  8764  1FE8  00D6               	movwf	___fldiv@bexp
  8765  1FE9                     l3782:
  8766  1FE9  1C56               	btfss	___fldiv@bexp,0
  8767  1FEA  2FEC               	goto	u6451
  8768  1FEB  2FED               	goto	u6450
  8769  1FEC                     u6451:
  8770  1FEC  2FEF               	goto	l3786
  8771  1FED                     u6450:
  8772  1FED                     l3784:
  8773  1FED  17C4               	bsf	___fldiv@b+2,7
  8774  1FEE  2FF3               	goto	l724
  8775  1FEF                     l3786:
  8776  1FEF  307F               	movlw	127
  8777  1FF0  00C6               	movwf	??___fldiv
  8778  1FF1  0846               	movf	??___fldiv,w
  8779  1FF2  05C4               	andwf	___fldiv@b+2,f
  8780  1FF3                     l724:
  8781  1FF3  0856               	movf	___fldiv@bexp,w
  8782  1FF4  00C6               	movwf	??___fldiv
  8783  1FF5  1003               	clrc
  8784  1FF6  0C46               	rrf	??___fldiv,w
  8785  1FF7  00C7               	movwf	??___fldiv+1
  8786  1FF8  0847               	movf	??___fldiv+1,w
  8787  1FF9  00C5               	movwf	___fldiv@b+3
  8788  1FFA  084F               	movf	___fldiv@sign,w
  8789  1FFB  00C6               	movwf	??___fldiv
  8790  1FFC  0846               	movf	??___fldiv,w
  8791  1FFD  04C5               	iorwf	___fldiv@b+3,f
  8792  1FFE  2E97               	goto	l3694
  8793  1FFF                     l702:
  8794  1FFF  0008               	return
  8795  2000                     __end_of___fldiv:
  8796                           
  8797                           	psect	text24
  8798  1905                     __ptext24:	
  8799 ;; *************** function _Lcd_Write_String *****************
  8800 ;; Defined at:
  8801 ;;		line 105 in file "lcd.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  a               1    wreg     PTR unsigned char 
  8804 ;;		 -> main@buffer1(16), 
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  a               1    8[COMMON] PTR unsigned char 
  8807 ;;		 -> main@buffer1(16), 
  8808 ;;  i               2    6[COMMON] int 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         0       0       0       0       0
  8819 ;;      Locals:         3       0       0       0       0
  8820 ;;      Temps:          1       0       0       0       0
  8821 ;;      Totals:         4       0       0       0       0
  8822 ;;Total ram usage:        4 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; Hardware stack levels required when called: 2
  8825 ;; This function calls:
  8826 ;;		_Lcd_Write_Char
  8827 ;; This function is called by:
  8828 ;;		_main
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832  1905                     _Lcd_Write_String:	
  8833                           ;psect for function _Lcd_Write_String
  8834                           
  8835                           
  8836                           ;incstack = 0
  8837                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8838                           ;Lcd_Write_String@a stored from wreg
  8839  1905  00F8               	movwf	Lcd_Write_String@a
  8840  1906                     l3304:
  8841                           
  8842                           ;lcd.c: 105: void Lcd_Write_String(char *a);lcd.c: 106: {;lcd.c: 107:  int i;;lcd.c: 108
      +                          :  for(i=0;a[i]!='\0';i++)
  8843  1906  01F6               	clrf	Lcd_Write_String@i
  8844  1907  01F7               	clrf	Lcd_Write_String@i+1
  8845  1908  291A               	goto	l3310
  8846  1909                     l3306:
  8847                           
  8848                           ;lcd.c: 109:     Lcd_Write_Char(a[i]);
  8849  1909  0876               	movf	Lcd_Write_String@i,w
  8850  190A  0778               	addwf	Lcd_Write_String@a,w
  8851  190B  00F5               	movwf	??_Lcd_Write_String
  8852  190C  0875               	movf	??_Lcd_Write_String,w
  8853  190D  0084               	movwf	4
  8854  190E  0800               	movf	0,w
  8855  190F  160A  158A  2191  160A  158A  	fcall	_Lcd_Write_Char
  8856  1914                     l3308:
  8857  1914  3001               	movlw	1
  8858  1915  07F6               	addwf	Lcd_Write_String@i,f
  8859  1916  1803               	skipnc
  8860  1917  0AF7               	incf	Lcd_Write_String@i+1,f
  8861  1918  3000               	movlw	0
  8862  1919  07F7               	addwf	Lcd_Write_String@i+1,f
  8863  191A                     l3310:
  8864  191A  0876               	movf	Lcd_Write_String@i,w
  8865  191B  0778               	addwf	Lcd_Write_String@a,w
  8866  191C  00F5               	movwf	??_Lcd_Write_String
  8867  191D  0875               	movf	??_Lcd_Write_String,w
  8868  191E  0084               	movwf	4
  8869  191F  1383               	bcf	3,7	;select IRP bank0
  8870  1920  0800               	movf	0,w
  8871  1921  1D03               	btfss	3,2
  8872  1922  2924               	goto	u5561
  8873  1923  2925               	goto	u5560
  8874  1924                     u5561:
  8875  1924  2909               	goto	l3306
  8876  1925                     u5560:
  8877  1925                     l49:
  8878  1925  0008               	return
  8879  1926                     __end_of_Lcd_Write_String:
  8880                           
  8881                           	psect	text25
  8882  1991                     __ptext25:	
  8883 ;; *************** function _Lcd_Write_Char *****************
  8884 ;; Defined at:
  8885 ;;		line 89 in file "lcd.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  a               1    wreg     unsigned char 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  a               1    4[COMMON] unsigned char 
  8890 ;;  y               1    3[COMMON] unsigned char 
  8891 ;;  temp            1    2[COMMON] unsigned char 
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      void 
  8894 ;; Registers used:
  8895 ;;		wreg, status,2, status,0, pclath, cstack
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8901 ;;      Params:         0       0       0       0       0
  8902 ;;      Locals:         3       0       0       0       0
  8903 ;;      Temps:          1       0       0       0       0
  8904 ;;      Totals:         4       0       0       0       0
  8905 ;;Total ram usage:        4 bytes
  8906 ;; Hardware stack levels used: 1
  8907 ;; Hardware stack levels required when called: 1
  8908 ;; This function calls:
  8909 ;;		_Lcd_Port
  8910 ;; This function is called by:
  8911 ;;		_Lcd_Write_String
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915  1991                     _Lcd_Write_Char:	
  8916                           ;psect for function _Lcd_Write_Char
  8917                           
  8918                           
  8919                           ;incstack = 0
  8920                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8921                           ;Lcd_Write_Char@a stored from wreg
  8922  1991  00F4               	movwf	Lcd_Write_Char@a
  8923  1992                     l2896:
  8924                           
  8925                           ;lcd.c: 89: void Lcd_Write_Char(char a);lcd.c: 90: {;lcd.c: 91:    char temp,y;;lcd.c: 9
      +                          2:    temp = a&0x0F;
  8926  1992  0874               	movf	Lcd_Write_Char@a,w
  8927  1993  390F               	andlw	15
  8928  1994  00F1               	movwf	??_Lcd_Write_Char
  8929  1995  0871               	movf	??_Lcd_Write_Char,w
  8930  1996  00F2               	movwf	Lcd_Write_Char@temp
  8931                           
  8932                           ;lcd.c: 93:    y = a&0xF0;
  8933  1997  0874               	movf	Lcd_Write_Char@a,w
  8934  1998  39F0               	andlw	240
  8935  1999  00F1               	movwf	??_Lcd_Write_Char
  8936  199A  0871               	movf	??_Lcd_Write_Char,w
  8937  199B  00F3               	movwf	Lcd_Write_Char@y
  8938  199C                     l2898:
  8939                           
  8940                           ;lcd.c: 94:    RD2 = 1;
  8941  199C  1283               	bcf	3,5	;RP0=0, select bank0
  8942  199D  1303               	bcf	3,6	;RP1=0, select bank0
  8943  199E  1508               	bsf	8,2	;volatile
  8944  199F                     l2900:
  8945                           
  8946                           ;lcd.c: 95:    Lcd_Port(y>>4);
  8947  199F  0873               	movf	Lcd_Write_Char@y,w
  8948  19A0  00F1               	movwf	??_Lcd_Write_Char
  8949  19A1  3004               	movlw	4
  8950  19A2                     u4465:
  8951  19A2  1003               	clrc
  8952  19A3  0CF1               	rrf	??_Lcd_Write_Char,f
  8953  19A4  3EFF               	addlw	-1
  8954  19A5  1D03               	skipz
  8955  19A6  29A2               	goto	u4465
  8956  19A7  0871               	movf	??_Lcd_Write_Char,w
  8957  19A8  160A  158A  2126  160A  158A  	fcall	_Lcd_Port
  8958  19AD                     l2902:
  8959                           
  8960                           ;lcd.c: 96:    RD3 = 1;
  8961  19AD  1283               	bcf	3,5	;RP0=0, select bank0
  8962  19AE  1303               	bcf	3,6	;RP1=0, select bank0
  8963  19AF  1588               	bsf	8,3	;volatile
  8964  19B0                     l2904:
  8965                           
  8966                           ;lcd.c: 97:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  8967  19B0  300D               	movlw	13
  8968  19B1  00F1               	movwf	??_Lcd_Write_Char
  8969  19B2                     u6497:
  8970  19B2  0BF1               	decfsz	??_Lcd_Write_Char,f
  8971  19B3  29B2               	goto	u6497
  8972  19B4                     l2906:
  8973                           
  8974                           ;lcd.c: 98:    RD3 = 0;
  8975  19B4  1283               	bcf	3,5	;RP0=0, select bank0
  8976  19B5  1303               	bcf	3,6	;RP1=0, select bank0
  8977  19B6  1188               	bcf	8,3	;volatile
  8978  19B7                     l2908:
  8979                           
  8980                           ;lcd.c: 99:    Lcd_Port(temp);
  8981  19B7  0872               	movf	Lcd_Write_Char@temp,w
  8982  19B8  160A  158A  2126  160A  158A  	fcall	_Lcd_Port
  8983  19BD                     l2910:
  8984                           
  8985                           ;lcd.c: 100:    RD3 = 1;
  8986  19BD  1283               	bcf	3,5	;RP0=0, select bank0
  8987  19BE  1303               	bcf	3,6	;RP1=0, select bank0
  8988  19BF  1588               	bsf	8,3	;volatile
  8989  19C0                     l2912:
  8990                           
  8991                           ;lcd.c: 101:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  8992  19C0  300D               	movlw	13
  8993  19C1  00F1               	movwf	??_Lcd_Write_Char
  8994  19C2                     u6507:
  8995  19C2  0BF1               	decfsz	??_Lcd_Write_Char,f
  8996  19C3  29C2               	goto	u6507
  8997  19C4                     l2914:
  8998                           
  8999                           ;lcd.c: 102:    RD3 = 0;
  9000  19C4  1283               	bcf	3,5	;RP0=0, select bank0
  9001  19C5  1303               	bcf	3,6	;RP1=0, select bank0
  9002  19C6  1188               	bcf	8,3	;volatile
  9003  19C7                     l43:
  9004  19C7  0008               	return
  9005  19C8                     __end_of_Lcd_Write_Char:
  9006                           
  9007                           	psect	text26
  9008  1A46                     __ptext26:	
  9009 ;; *************** function _Lcd_Set_Cursor *****************
  9010 ;; Defined at:
  9011 ;;		line 49 in file "lcd.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  a               1    wreg     unsigned char 
  9014 ;;  b               1    4[COMMON] unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  a               1    7[COMMON] unsigned char 
  9017 ;;  temp            1   10[COMMON] unsigned char 
  9018 ;;  y               1    9[COMMON] unsigned char 
  9019 ;;  z               1    8[COMMON] unsigned char 
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		wreg, status,2, status,0, pclath, cstack
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9029 ;;      Params:         1       0       0       0       0
  9030 ;;      Locals:         4       0       0       0       0
  9031 ;;      Temps:          2       0       0       0       0
  9032 ;;      Totals:         7       0       0       0       0
  9033 ;;Total ram usage:        7 bytes
  9034 ;; Hardware stack levels used: 1
  9035 ;; Hardware stack levels required when called: 2
  9036 ;; This function calls:
  9037 ;;		_Lcd_Cmd
  9038 ;; This function is called by:
  9039 ;;		_main
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043  1A46                     _Lcd_Set_Cursor:	
  9044                           ;psect for function _Lcd_Set_Cursor
  9045                           
  9046                           
  9047                           ;incstack = 0
  9048                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9049                           ;Lcd_Set_Cursor@a stored from wreg
  9050  1A46  00F7               	movwf	Lcd_Set_Cursor@a
  9051  1A47                     l3274:
  9052                           
  9053                           ;lcd.c: 49: void Lcd_Set_Cursor(char a, char b);lcd.c: 50: {;lcd.c: 51:  char temp,z,y;;
      +                          lcd.c: 52:  if(a == 1)
  9054  1A47  0377               	decf	Lcd_Set_Cursor@a,w
  9055  1A48  1D03               	btfss	3,2
  9056  1A49  2A4B               	goto	u5521
  9057  1A4A  2A4C               	goto	u5520
  9058  1A4B                     u5521:
  9059  1A4B  2A6F               	goto	l3284
  9060  1A4C                     u5520:
  9061  1A4C                     l3276:
  9062                           
  9063                           ;lcd.c: 53:  {;lcd.c: 54:    temp = 0x80 + b - 1;
  9064  1A4C  0874               	movf	Lcd_Set_Cursor@b,w
  9065  1A4D  3E7F               	addlw	127
  9066  1A4E  00F5               	movwf	??_Lcd_Set_Cursor
  9067  1A4F  0875               	movf	??_Lcd_Set_Cursor,w
  9068  1A50  00FA               	movwf	Lcd_Set_Cursor@temp
  9069                           
  9070                           ;lcd.c: 55:   z = temp>>4;
  9071  1A51  087A               	movf	Lcd_Set_Cursor@temp,w
  9072  1A52  00F5               	movwf	??_Lcd_Set_Cursor
  9073  1A53  3004               	movlw	4
  9074  1A54                     u5535:
  9075  1A54  1003               	clrc
  9076  1A55  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9077  1A56  3EFF               	addlw	-1
  9078  1A57  1D03               	skipz
  9079  1A58  2A54               	goto	u5535
  9080  1A59  0875               	movf	??_Lcd_Set_Cursor,w
  9081  1A5A  00F6               	movwf	??_Lcd_Set_Cursor+1
  9082  1A5B  0876               	movf	??_Lcd_Set_Cursor+1,w
  9083  1A5C  00F8               	movwf	Lcd_Set_Cursor@z
  9084  1A5D                     l3278:
  9085                           
  9086                           ;lcd.c: 56:   y = temp & 0x0F;
  9087  1A5D  087A               	movf	Lcd_Set_Cursor@temp,w
  9088  1A5E  390F               	andlw	15
  9089  1A5F  00F5               	movwf	??_Lcd_Set_Cursor
  9090  1A60  0875               	movf	??_Lcd_Set_Cursor,w
  9091  1A61  00F9               	movwf	Lcd_Set_Cursor@y
  9092  1A62                     l3280:
  9093                           
  9094                           ;lcd.c: 57:   Lcd_Cmd(z);
  9095  1A62  0878               	movf	Lcd_Set_Cursor@z,w
  9096  1A63  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9097  1A68                     l3282:
  9098                           
  9099                           ;lcd.c: 58:   Lcd_Cmd(y);
  9100  1A68  0879               	movf	Lcd_Set_Cursor@y,w
  9101  1A69  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9102                           
  9103                           ;lcd.c: 59:  }
  9104  1A6E  2A97               	goto	l37
  9105  1A6F                     l3284:
  9106  1A6F  3002               	movlw	2
  9107  1A70  0677               	xorwf	Lcd_Set_Cursor@a,w
  9108  1A71  1D03               	btfss	3,2
  9109  1A72  2A74               	goto	u5541
  9110  1A73  2A75               	goto	u5540
  9111  1A74                     u5541:
  9112  1A74  2A97               	goto	l37
  9113  1A75                     u5540:
  9114  1A75                     l3286:
  9115                           
  9116                           ;lcd.c: 61:  {;lcd.c: 62:   temp = 0xC0 + b - 1;
  9117  1A75  0874               	movf	Lcd_Set_Cursor@b,w
  9118  1A76  3EBF               	addlw	191
  9119  1A77  00F5               	movwf	??_Lcd_Set_Cursor
  9120  1A78  0875               	movf	??_Lcd_Set_Cursor,w
  9121  1A79  00FA               	movwf	Lcd_Set_Cursor@temp
  9122                           
  9123                           ;lcd.c: 63:   z = temp>>4;
  9124  1A7A  087A               	movf	Lcd_Set_Cursor@temp,w
  9125  1A7B  00F5               	movwf	??_Lcd_Set_Cursor
  9126  1A7C  3004               	movlw	4
  9127  1A7D                     u5555:
  9128  1A7D  1003               	clrc
  9129  1A7E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9130  1A7F  3EFF               	addlw	-1
  9131  1A80  1D03               	skipz
  9132  1A81  2A7D               	goto	u5555
  9133  1A82  0875               	movf	??_Lcd_Set_Cursor,w
  9134  1A83  00F6               	movwf	??_Lcd_Set_Cursor+1
  9135  1A84  0876               	movf	??_Lcd_Set_Cursor+1,w
  9136  1A85  00F8               	movwf	Lcd_Set_Cursor@z
  9137  1A86                     l3288:
  9138                           
  9139                           ;lcd.c: 64:   y = temp & 0x0F;
  9140  1A86  087A               	movf	Lcd_Set_Cursor@temp,w
  9141  1A87  390F               	andlw	15
  9142  1A88  00F5               	movwf	??_Lcd_Set_Cursor
  9143  1A89  0875               	movf	??_Lcd_Set_Cursor,w
  9144  1A8A  00F9               	movwf	Lcd_Set_Cursor@y
  9145  1A8B                     l3290:
  9146                           
  9147                           ;lcd.c: 65:   Lcd_Cmd(z);
  9148  1A8B  0878               	movf	Lcd_Set_Cursor@z,w
  9149  1A8C  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9150  1A91                     l3292:
  9151                           
  9152                           ;lcd.c: 66:   Lcd_Cmd(y);
  9153  1A91  0879               	movf	Lcd_Set_Cursor@y,w
  9154  1A92  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9155  1A97                     l37:
  9156  1A97  0008               	return
  9157  1A98                     __end_of_Lcd_Set_Cursor:
  9158                           
  9159                           	psect	text27
  9160  1B47                     __ptext27:	
  9161 ;; *************** function _Lcd_Init *****************
  9162 ;; Defined at:
  9163 ;;		line 70 in file "lcd.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0, pclath, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9177 ;;      Params:         0       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0
  9179 ;;      Temps:          2       0       0       0       0
  9180 ;;      Totals:         2       0       0       0       0
  9181 ;;Total ram usage:        2 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; Hardware stack levels required when called: 2
  9184 ;; This function calls:
  9185 ;;		_Lcd_Cmd
  9186 ;;		_Lcd_Port
  9187 ;; This function is called by:
  9188 ;;		_main
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192  1B47                     _Lcd_Init:	
  9193                           ;psect for function _Lcd_Init
  9194                           
  9195  1B47                     l3294:	
  9196                           ;incstack = 0
  9197                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9198                           
  9199                           
  9200                           ;lcd.c: 72:   Lcd_Port(0x00);
  9201  1B47  3000               	movlw	0
  9202  1B48  160A  158A  2126  160A  158A  	fcall	_Lcd_Port
  9203  1B4D                     l3296:
  9204                           
  9205                           ;lcd.c: 73:    _delay((unsigned long)((20)*(4000000/4000.0)));
  9206  1B4D  301A               	movlw	26
  9207  1B4E  00F5               	movwf	??_Lcd_Init+1
  9208  1B4F  30F8               	movlw	248
  9209  1B50  00F4               	movwf	??_Lcd_Init
  9210  1B51                     u6517:
  9211  1B51  0BF4               	decfsz	??_Lcd_Init,f
  9212  1B52  2B51               	goto	u6517
  9213  1B53  0BF5               	decfsz	??_Lcd_Init+1,f
  9214  1B54  2B51               	goto	u6517
  9215  1B55  0000               	nop
  9216  1B56                     l3298:
  9217                           
  9218                           ;lcd.c: 74:   Lcd_Cmd(0x03);
  9219  1B56  3003               	movlw	3
  9220  1B57  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9221                           
  9222                           ;lcd.c: 75:  _delay((unsigned long)((5)*(4000000/4000.0)));
  9223  1B5C  3007               	movlw	7
  9224  1B5D  00F5               	movwf	??_Lcd_Init+1
  9225  1B5E  307D               	movlw	125
  9226  1B5F  00F4               	movwf	??_Lcd_Init
  9227  1B60                     u6527:
  9228  1B60  0BF4               	decfsz	??_Lcd_Init,f
  9229  1B61  2B60               	goto	u6527
  9230  1B62  0BF5               	decfsz	??_Lcd_Init+1,f
  9231  1B63  2B60               	goto	u6527
  9232  1B64                     l3300:
  9233                           
  9234                           ;lcd.c: 76:   Lcd_Cmd(0x03);
  9235  1B64  3003               	movlw	3
  9236  1B65  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9237  1B6A                     l3302:
  9238                           
  9239                           ;lcd.c: 77:  _delay((unsigned long)((11)*(4000000/4000.0)));
  9240  1B6A  300F               	movlw	15
  9241  1B6B  00F5               	movwf	??_Lcd_Init+1
  9242  1B6C  3047               	movlw	71
  9243  1B6D  00F4               	movwf	??_Lcd_Init
  9244  1B6E                     u6537:
  9245  1B6E  0BF4               	decfsz	??_Lcd_Init,f
  9246  1B6F  2B6E               	goto	u6537
  9247  1B70  0BF5               	decfsz	??_Lcd_Init+1,f
  9248  1B71  2B6E               	goto	u6537
  9249  1B72  2B73               	nop2
  9250                           
  9251                           ;lcd.c: 78:   Lcd_Cmd(0x03);
  9252  1B73  3003               	movlw	3
  9253  1B74  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9254                           
  9255                           ;lcd.c: 80:   Lcd_Cmd(0x02);
  9256  1B79  3002               	movlw	2
  9257  1B7A  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9258                           
  9259                           ;lcd.c: 81:   Lcd_Cmd(0x02);
  9260  1B7F  3002               	movlw	2
  9261  1B80  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9262                           
  9263                           ;lcd.c: 82:   Lcd_Cmd(0x08);
  9264  1B85  3008               	movlw	8
  9265  1B86  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9266                           
  9267                           ;lcd.c: 83:   Lcd_Cmd(0x00);
  9268  1B8B  3000               	movlw	0
  9269  1B8C  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9270                           
  9271                           ;lcd.c: 84:   Lcd_Cmd(0x0C);
  9272  1B91  300C               	movlw	12
  9273  1B92  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9274                           
  9275                           ;lcd.c: 85:   Lcd_Cmd(0x00);
  9276  1B97  3000               	movlw	0
  9277  1B98  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9278                           
  9279                           ;lcd.c: 86:   Lcd_Cmd(0x06);
  9280  1B9D  3006               	movlw	6
  9281  1B9E  160A  158A  20EB  160A  158A  	fcall	_Lcd_Cmd
  9282  1BA3                     l40:
  9283  1BA3  0008               	return
  9284  1BA4                     __end_of_Lcd_Init:
  9285                           
  9286                           	psect	text28
  9287  18EB                     __ptext28:	
  9288 ;; *************** function _Lcd_Cmd *****************
  9289 ;; Defined at:
  9290 ;;		line 34 in file "lcd.c"
  9291 ;; Parameters:    Size  Location     Type
  9292 ;;  a               1    wreg     unsigned char 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;  a               1    3[COMMON] unsigned char 
  9295 ;; Return value:  Size  Location     Type
  9296 ;;                  1    wreg      void 
  9297 ;; Registers used:
  9298 ;;		wreg, status,2, status,0, pclath, cstack
  9299 ;; Tracked objects:
  9300 ;;		On entry : 0/0
  9301 ;;		On exit  : 0/0
  9302 ;;		Unchanged: 0/0
  9303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9304 ;;      Params:         0       0       0       0       0
  9305 ;;      Locals:         1       0       0       0       0
  9306 ;;      Temps:          2       0       0       0       0
  9307 ;;      Totals:         3       0       0       0       0
  9308 ;;Total ram usage:        3 bytes
  9309 ;; Hardware stack levels used: 1
  9310 ;; Hardware stack levels required when called: 1
  9311 ;; This function calls:
  9312 ;;		_Lcd_Port
  9313 ;; This function is called by:
  9314 ;;		_Lcd_Set_Cursor
  9315 ;;		_Lcd_Init
  9316 ;;		_Lcd_Clear
  9317 ;;		_Lcd_Shift_Right
  9318 ;;		_Lcd_Shift_Left
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322  18EB                     _Lcd_Cmd:	
  9323                           ;psect for function _Lcd_Cmd
  9324                           
  9325                           
  9326                           ;incstack = 0
  9327                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9328                           ;Lcd_Cmd@a stored from wreg
  9329  18EB  00F3               	movwf	Lcd_Cmd@a
  9330  18EC                     l2886:
  9331                           
  9332                           ;lcd.c: 34: void Lcd_Cmd(char a);lcd.c: 35: {;lcd.c: 36:  RD2 = 0;
  9333  18EC  1283               	bcf	3,5	;RP0=0, select bank0
  9334  18ED  1303               	bcf	3,6	;RP1=0, select bank0
  9335  18EE  1108               	bcf	8,2	;volatile
  9336  18EF                     l2888:
  9337                           
  9338                           ;lcd.c: 37:  Lcd_Port(a);
  9339  18EF  0873               	movf	Lcd_Cmd@a,w
  9340  18F0  160A  158A  2126  160A  158A  	fcall	_Lcd_Port
  9341  18F5                     l2890:
  9342                           
  9343                           ;lcd.c: 38:  RD3 = 1;
  9344  18F5  1283               	bcf	3,5	;RP0=0, select bank0
  9345  18F6  1303               	bcf	3,6	;RP1=0, select bank0
  9346  18F7  1588               	bsf	8,3	;volatile
  9347  18F8                     l2892:
  9348                           
  9349                           ;lcd.c: 39:         _delay((unsigned long)((4)*(4000000/4000.0)));
  9350  18F8  3006               	movlw	6
  9351  18F9  00F2               	movwf	??_Lcd_Cmd+1
  9352  18FA  3030               	movlw	48
  9353  18FB  00F1               	movwf	??_Lcd_Cmd
  9354  18FC                     u6547:
  9355  18FC  0BF1               	decfsz	??_Lcd_Cmd,f
  9356  18FD  28FC               	goto	u6547
  9357  18FE  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9358  18FF  28FC               	goto	u6547
  9359  1900  0000               	nop
  9360  1901                     l2894:
  9361                           
  9362                           ;lcd.c: 40:         RD3 = 0;
  9363  1901  1283               	bcf	3,5	;RP0=0, select bank0
  9364  1902  1303               	bcf	3,6	;RP1=0, select bank0
  9365  1903  1188               	bcf	8,3	;volatile
  9366  1904                     l28:
  9367  1904  0008               	return
  9368  1905                     __end_of_Lcd_Cmd:
  9369                           
  9370                           	psect	text29
  9371  1926                     __ptext29:	
  9372 ;; *************** function _Lcd_Port *****************
  9373 ;; Defined at:
  9374 ;;		line 12 in file "lcd.c"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  a               1    wreg     unsigned char 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  a               1    0[COMMON] unsigned char 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9388 ;;      Params:         0       0       0       0       0
  9389 ;;      Locals:         1       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0
  9391 ;;      Totals:         1       0       0       0       0
  9392 ;;Total ram usage:        1 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_Lcd_Cmd
  9398 ;;		_Lcd_Init
  9399 ;;		_Lcd_Write_Char
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403  1926                     _Lcd_Port:	
  9404                           ;psect for function _Lcd_Port
  9405                           
  9406                           
  9407                           ;incstack = 0
  9408                           ; Regs used in _Lcd_Port: [wreg]
  9409                           ;Lcd_Port@a stored from wreg
  9410  1926  00F0               	movwf	Lcd_Port@a
  9411  1927                     l2412:
  9412                           
  9413                           ;lcd.c: 12: void Lcd_Port(char a);lcd.c: 13: {;lcd.c: 14:  if(a & 1)
  9414  1927  1C70               	btfss	Lcd_Port@a,0
  9415  1928  292A               	goto	u3271
  9416  1929  292B               	goto	u3270
  9417  192A                     u3271:
  9418  192A  292F               	goto	l17
  9419  192B                     u3270:
  9420  192B                     l2414:
  9421                           
  9422                           ;lcd.c: 15:   RD4 = 1;
  9423  192B  1283               	bcf	3,5	;RP0=0, select bank0
  9424  192C  1303               	bcf	3,6	;RP1=0, select bank0
  9425  192D  1608               	bsf	8,4	;volatile
  9426  192E  2932               	goto	l18
  9427  192F                     l17:	
  9428                           ;lcd.c: 16:  else
  9429                           
  9430                           
  9431                           ;lcd.c: 17:   RD4 = 0;
  9432  192F  1283               	bcf	3,5	;RP0=0, select bank0
  9433  1930  1303               	bcf	3,6	;RP1=0, select bank0
  9434  1931  1208               	bcf	8,4	;volatile
  9435  1932                     l18:
  9436                           
  9437                           ;lcd.c: 19:  if(a & 2)
  9438  1932  1CF0               	btfss	Lcd_Port@a,1
  9439  1933  2935               	goto	u3281
  9440  1934  2936               	goto	u3280
  9441  1935                     u3281:
  9442  1935  2938               	goto	l19
  9443  1936                     u3280:
  9444  1936                     l2416:
  9445                           
  9446                           ;lcd.c: 20:   RD5 = 1;
  9447  1936  1688               	bsf	8,5	;volatile
  9448  1937  2939               	goto	l20
  9449  1938                     l19:	
  9450                           ;lcd.c: 21:  else
  9451                           
  9452                           
  9453                           ;lcd.c: 22:   RD5 = 0;
  9454  1938  1288               	bcf	8,5	;volatile
  9455  1939                     l20:
  9456                           
  9457                           ;lcd.c: 24:  if(a & 4)
  9458  1939  1D70               	btfss	Lcd_Port@a,2
  9459  193A  293C               	goto	u3291
  9460  193B  293D               	goto	u3290
  9461  193C                     u3291:
  9462  193C  293F               	goto	l21
  9463  193D                     u3290:
  9464  193D                     l2418:
  9465                           
  9466                           ;lcd.c: 25:   RD6 = 1;
  9467  193D  1708               	bsf	8,6	;volatile
  9468  193E  2940               	goto	l22
  9469  193F                     l21:	
  9470                           ;lcd.c: 26:  else
  9471                           
  9472                           
  9473                           ;lcd.c: 27:   RD6 = 0;
  9474  193F  1308               	bcf	8,6	;volatile
  9475  1940                     l22:
  9476                           
  9477                           ;lcd.c: 29:  if(a & 8)
  9478  1940  1DF0               	btfss	Lcd_Port@a,3
  9479  1941  2943               	goto	u3301
  9480  1942  2944               	goto	u3300
  9481  1943                     u3301:
  9482  1943  2946               	goto	l23
  9483  1944                     u3300:
  9484  1944                     l2420:
  9485                           
  9486                           ;lcd.c: 30:   RD7 = 1;
  9487  1944  1788               	bsf	8,7	;volatile
  9488  1945  2947               	goto	l25
  9489  1946                     l23:	
  9490                           ;lcd.c: 31:  else
  9491                           
  9492                           
  9493                           ;lcd.c: 32:   RD7 = 0;
  9494  1946  1388               	bcf	8,7	;volatile
  9495  1947                     l25:
  9496  1947  0008               	return
  9497  1948                     __end_of_Lcd_Port:
  9498  007E                     btemp	set	126	;btemp
  9499  007E                     wtemp0	set	126
  9500                           
  9501                           	psect	idloc
  9502                           
  9503                           ;Config register IDLOC0 @ 0x2000
  9504                           ;	unspecified, using default values
  9505  2000                     	org	8192
  9506  2000  3FFF               	dw	16383
  9507                           
  9508                           ;Config register IDLOC1 @ 0x2001
  9509                           ;	unspecified, using default values
  9510  2001                     	org	8193
  9511  2001  3FFF               	dw	16383
  9512                           
  9513                           ;Config register IDLOC2 @ 0x2002
  9514                           ;	unspecified, using default values
  9515  2002                     	org	8194
  9516  2002  3FFF               	dw	16383
  9517                           
  9518                           ;Config register IDLOC3 @ 0x2003
  9519                           ;	unspecified, using default values
  9520  2003                     	org	8195
  9521  2003  3FFF               	dw	16383
  9522                           
  9523                           	psect	config
  9524                           
  9525                           ;Config register CONFIG @ 0x2007
  9526                           ;	Oscillator Selection bits
  9527                           ;	FOSC = HS, HS oscillator
  9528                           ;	Watchdog Timer Enable bit
  9529                           ;	WDTE = OFF, WDT disabled
  9530                           ;	Power-up Timer Enable bit
  9531                           ;	PWRTE = OFF, PWRT disabled
  9532                           ;	Brown-out Reset Enable bit
  9533                           ;	BOREN = ON, BOR enabled
  9534                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  9535                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  9536                           ;	Data EEPROM Memory Code Protection bit
  9537                           ;	CPD = OFF, Data EEPROM code protection off
  9538                           ;	Flash Program Memory Write Enable bits
  9539                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  9540                           ;	In-Circuit Debugger Mode bit
  9541                           ;	DEBUG = 0x1, unprogrammed default
  9542                           ;	Flash Program Memory Code Protection bit
  9543                           ;	CP = OFF, Code protection off
  9544  2007                     	org	8199
  9545  2007  3F7A               	dw	16250
  9546                           
  9547                           	psect	text1_split_1
  9548  017A                     u5700:
  9549  017A                     l3414:
  9550  017A  1683               	bsf	3,5	;RP0=1, select bank1
  9551  017B  1303               	bcf	3,6	;RP1=0, select bank1
  9552  017C  0840               	movf	(sprintf@fval+3)^(0+128),w
  9553  017D  00F3               	movwf	___fleq@ff1+3
  9554  017E  083F               	movf	(sprintf@fval+2)^(0+128),w
  9555  017F  00F2               	movwf	___fleq@ff1+2
  9556  0180  083E               	movf	(sprintf@fval+1)^(0+128),w
  9557  0181  00F1               	movwf	___fleq@ff1+1
  9558  0182  083D               	movf	sprintf@fval^(0+128),w
  9559  0183  00F0               	movwf	___fleq@ff1
  9560  0184  3000               	movlw	0
  9561  0185  00F7               	movwf	___fleq@ff2+3
  9562  0186  3000               	movlw	0
  9563  0187  00F6               	movwf	___fleq@ff2+2
  9564  0188  3000               	movlw	0
  9565  0189  00F5               	movwf	___fleq@ff2+1
  9566  018A  3000               	movlw	0
  9567  018B  00F4               	movwf	___fleq@ff2
  9568  018C  120A  118A  2003  120A  118A  	fcall	___fleq
  9569  0191  1803               	btfsc	3,0
  9570  0192  2994               	goto	u5711
  9571  0193  2995               	goto	u5710
  9572  0194                     u5711:
  9573  0194  2A3D               	goto	l3434
  9574  0195                     u5710:
  9575  0195                     l3416:
  9576  0195  1683               	bsf	3,5	;RP0=1, select bank1
  9577  0196  1303               	bcf	3,6	;RP1=0, select bank1
  9578  0197  0840               	movf	(sprintf@fval+3)^(0+128),w
  9579  0198  1283               	bcf	3,5	;RP0=0, select bank0
  9580  0199  1303               	bcf	3,6	;RP1=0, select bank0
  9581  019A  00DB               	movwf	___fltol@f1+3
  9582  019B  1683               	bsf	3,5	;RP0=1, select bank1
  9583  019C  1303               	bcf	3,6	;RP1=0, select bank1
  9584  019D  083F               	movf	(sprintf@fval+2)^(0+128),w
  9585  019E  1283               	bcf	3,5	;RP0=0, select bank0
  9586  019F  1303               	bcf	3,6	;RP1=0, select bank0
  9587  01A0  00DA               	movwf	___fltol@f1+2
  9588  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  9589  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  9590  01A3  083E               	movf	(sprintf@fval+1)^(0+128),w
  9591  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  9592  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  9593  01A6  00D9               	movwf	___fltol@f1+1
  9594  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  9595  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  9596  01A9  083D               	movf	sprintf@fval^(0+128),w
  9597  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  9598  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  9599  01AC  00D8               	movwf	___fltol@f1
  9600  01AD  120A  158A  2006  120A  118A  	fcall	___fltol
  9601  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  9602  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  9603  01B4  085B               	movf	?___fltol+3,w
  9604  01B5  045A               	iorwf	?___fltol+2,w
  9605  01B6  0459               	iorwf	?___fltol+1,w
  9606  01B7  0458               	iorwf	?___fltol,w
  9607  01B8  1D03               	skipz
  9608  01B9  29BB               	goto	u5721
  9609  01BA  29BC               	goto	u5720
  9610  01BB                     u5721:
  9611  01BB  2A3D               	goto	l3434
  9612  01BC                     u5720:
  9613  01BC                     l3418:
  9614  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  9615  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  9616  01BE  0838               	movf	(sprintf@eexp+1)^(0+128),w
  9617  01BF  3A80               	xorlw	128
  9618  01C0  00FF               	movwf	btemp+1
  9619  01C1  3080               	movlw	128
  9620  01C2  027F               	subwf	btemp+1,w
  9621  01C3  1D03               	skipz
  9622  01C4  29C7               	goto	u5735
  9623  01C5  3002               	movlw	2
  9624  01C6  0237               	subwf	sprintf@eexp^(0+128),w
  9625  01C7                     u5735:
  9626  01C7  1C03               	skipc
  9627  01C8  29CA               	goto	u5731
  9628  01C9  29CB               	goto	u5730
  9629  01CA                     u5731:
  9630  01CA  2A3D               	goto	l3434
  9631  01CB                     u5730:
  9632  01CB                     l3420:
  9633                           
  9634                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9635  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  9636  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  9637  01CD  0832               	movf	(sprintf@tmpval+3)^(0+128),w
  9638  01CE  00F3               	movwf	___flge@ff1+3
  9639  01CF  0831               	movf	(sprintf@tmpval+2)^(0+128),w
  9640  01D0  00F2               	movwf	___flge@ff1+2
  9641  01D1  0830               	movf	(sprintf@tmpval+1)^(0+128),w
  9642  01D2  00F1               	movwf	___flge@ff1+1
  9643  01D3  082F               	movf	sprintf@tmpval^(0+128),w
  9644  01D4  00F0               	movwf	___flge@ff1
  9645  01D5  3040               	movlw	64
  9646  01D6  00F7               	movwf	___flge@ff2+3
  9647  01D7  3089               	movlw	137
  9648  01D8  00F6               	movwf	___flge@ff2+2
  9649  01D9  3070               	movlw	112
  9650  01DA  00F5               	movwf	___flge@ff2+1
  9651  01DB  305F               	movlw	95
  9652  01DC  00F4               	movwf	___flge@ff2
  9653  01DD  160A  158A  240A  120A  118A  	fcall	___flge
  9654  01E2  1803               	btfsc	3,0
  9655  01E3  29E5               	goto	u5741
  9656  01E4  29E6               	goto	u5740
  9657  01E5                     u5741:
  9658  01E5  29EF               	goto	l3424
  9659  01E6                     u5740:
  9660  01E6                     l3422:
  9661                           
  9662                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9663  01E6  30F7               	movlw	247
  9664  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  9665  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  9666  01E9  07B7               	addwf	sprintf@eexp^(0+128),f
  9667  01EA  1803               	skipnc
  9668  01EB  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  9669  01EC  30FF               	movlw	255
  9670  01ED  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  9671                           
  9672                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9673  01EE  29F7               	goto	l3426
  9674  01EF                     l3424:
  9675                           
  9676                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9677  01EF  30F8               	movlw	248
  9678  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  9679  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  9680  01F2  07B7               	addwf	sprintf@eexp^(0+128),f
  9681  01F3  1803               	skipnc
  9682  01F4  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  9683  01F5  30FF               	movlw	255
  9684  01F6  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  9685  01F7                     l3426:
  9686                           
  9687                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9688  01F7  0837               	movf	sprintf@eexp^(0+128),w
  9689  01F8  120A  158A  2140  120A  118A  	fcall	_scale
  9690  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  9691  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  9692  01FF  0841               	movf	?_scale+3,w
  9693  0200  1683               	bsf	3,5	;RP0=1, select bank1
  9694  0201  1303               	bcf	3,6	;RP1=0, select bank1
  9695  0202  00B2               	movwf	(sprintf@tmpval+3)^(0+128)
  9696  0203  1283               	bcf	3,5	;RP0=0, select bank0
  9697  0204  1303               	bcf	3,6	;RP1=0, select bank0
  9698  0205  0840               	movf	?_scale+2,w
  9699  0206  1683               	bsf	3,5	;RP0=1, select bank1
  9700  0207  1303               	bcf	3,6	;RP1=0, select bank1
  9701  0208  00B1               	movwf	(sprintf@tmpval+2)^(0+128)
  9702  0209  1283               	bcf	3,5	;RP0=0, select bank0
  9703  020A  1303               	bcf	3,6	;RP1=0, select bank0
  9704  020B  083F               	movf	?_scale+1,w
  9705  020C  1683               	bsf	3,5	;RP0=1, select bank1
  9706  020D  1303               	bcf	3,6	;RP1=0, select bank1
  9707  020E  00B0               	movwf	(sprintf@tmpval+1)^(0+128)
  9708  020F  1283               	bcf	3,5	;RP0=0, select bank0
  9709  0210  1303               	bcf	3,6	;RP1=0, select bank0
  9710  0211  083E               	movf	?_scale,w
  9711  0212  1683               	bsf	3,5	;RP0=1, select bank1
  9712  0213  1303               	bcf	3,6	;RP1=0, select bank1
  9713  0214  00AF               	movwf	sprintf@tmpval^(0+128)
  9714  0215                     l3428:
  9715  0215  0840               	movf	(sprintf@fval+3)^(0+128),w
  9716  0216  00F3               	movwf	__div_to_l_@f1+3
  9717  0217  083F               	movf	(sprintf@fval+2)^(0+128),w
  9718  0218  00F2               	movwf	__div_to_l_@f1+2
  9719  0219  083E               	movf	(sprintf@fval+1)^(0+128),w
  9720  021A  00F1               	movwf	__div_to_l_@f1+1
  9721  021B  083D               	movf	sprintf@fval^(0+128),w
  9722  021C  00F0               	movwf	__div_to_l_@f1
  9723  021D  0832               	movf	(sprintf@tmpval+3)^(0+128),w
  9724  021E  00F7               	movwf	__div_to_l_@f2+3
  9725  021F  0831               	movf	(sprintf@tmpval+2)^(0+128),w
  9726  0220  00F6               	movwf	__div_to_l_@f2+2
  9727  0221  0830               	movf	(sprintf@tmpval+1)^(0+128),w
  9728  0222  00F5               	movwf	__div_to_l_@f2+1
  9729  0223  082F               	movf	sprintf@tmpval^(0+128),w
  9730  0224  00F4               	movwf	__div_to_l_@f2
  9731  0225  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  9732  022A  0873               	movf	?__div_to_l_+3,w
  9733  022B  1683               	bsf	3,5	;RP0=1, select bank1
  9734  022C  1303               	bcf	3,6	;RP1=0, select bank1
  9735  022D  00B6               	movwf	(sprintf@val+3)^(0+128)
  9736  022E  0872               	movf	?__div_to_l_+2,w
  9737  022F  00B5               	movwf	(sprintf@val+2)^(0+128)
  9738  0230  0871               	movf	?__div_to_l_+1,w
  9739  0231  00B4               	movwf	(sprintf@val+1)^(0+128)
  9740  0232  0870               	movf	?__div_to_l_,w
  9741  0233  00B3               	movwf	sprintf@val^(0+128)
  9742  0234                     l3432:
  9743                           
  9744                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9745  0234  3000               	movlw	0
  9746  0235  00C0               	movwf	(sprintf@fval+3)^(0+128)
  9747  0236  3000               	movlw	0
  9748  0237  00BF               	movwf	(sprintf@fval+2)^(0+128)
  9749  0238  3000               	movlw	0
  9750  0239  00BE               	movwf	(sprintf@fval+1)^(0+128)
  9751  023A  3000               	movlw	0
  9752  023B  00BD               	movwf	sprintf@fval^(0+128)
  9753                           
  9754                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9755  023C  2AC1               	goto	l3440
  9756  023D                     l3434:
  9757                           
  9758                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9759  023D  1683               	bsf	3,5	;RP0=1, select bank1
  9760  023E  1303               	bcf	3,6	;RP1=0, select bank1
  9761  023F  0840               	movf	(sprintf@fval+3)^(0+128),w
  9762  0240  1283               	bcf	3,5	;RP0=0, select bank0
  9763  0241  1303               	bcf	3,6	;RP1=0, select bank0
  9764  0242  00DB               	movwf	___fltol@f1+3
  9765  0243  1683               	bsf	3,5	;RP0=1, select bank1
  9766  0244  1303               	bcf	3,6	;RP1=0, select bank1
  9767  0245  083F               	movf	(sprintf@fval+2)^(0+128),w
  9768  0246  1283               	bcf	3,5	;RP0=0, select bank0
  9769  0247  1303               	bcf	3,6	;RP1=0, select bank0
  9770  0248  00DA               	movwf	___fltol@f1+2
  9771  0249  1683               	bsf	3,5	;RP0=1, select bank1
  9772  024A  1303               	bcf	3,6	;RP1=0, select bank1
  9773  024B  083E               	movf	(sprintf@fval+1)^(0+128),w
  9774  024C  1283               	bcf	3,5	;RP0=0, select bank0
  9775  024D  1303               	bcf	3,6	;RP1=0, select bank0
  9776  024E  00D9               	movwf	___fltol@f1+1
  9777  024F  1683               	bsf	3,5	;RP0=1, select bank1
  9778  0250  1303               	bcf	3,6	;RP1=0, select bank1
  9779  0251  083D               	movf	sprintf@fval^(0+128),w
  9780  0252  1283               	bcf	3,5	;RP0=0, select bank0
  9781  0253  1303               	bcf	3,6	;RP1=0, select bank0
  9782  0254  00D8               	movwf	___fltol@f1
  9783  0255  120A  158A  2006  120A  118A  	fcall	___fltol
  9784  025A  1283               	bcf	3,5	;RP0=0, select bank0
  9785  025B  1303               	bcf	3,6	;RP1=0, select bank0
  9786  025C  085B               	movf	?___fltol+3,w
  9787  025D  1683               	bsf	3,5	;RP0=1, select bank1
  9788  025E  1303               	bcf	3,6	;RP1=0, select bank1
  9789  025F  00B6               	movwf	(sprintf@val+3)^(0+128)
  9790  0260  1283               	bcf	3,5	;RP0=0, select bank0
  9791  0261  1303               	bcf	3,6	;RP1=0, select bank0
  9792  0262  085A               	movf	?___fltol+2,w
  9793  0263  1683               	bsf	3,5	;RP0=1, select bank1
  9794  0264  1303               	bcf	3,6	;RP1=0, select bank1
  9795  0265  00B5               	movwf	(sprintf@val+2)^(0+128)
  9796  0266  1283               	bcf	3,5	;RP0=0, select bank0
  9797  0267  1303               	bcf	3,6	;RP1=0, select bank0
  9798  0268  0859               	movf	?___fltol+1,w
  9799  0269  1683               	bsf	3,5	;RP0=1, select bank1
  9800  026A  1303               	bcf	3,6	;RP1=0, select bank1
  9801  026B  00B4               	movwf	(sprintf@val+1)^(0+128)
  9802  026C  1283               	bcf	3,5	;RP0=0, select bank0
  9803  026D  1303               	bcf	3,6	;RP1=0, select bank0
  9804  026E  0858               	movf	?___fltol,w
  9805  026F  1683               	bsf	3,5	;RP0=1, select bank1
  9806  0270  1303               	bcf	3,6	;RP1=0, select bank1
  9807  0271  00B3               	movwf	sprintf@val^(0+128)
  9808  0272                     l3436:
  9809                           
  9810                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9811  0272  0836               	movf	(sprintf@val+3)^(0+128),w
  9812  0273  00F3               	movwf	___xxtofl@val+3
  9813  0274  0835               	movf	(sprintf@val+2)^(0+128),w
  9814  0275  00F2               	movwf	___xxtofl@val+2
  9815  0276  0834               	movf	(sprintf@val+1)^(0+128),w
  9816  0277  00F1               	movwf	___xxtofl@val+1
  9817  0278  0833               	movf	sprintf@val^(0+128),w
  9818  0279  00F0               	movwf	___xxtofl@val
  9819  027A  3000               	movlw	0
  9820  027B  160A  158A  24AC  120A  118A  	fcall	___xxtofl
  9821  0280  0873               	movf	?___xxtofl+3,w
  9822  0281  1283               	bcf	3,5	;RP0=0, select bank0
  9823  0282  1303               	bcf	3,6	;RP1=0, select bank0
  9824  0283  00E9               	movwf	___flsub@a+3
  9825  0284  0872               	movf	?___xxtofl+2,w
  9826  0285  00E8               	movwf	___flsub@a+2
  9827  0286  0871               	movf	?___xxtofl+1,w
  9828  0287  00E7               	movwf	___flsub@a+1
  9829  0288  0870               	movf	?___xxtofl,w
  9830  0289  00E6               	movwf	___flsub@a
  9831  028A  1683               	bsf	3,5	;RP0=1, select bank1
  9832  028B  1303               	bcf	3,6	;RP1=0, select bank1
  9833  028C  0840               	movf	(sprintf@fval+3)^(0+128),w
  9834  028D  1283               	bcf	3,5	;RP0=0, select bank0
  9835  028E  1303               	bcf	3,6	;RP1=0, select bank0
  9836  028F  00ED               	movwf	___flsub@b+3
  9837  0290  1683               	bsf	3,5	;RP0=1, select bank1
  9838  0291  1303               	bcf	3,6	;RP1=0, select bank1
  9839  0292  083F               	movf	(sprintf@fval+2)^(0+128),w
  9840  0293  1283               	bcf	3,5	;RP0=0, select bank0
  9841  0294  1303               	bcf	3,6	;RP1=0, select bank0
  9842  0295  00EC               	movwf	___flsub@b+2
  9843  0296  1683               	bsf	3,5	;RP0=1, select bank1
  9844  0297  1303               	bcf	3,6	;RP1=0, select bank1
  9845  0298  083E               	movf	(sprintf@fval+1)^(0+128),w
  9846  0299  1283               	bcf	3,5	;RP0=0, select bank0
  9847  029A  1303               	bcf	3,6	;RP1=0, select bank0
  9848  029B  00EB               	movwf	___flsub@b+1
  9849  029C  1683               	bsf	3,5	;RP0=1, select bank1
  9850  029D  1303               	bcf	3,6	;RP1=0, select bank1
  9851  029E  083D               	movf	sprintf@fval^(0+128),w
  9852  029F  1283               	bcf	3,5	;RP0=0, select bank0
  9853  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  9854  02A1  00EA               	movwf	___flsub@b
  9855  02A2  160A  158A  2148  120A  118A  	fcall	___flsub
  9856  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  9857  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  9858  02A9  0869               	movf	?___flsub+3,w
  9859  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  9860  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  9861  02AC  00C0               	movwf	(sprintf@fval+3)^(0+128)
  9862  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  9863  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  9864  02AF  0868               	movf	?___flsub+2,w
  9865  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  9866  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  9867  02B2  00BF               	movwf	(sprintf@fval+2)^(0+128)
  9868  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  9869  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  9870  02B5  0867               	movf	?___flsub+1,w
  9871  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  9872  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  9873  02B8  00BE               	movwf	(sprintf@fval+1)^(0+128)
  9874  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  9875  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  9876  02BB  0866               	movf	?___flsub,w
  9877  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  9878  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  9879  02BE  00BD               	movwf	sprintf@fval^(0+128)
  9880  02BF                     l3438:
  9881                           
  9882                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9883  02BF  01B7               	clrf	sprintf@eexp^(0+128)
  9884  02C0  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  9885  02C1                     l3440:
  9886                           
  9887                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9888  02C1  01C4               	clrf	sprintf@c^(0+128)
  9889  02C2  0AC4               	incf	sprintf@c^(0+128),f
  9890  02C3                     l3446:
  9891                           
  9892                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9893  02C3  0844               	movf	sprintf@c^(0+128),w
  9894  02C4  00A5               	movwf	??_sprintf^(0+128)
  9895  02C5  3001               	movlw	1
  9896  02C6                     u5755:
  9897  02C6  1003               	clrc
  9898  02C7  0DA5               	rlf	??_sprintf^(0+128),f
  9899  02C8  3EFF               	addlw	-1
  9900  02C9  1D03               	skipz
  9901  02CA  2AC6               	goto	u5755
  9902  02CB  1003               	clrc
  9903  02CC  0D25               	rlf	??_sprintf^(0+128),w
  9904  02CD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9905  02CE  0084               	movwf	4
  9906  02CF  160A  158A  2000  120A  118A  	fcall	stringdir
  9907  02D4  00A6               	movwf	(??_sprintf+1)^(0+128)
  9908  02D5  160A  158A  2000  120A  118A  	fcall	stringdir
  9909  02DA  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  9910  02DB  160A  158A  2000  120A  118A  	fcall	stringdir
  9911  02E0  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  9912  02E1  160A  158A  2000  120A  118A  	fcall	stringdir
  9913  02E6  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  9914  02E7  0829               	movf	(??_sprintf+4)^(0+128),w
  9915  02E8  0236               	subwf	(sprintf@val+3)^(0+128),w
  9916  02E9  1D03               	skipz
  9917  02EA  2AF5               	goto	u5765
  9918  02EB  0828               	movf	(??_sprintf+3)^(0+128),w
  9919  02EC  0235               	subwf	(sprintf@val+2)^(0+128),w
  9920  02ED  1D03               	skipz
  9921  02EE  2AF5               	goto	u5765
  9922  02EF  0827               	movf	(??_sprintf+2)^(0+128),w
  9923  02F0  0234               	subwf	(sprintf@val+1)^(0+128),w
  9924  02F1  1D03               	skipz
  9925  02F2  2AF5               	goto	u5765
  9926  02F3  0826               	movf	(??_sprintf+1)^(0+128),w
  9927  02F4  0233               	subwf	sprintf@val^(0+128),w
  9928  02F5                     u5765:
  9929  02F5  1803               	skipnc
  9930  02F6  2AF8               	goto	u5761
  9931  02F7  2AF9               	goto	u5760
  9932  02F8                     u5761:
  9933  02F8  2AFA               	goto	l3450
  9934  02F9                     u5760:
  9935  02F9  2B04               	goto	l3452
  9936  02FA                     l3450:
  9937  02FA  3001               	movlw	1
  9938  02FB  00A5               	movwf	??_sprintf^(0+128)
  9939  02FC  0825               	movf	??_sprintf^(0+128),w
  9940  02FD  07C4               	addwf	sprintf@c^(0+128),f
  9941  02FE  300A               	movlw	10
  9942  02FF  0644               	xorwf	sprintf@c^(0+128),w
  9943  0300  1D03               	btfss	3,2
  9944  0301  2B03               	goto	u5771
  9945  0302  2B04               	goto	u5770
  9946  0303                     u5771:
  9947  0303  2AC3               	goto	l3446
  9948  0304                     u5770:
  9949  0304                     l3452:
  9950                           
  9951                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9952  0304  0844               	movf	sprintf@c^(0+128),w
  9953  0305  0741               	addwf	sprintf@prec^(0+128),w
  9954  0306  00A5               	movwf	??_sprintf^(0+128)
  9955  0307  0842               	movf	(sprintf@prec+1)^(0+128),w
  9956  0308  1803               	skipnc
  9957  0309  0A42               	incf	(sprintf@prec+1)^(0+128),w
  9958  030A  00A6               	movwf	(??_sprintf^(0+128)+1)
  9959  030B  0837               	movf	sprintf@eexp^(0+128),w
  9960  030C  0725               	addwf	??_sprintf^(0+128),w
  9961  030D  00A7               	movwf	(??_sprintf+2)^(0+128)
  9962  030E  0838               	movf	(sprintf@eexp+1)^(0+128),w
  9963  030F  1803               	skipnc
  9964  0310  0A38               	incf	(sprintf@eexp+1)^(0+128),w
  9965  0311  0726               	addwf	(??_sprintf+1)^(0+128),w
  9966  0312  00A8               	movwf	(??_sprintf+3)^(0+128)
  9967  0313  0827               	movf	(??_sprintf+2)^(0+128),w
  9968  0314  02BB               	subwf	sprintf@width^(0+128),f
  9969  0315  0828               	movf	(??_sprintf+3)^(0+128),w
  9970  0316  1C03               	skipc
  9971  0317  03BC               	decf	(sprintf@width+1)^(0+128),f
  9972  0318  02BC               	subwf	(sprintf@width+1)^(0+128),f
  9973                           
  9974                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1169:     if(
  9975  0319  0841               	movf	sprintf@prec^(0+128),w
  9976  031A  0442               	iorwf	(sprintf@prec+1)^(0+128),w
  9977  031B  1903               	btfsc	3,2
  9978  031C  2B1E               	goto	u5781
  9979  031D  2B1F               	goto	u5780
  9980  031E                     u5781:
  9981  031E  2B25               	goto	l3456
  9982  031F                     u5780:
  9983  031F                     l3454:
  9984                           
  9985                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9986  031F  30FF               	movlw	255
  9987  0320  07BB               	addwf	sprintf@width^(0+128),f
  9988  0321  1803               	skipnc
  9989  0322  0ABC               	incf	(sprintf@width+1)^(0+128),f
  9990  0323  30FF               	movlw	255
  9991  0324  07BC               	addwf	(sprintf@width+1)^(0+128),f
  9992  0325                     l3456:
  9993                           
  9994                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9995  0325  3003               	movlw	3
  9996  0326  0539               	andwf	sprintf@flag^(0+128),w
  9997  0327  00A5               	movwf	??_sprintf^(0+128)
  9998  0328  3000               	movlw	0
  9999  0329  053A               	andwf	(sprintf@flag+1)^(0+128),w
 10000  032A  00A6               	movwf	(??_sprintf+1)^(0+128)
 10001  032B  0825               	movf	??_sprintf^(0+128),w
 10002  032C  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10003  032D  1903               	btfsc	3,2
 10004  032E  2B30               	goto	u5791
 10005  032F  2B31               	goto	u5790
 10006  0330                     u5791:
 10007  0330  2B37               	goto	l3460
 10008  0331                     u5790:
 10009  0331                     l3458:
 10010                           
 10011                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10012  0331  30FF               	movlw	255
 10013  0332  07BB               	addwf	sprintf@width^(0+128),f
 10014  0333  1803               	skipnc
 10015  0334  0ABC               	incf	(sprintf@width+1)^(0+128),f
 10016  0335  30FF               	movlw	255
 10017  0336  07BC               	addwf	(sprintf@width+1)^(0+128),f
 10018  0337                     l3460:
 10019                           
 10020                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
 10021  0337  1D39               	btfss	sprintf@flag^(0+128),2
 10022  0338  2B3A               	goto	u5801
 10023  0339  2B3B               	goto	u5800
 10024  033A                     u5801:
 10025  033A  2B87               	goto	l3482
 10026  033B                     u5800:
 10027  033B                     l3462:
 10028                           
 10029                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
 10030  033B  3003               	movlw	3
 10031  033C  0539               	andwf	sprintf@flag^(0+128),w
 10032  033D  00A5               	movwf	??_sprintf^(0+128)
 10033  033E  3000               	movlw	0
 10034  033F  053A               	andwf	(sprintf@flag+1)^(0+128),w
 10035  0340  00A6               	movwf	(??_sprintf+1)^(0+128)
 10036  0341  0825               	movf	??_sprintf^(0+128),w
 10037  0342  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10038  0343  1903               	btfsc	3,2
 10039  0344  2B46               	goto	u5811
 10040  0345  2B47               	goto	u5810
 10041  0346                     u5811:
 10042  0346  2B66               	goto	l3474
 10043  0347                     u5810:
 10044  0347                     l3464:
 10045                           
 10046                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
 10047  0347  302D               	movlw	45
 10048  0348  00A5               	movwf	??_sprintf^(0+128)
 10049  0349  0843               	movf	sprintf@sp^(0+128),w
 10050  034A  0084               	movwf	4
 10051  034B  0825               	movf	??_sprintf^(0+128),w
 10052  034C  1383               	bcf	3,7	;select IRP bank0
 10053  034D  0080               	movwf	0
 10054  034E                     l3466:
 10055  034E  3001               	movlw	1
 10056  034F  00A5               	movwf	??_sprintf^(0+128)
 10057  0350  0825               	movf	??_sprintf^(0+128),w
 10058  0351  07C3               	addwf	sprintf@sp^(0+128),f
 10059  0352  2B66               	goto	l3474
 10060  0353                     l3468:
 10061                           
 10062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
 10063  0353  3030               	movlw	48
 10064  0354  1683               	bsf	3,5	;RP0=1, select bank1
 10065  0355  1303               	bcf	3,6	;RP1=0, select bank1
 10066  0356  00A5               	movwf	??_sprintf^(0+128)
 10067  0357  0843               	movf	sprintf@sp^(0+128),w
 10068  0358  0084               	movwf	4
 10069  0359  0825               	movf	??_sprintf^(0+128),w
 10070  035A  1383               	bcf	3,7	;select IRP bank0
 10071  035B  0080               	movwf	0
 10072  035C                     l3470:
 10073  035C  3001               	movlw	1
 10074  035D  00A5               	movwf	??_sprintf^(0+128)
 10075  035E  0825               	movf	??_sprintf^(0+128),w
 10076  035F  07C3               	addwf	sprintf@sp^(0+128),f
 10077  0360                     l3472:
 10078                           
 10079                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
 10080  0360  30FF               	movlw	255
 10081  0361  07BB               	addwf	sprintf@width^(0+128),f
 10082  0362  1803               	skipnc
 10083  0363  0ABC               	incf	(sprintf@width+1)^(0+128),f
 10084  0364  30FF               	movlw	255
 10085  0365  07BC               	addwf	(sprintf@width+1)^(0+128),f
 10086  0366                     l3474:
 10087                           
 10088                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
 10089  0366  083C               	movf	(sprintf@width+1)^(0+128),w
 10090  0367  3A80               	xorlw	128
 10091  0368  00FF               	movwf	btemp+1
 10092  0369  3080               	movlw	128
 10093  036A  027F               	subwf	btemp+1,w
 10094  036B  1D03               	skipz
 10095  036C  2B6F               	goto	u5825
 10096  036D  3001               	movlw	1
 10097  036E  023B               	subwf	sprintf@width^(0+128),w
 10098  036F                     u5825:
 10099  036F  1803               	skipnc
 10100  0370  2B72               	goto	u5821
 10101  0371  2B73               	goto	u5820
 10102  0372                     u5821:
 10103  0372  2B53               	goto	l3468
 10104  0373                     u5820:
 10105  0373  2C34               	goto	l270
 10106  0374                     l3476:
 10107                           
 10108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10109  0374  3020               	movlw	32
 10110  0375  1683               	bsf	3,5	;RP0=1, select bank1
 10111  0376  1303               	bcf	3,6	;RP1=0, select bank1
 10112  0377  00A5               	movwf	??_sprintf^(0+128)
 10113  0378  0843               	movf	sprintf@sp^(0+128),w
 10114  0379  0084               	movwf	4
 10115  037A  0825               	movf	??_sprintf^(0+128),w
 10116  037B  1383               	bcf	3,7	;select IRP bank0
 10117  037C  0080               	movwf	0
 10118  037D                     l3478:
 10119  037D  3001               	movlw	1
 10120  037E  00A5               	movwf	??_sprintf^(0+128)
 10121  037F  0825               	movf	??_sprintf^(0+128),w
 10122  0380  07C3               	addwf	sprintf@sp^(0+128),f
 10123  0381                     l3480:
 10124                           
 10125                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
 10126  0381  30FF               	movlw	255
 10127  0382  07BB               	addwf	sprintf@width^(0+128),f
 10128  0383  1803               	skipnc
 10129  0384  0ABC               	incf	(sprintf@width+1)^(0+128),f
 10130  0385  30FF               	movlw	255
 10131  0386  07BC               	addwf	(sprintf@width+1)^(0+128),f
 10132  0387                     l3482:
 10133                           
 10134                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10135  0387  083C               	movf	(sprintf@width+1)^(0+128),w
 10136  0388  3A80               	xorlw	128
 10137  0389  00FF               	movwf	btemp+1
 10138  038A  3080               	movlw	128
 10139  038B  027F               	subwf	btemp+1,w
 10140  038C  1D03               	skipz
 10141  038D  2B90               	goto	u5835
 10142  038E  3001               	movlw	1
 10143  038F  023B               	subwf	sprintf@width^(0+128),w
 10144  0390                     u5835:
 10145  0390  1803               	skipnc
 10146  0391  2B93               	goto	u5831
 10147  0392  2B94               	goto	u5830
 10148  0393                     u5831:
 10149  0393  2B74               	goto	l3476
 10150  0394                     u5830:
 10151  0394                     l3484:
 10152                           
 10153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10154  0394  3003               	movlw	3
 10155  0395  1683               	bsf	3,5	;RP0=1, select bank1
 10156  0396  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0397  0539               	andwf	sprintf@flag^(0+128),w
 10158  0398  00A5               	movwf	??_sprintf^(0+128)
 10159  0399  3000               	movlw	0
 10160  039A  053A               	andwf	(sprintf@flag+1)^(0+128),w
 10161  039B  00A6               	movwf	(??_sprintf+1)^(0+128)
 10162  039C  0825               	movf	??_sprintf^(0+128),w
 10163  039D  0426               	iorwf	(??_sprintf^(0+128)+1),w
 10164  039E  1903               	btfsc	3,2
 10165  039F  2BA1               	goto	u5841
 10166  03A0  2BA2               	goto	u5840
 10167  03A1                     u5841:
 10168  03A1  2C34               	goto	l270
 10169  03A2                     u5840:
 10170  03A2                     l3486:
 10171                           
 10172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10173  03A2  302D               	movlw	45
 10174  03A3  00A5               	movwf	??_sprintf^(0+128)
 10175  03A4  0843               	movf	sprintf@sp^(0+128),w
 10176  03A5  0084               	movwf	4
 10177  03A6  0825               	movf	??_sprintf^(0+128),w
 10178  03A7  1383               	bcf	3,7	;select IRP bank0
 10179  03A8  0080               	movwf	0
 10180  03A9                     l3488:
 10181  03A9  3001               	movlw	1
 10182  03AA  00A5               	movwf	??_sprintf^(0+128)
 10183  03AB  0825               	movf	??_sprintf^(0+128),w
 10184  03AC  07C3               	addwf	sprintf@sp^(0+128),f
 10185  03AD  2C34               	goto	l270
 10186  03AE                     l3490:
 10187                           
 10188                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10189  03AE  0844               	movf	sprintf@c^(0+128),w
 10190  03AF  00A5               	movwf	??_sprintf^(0+128)
 10191  03B0  3001               	movlw	1
 10192  03B1                     u5855:
 10193  03B1  1003               	clrc
 10194  03B2  0DA5               	rlf	??_sprintf^(0+128),f
 10195  03B3  3EFF               	addlw	-1
 10196  03B4  1D03               	skipz
 10197  03B5  2BB1               	goto	u5855
 10198  03B6  1003               	clrc
 10199  03B7  0D25               	rlf	??_sprintf^(0+128),w
 10200  03B8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10201  03B9  0084               	movwf	4
 10202  03BA  160A  158A  2000  120A  118A  	fcall	stringdir
 10203  03BF  00F0               	movwf	___lldiv@divisor
 10204  03C0  160A  158A  2000  120A  118A  	fcall	stringdir
 10205  03C5  00F1               	movwf	___lldiv@divisor+1
 10206  03C6  160A  158A  2000  120A  118A  	fcall	stringdir
 10207  03CB  00F2               	movwf	___lldiv@divisor+2
 10208  03CC  160A  158A  2000  120A  118A  	fcall	stringdir
 10209  03D1  00F3               	movwf	___lldiv@divisor+3
 10210  03D2  0836               	movf	(sprintf@val+3)^(0+128),w
 10211  03D3  00F7               	movwf	___lldiv@dividend+3
 10212  03D4  0835               	movf	(sprintf@val+2)^(0+128),w
 10213  03D5  00F6               	movwf	___lldiv@dividend+2
 10214  03D6  0834               	movf	(sprintf@val+1)^(0+128),w
 10215  03D7  00F5               	movwf	___lldiv@dividend+1
 10216  03D8  0833               	movf	sprintf@val^(0+128),w
 10217  03D9  00F4               	movwf	___lldiv@dividend
 10218  03DA  160A  158A  23A4  120A  118A  	fcall	___lldiv
 10219  03DF  0873               	movf	?___lldiv+3,w
 10220  03E0  1683               	bsf	3,5	;RP0=1, select bank1
 10221  03E1  1303               	bcf	3,6	;RP1=0, select bank1
 10222  03E2  00B2               	movwf	(sprintf@tmpval+3)^(0+128)
 10223  03E3  0872               	movf	?___lldiv+2,w
 10224  03E4  00B1               	movwf	(sprintf@tmpval+2)^(0+128)
 10225  03E5  0871               	movf	?___lldiv+1,w
 10226  03E6  00B0               	movwf	(sprintf@tmpval+1)^(0+128)
 10227  03E7  0870               	movf	?___lldiv,w
 10228  03E8  00AF               	movwf	sprintf@tmpval^(0+128)
 10229  03E9                     l3492:
 10230                           
 10231                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10232  03E9  3000               	movlw	0
 10233  03EA  1283               	bcf	3,5	;RP0=0, select bank0
 10234  03EB  1303               	bcf	3,6	;RP1=0, select bank0
 10235  03EC  00A3               	movwf	___llmod@divisor+3
 10236  03ED  3000               	movlw	0
 10237  03EE  00A2               	movwf	___llmod@divisor+2
 10238  03EF  3000               	movlw	0
 10239  03F0  00A1               	movwf	___llmod@divisor+1
 10240  03F1  300A               	movlw	10
 10241  03F2  00A0               	movwf	___llmod@divisor
 10242  03F3  1683               	bsf	3,5	;RP0=1, select bank1
 10243  03F4  1303               	bcf	3,6	;RP1=0, select bank1
 10244  03F5  0832               	movf	(sprintf@tmpval+3)^(0+128),w
 10245  03F6  1283               	bcf	3,5	;RP0=0, select bank0
 10246  03F7  1303               	bcf	3,6	;RP1=0, select bank0
 10247  03F8  00A7               	movwf	___llmod@dividend+3
 10248  03F9  1683               	bsf	3,5	;RP0=1, select bank1
 10249  03FA  1303               	bcf	3,6	;RP1=0, select bank1
 10250  03FB  0831               	movf	(sprintf@tmpval+2)^(0+128),w
 10251  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 10252  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 10253  03FE  00A6               	movwf	___llmod@dividend+2
 10254  03FF  1683               	bsf	3,5	;RP0=1, select bank1
 10255  0400  1303               	bcf	3,6	;RP1=0, select bank1
 10256  0401  0830               	movf	(sprintf@tmpval+1)^(0+128),w
 10257  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10258  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10259  0404  00A5               	movwf	___llmod@dividend+1
 10260  0405  1683               	bsf	3,5	;RP0=1, select bank1
 10261  0406  1303               	bcf	3,6	;RP1=0, select bank1
 10262  0407  082F               	movf	sprintf@tmpval^(0+128),w
 10263  0408  1283               	bcf	3,5	;RP0=0, select bank0
 10264  0409  1303               	bcf	3,6	;RP1=0, select bank0
 10265  040A  00A4               	movwf	___llmod@dividend
 10266  040B  160A  158A  2298  120A  118A  	fcall	___llmod
 10267  0410  1283               	bcf	3,5	;RP0=0, select bank0
 10268  0411  1303               	bcf	3,6	;RP1=0, select bank0
 10269  0412  0823               	movf	?___llmod+3,w
 10270  0413  1683               	bsf	3,5	;RP0=1, select bank1
 10271  0414  1303               	bcf	3,6	;RP1=0, select bank1
 10272  0415  00B2               	movwf	(sprintf@tmpval+3)^(0+128)
 10273  0416  1283               	bcf	3,5	;RP0=0, select bank0
 10274  0417  1303               	bcf	3,6	;RP1=0, select bank0
 10275  0418  0822               	movf	?___llmod+2,w
 10276  0419  1683               	bsf	3,5	;RP0=1, select bank1
 10277  041A  1303               	bcf	3,6	;RP1=0, select bank1
 10278  041B  00B1               	movwf	(sprintf@tmpval+2)^(0+128)
 10279  041C  1283               	bcf	3,5	;RP0=0, select bank0
 10280  041D  1303               	bcf	3,6	;RP1=0, select bank0
 10281  041E  0821               	movf	?___llmod+1,w
 10282  041F  1683               	bsf	3,5	;RP0=1, select bank1
 10283  0420  1303               	bcf	3,6	;RP1=0, select bank1
 10284  0421  00B0               	movwf	(sprintf@tmpval+1)^(0+128)
 10285  0422  1283               	bcf	3,5	;RP0=0, select bank0
 10286  0423  1303               	bcf	3,6	;RP1=0, select bank0
 10287  0424  0820               	movf	?___llmod,w
 10288  0425  1683               	bsf	3,5	;RP0=1, select bank1
 10289  0426  1303               	bcf	3,6	;RP1=0, select bank1
 10290  0427  00AF               	movwf	sprintf@tmpval^(0+128)
 10291  0428                     l3494:
 10292                           
 10293                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10294  0428  082F               	movf	sprintf@tmpval^(0+128),w
 10295  0429  3E30               	addlw	48
 10296  042A  00A5               	movwf	??_sprintf^(0+128)
 10297  042B  0843               	movf	sprintf@sp^(0+128),w
 10298  042C  0084               	movwf	4
 10299  042D  0825               	movf	??_sprintf^(0+128),w
 10300  042E  1383               	bcf	3,7	;select IRP bank0
 10301  042F  0080               	movwf	0
 10302  0430  3001               	movlw	1
 10303  0431  00A5               	movwf	??_sprintf^(0+128)
 10304  0432  0825               	movf	??_sprintf^(0+128),w
 10305  0433  07C3               	addwf	sprintf@sp^(0+128),f
 10306  0434                     l270:	
 10307                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1232:    }
 10308                           
 10309                           
 10310                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10311  0434  3001               	movlw	1
 10312  0435  1683               	bsf	3,5	;RP0=1, select bank1
 10313  0436  1303               	bcf	3,6	;RP1=0, select bank1
 10314  0437  02C4               	subwf	sprintf@c^(0+128),f
 10315  0438  0A44               	incf	sprintf@c^(0+128),w
 10316  0439  1D03               	btfss	3,2
 10317  043A  2C3C               	goto	u5861
 10318  043B  2C3D               	goto	u5860
 10319  043C                     u5861:
 10320  043C  2BAE               	goto	l3490
 10321  043D                     u5860:
 10322  043D  2C51               	goto	l3502
 10323  043E                     l3496:
 10324                           
 10325                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10326  043E  3030               	movlw	48
 10327  043F  1683               	bsf	3,5	;RP0=1, select bank1
 10328  0440  1303               	bcf	3,6	;RP1=0, select bank1
 10329  0441  00A5               	movwf	??_sprintf^(0+128)
 10330  0442  0843               	movf	sprintf@sp^(0+128),w
 10331  0443  0084               	movwf	4
 10332  0444  0825               	movf	??_sprintf^(0+128),w
 10333  0445  1383               	bcf	3,7	;select IRP bank0
 10334  0446  0080               	movwf	0
 10335  0447                     l3498:
 10336  0447  3001               	movlw	1
 10337  0448  00A5               	movwf	??_sprintf^(0+128)
 10338  0449  0825               	movf	??_sprintf^(0+128),w
 10339  044A  07C3               	addwf	sprintf@sp^(0+128),f
 10340  044B                     l3500:
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10343  044B  30FF               	movlw	255
 10344  044C  07B7               	addwf	sprintf@eexp^(0+128),f
 10345  044D  1803               	skipnc
 10346  044E  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
 10347  044F  30FF               	movlw	255
 10348  0450  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
 10349  0451                     l3502:
 10350                           
 10351                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10352  0451  0838               	movf	(sprintf@eexp+1)^(0+128),w
 10353  0452  3A80               	xorlw	128
 10354  0453  00FF               	movwf	btemp+1
 10355  0454  3080               	movlw	128
 10356  0455  027F               	subwf	btemp+1,w
 10357  0456  1D03               	skipz
 10358  0457  2C5A               	goto	u5875
 10359  0458  3001               	movlw	1
 10360  0459  0237               	subwf	sprintf@eexp^(0+128),w
 10361  045A                     u5875:
 10362  045A  1803               	skipnc
 10363  045B  2C5D               	goto	u5871
 10364  045C  2C5E               	goto	u5870
 10365  045D                     u5871:
 10366  045D  2C3E               	goto	l3496
 10367  045E                     u5870:
 10368  045E                     l3504:
 10369                           
 10370                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10371  045E  1683               	bsf	3,5	;RP0=1, select bank1
 10372  045F  1303               	bcf	3,6	;RP1=0, select bank1
 10373  0460  0842               	movf	(sprintf@prec+1)^(0+128),w
 10374  0461  3A80               	xorlw	128
 10375  0462  00FF               	movwf	btemp+1
 10376  0463  3080               	movlw	128
 10377  0464  027F               	subwf	btemp+1,w
 10378  0465  1D03               	skipz
 10379  0466  2C69               	goto	u5885
 10380  0467  3009               	movlw	9
 10381  0468  0241               	subwf	sprintf@prec^(0+128),w
 10382  0469                     u5885:
 10383  0469  1C03               	skipc
 10384  046A  2C6C               	goto	u5881
 10385  046B  2C6D               	goto	u5880
 10386  046C                     u5881:
 10387  046C  2C74               	goto	l3508
 10388  046D                     u5880:
 10389  046D                     l3506:
 10390                           
 10391                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10392  046D  3008               	movlw	8
 10393  046E  1683               	bsf	3,5	;RP0=1, select bank1
 10394  046F  1303               	bcf	3,6	;RP1=0, select bank1
 10395  0470  00A5               	movwf	??_sprintf^(0+128)
 10396  0471  0825               	movf	??_sprintf^(0+128),w
 10397  0472  00C4               	movwf	sprintf@c^(0+128)
 10398  0473  2C7A               	goto	l277
 10399  0474                     l3508:
 10400                           
 10401                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10402  0474  1683               	bsf	3,5	;RP0=1, select bank1
 10403  0475  1303               	bcf	3,6	;RP1=0, select bank1
 10404  0476  0841               	movf	sprintf@prec^(0+128),w
 10405  0477  00A5               	movwf	??_sprintf^(0+128)
 10406  0478  0825               	movf	??_sprintf^(0+128),w
 10407  0479  00C4               	movwf	sprintf@c^(0+128)
 10408  047A                     l277:
 10409                           
 10410                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10411  047A  0844               	movf	sprintf@c^(0+128),w
 10412  047B  00A5               	movwf	??_sprintf^(0+128)
 10413  047C  01A6               	clrf	(??_sprintf^(0+128)+1)
 10414  047D  0825               	movf	??_sprintf^(0+128),w
 10415  047E  02C1               	subwf	sprintf@prec^(0+128),f
 10416  047F  0826               	movf	(??_sprintf+1)^(0+128),w
 10417  0480  1C03               	skipc
 10418  0481  03C2               	decf	(sprintf@prec+1)^(0+128),f
 10419  0482  02C2               	subwf	(sprintf@prec+1)^(0+128),f
 10420  0483                     l3510:
 10421                           
 10422                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10423  0483  0844               	movf	sprintf@c^(0+128),w
 10424  0484  1903               	btfsc	3,2
 10425  0485  2C87               	goto	u5891
 10426  0486  2C88               	goto	u5890
 10427  0487                     u5891:
 10428  0487  2C93               	goto	l3516
 10429  0488                     u5890:
 10430  0488                     l3512:
 10431                           
 10432                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10433  0488  302E               	movlw	46
 10434  0489  00A5               	movwf	??_sprintf^(0+128)
 10435  048A  0843               	movf	sprintf@sp^(0+128),w
 10436  048B  0084               	movwf	4
 10437  048C  0825               	movf	??_sprintf^(0+128),w
 10438  048D  1383               	bcf	3,7	;select IRP bank0
 10439  048E  0080               	movwf	0
 10440  048F                     l3514:
 10441  048F  3001               	movlw	1
 10442  0490  00A5               	movwf	??_sprintf^(0+128)
 10443  0491  0825               	movf	??_sprintf^(0+128),w
 10444  0492  07C3               	addwf	sprintf@sp^(0+128),f
 10445  0493                     l3516:
 10446                           
 10447                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10448  0493  0844               	movf	sprintf@c^(0+128),w
 10449  0494  120A  158A  2140  120A  118A  	fcall	_scale
 10450  0499  1283               	bcf	3,5	;RP0=0, select bank0
 10451  049A  1303               	bcf	3,6	;RP1=0, select bank0
 10452  049B  0841               	movf	?_scale+3,w
 10453  049C  1683               	bsf	3,5	;RP0=1, select bank1
 10454  049D  1303               	bcf	3,6	;RP1=0, select bank1
 10455  049E  00AD               	movwf	(_sprintf$844+3)^(0+128)
 10456  049F  1283               	bcf	3,5	;RP0=0, select bank0
 10457  04A0  1303               	bcf	3,6	;RP1=0, select bank0
 10458  04A1  0840               	movf	?_scale+2,w
 10459  04A2  1683               	bsf	3,5	;RP0=1, select bank1
 10460  04A3  1303               	bcf	3,6	;RP1=0, select bank1
 10461  04A4  00AC               	movwf	(_sprintf$844+2)^(0+128)
 10462  04A5  1283               	bcf	3,5	;RP0=0, select bank0
 10463  04A6  1303               	bcf	3,6	;RP1=0, select bank0
 10464  04A7  083F               	movf	?_scale+1,w
 10465  04A8  1683               	bsf	3,5	;RP0=1, select bank1
 10466  04A9  1303               	bcf	3,6	;RP1=0, select bank1
 10467  04AA  00AB               	movwf	(_sprintf$844+1)^(0+128)
 10468  04AB  1283               	bcf	3,5	;RP0=0, select bank0
 10469  04AC  1303               	bcf	3,6	;RP1=0, select bank0
 10470  04AD  083E               	movf	?_scale,w
 10471  04AE  1683               	bsf	3,5	;RP0=1, select bank1
 10472  04AF  1303               	bcf	3,6	;RP1=0, select bank1
 10473  04B0  00AA               	movwf	_sprintf$844^(0+128)
 10474  04B1                     l3518:
 10475                           
 10476                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10477  04B1  082D               	movf	(_sprintf$844+3)^(0+128),w
 10478  04B2  1283               	bcf	3,5	;RP0=0, select bank0
 10479  04B3  1303               	bcf	3,6	;RP1=0, select bank0
 10480  04B4  00AB               	movwf	___flmul@a+3
 10481  04B5  1683               	bsf	3,5	;RP0=1, select bank1
 10482  04B6  1303               	bcf	3,6	;RP1=0, select bank1
 10483  04B7  082C               	movf	(_sprintf$844+2)^(0+128),w
 10484  04B8  1283               	bcf	3,5	;RP0=0, select bank0
 10485  04B9  1303               	bcf	3,6	;RP1=0, select bank0
 10486  04BA  00AA               	movwf	___flmul@a+2
 10487  04BB  1683               	bsf	3,5	;RP0=1, select bank1
 10488  04BC  1303               	bcf	3,6	;RP1=0, select bank1
 10489  04BD  082B               	movf	(_sprintf$844+1)^(0+128),w
 10490  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 10491  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 10492  04C0  00A9               	movwf	___flmul@a+1
 10493  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10494  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10495  04C3  082A               	movf	_sprintf$844^(0+128),w
 10496  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 10497  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 10498  04C6  00A8               	movwf	___flmul@a
 10499  04C7  1683               	bsf	3,5	;RP0=1, select bank1
 10500  04C8  1303               	bcf	3,6	;RP1=0, select bank1
 10501  04C9  0840               	movf	(sprintf@fval+3)^(0+128),w
 10502  04CA  1283               	bcf	3,5	;RP0=0, select bank0
 10503  04CB  1303               	bcf	3,6	;RP1=0, select bank0
 10504  04CC  00A7               	movwf	___flmul@b+3
 10505  04CD  1683               	bsf	3,5	;RP0=1, select bank1
 10506  04CE  1303               	bcf	3,6	;RP1=0, select bank1
 10507  04CF  083F               	movf	(sprintf@fval+2)^(0+128),w
 10508  04D0  1283               	bcf	3,5	;RP0=0, select bank0
 10509  04D1  1303               	bcf	3,6	;RP1=0, select bank0
 10510  04D2  00A6               	movwf	___flmul@b+2
 10511  04D3  1683               	bsf	3,5	;RP0=1, select bank1
 10512  04D4  1303               	bcf	3,6	;RP1=0, select bank1
 10513  04D5  083E               	movf	(sprintf@fval+1)^(0+128),w
 10514  04D6  1283               	bcf	3,5	;RP0=0, select bank0
 10515  04D7  1303               	bcf	3,6	;RP1=0, select bank0
 10516  04D8  00A5               	movwf	___flmul@b+1
 10517  04D9  1683               	bsf	3,5	;RP0=1, select bank1
 10518  04DA  1303               	bcf	3,6	;RP1=0, select bank1
 10519  04DB  083D               	movf	sprintf@fval^(0+128),w
 10520  04DC  1283               	bcf	3,5	;RP0=0, select bank0
 10521  04DD  1303               	bcf	3,6	;RP1=0, select bank0
 10522  04DE  00A4               	movwf	___flmul@b
 10523  04DF  120A  158A  249F  120A  118A  	fcall	___flmul
 10524  04E4  1283               	bcf	3,5	;RP0=0, select bank0
 10525  04E5  1303               	bcf	3,6	;RP1=0, select bank0
 10526  04E6  0827               	movf	?___flmul+3,w
 10527  04E7  00DB               	movwf	___fltol@f1+3
 10528  04E8  0826               	movf	?___flmul+2,w
 10529  04E9  00DA               	movwf	___fltol@f1+2
 10530  04EA  0825               	movf	?___flmul+1,w
 10531  04EB  00D9               	movwf	___fltol@f1+1
 10532  04EC  0824               	movf	?___flmul,w
 10533  04ED  00D8               	movwf	___fltol@f1
 10534  04EE  120A  158A  2006  120A  118A  	fcall	___fltol
 10535  04F3  1283               	bcf	3,5	;RP0=0, select bank0
 10536  04F4  1303               	bcf	3,6	;RP1=0, select bank0
 10537  04F5  085B               	movf	?___fltol+3,w
 10538  04F6  1683               	bsf	3,5	;RP0=1, select bank1
 10539  04F7  1303               	bcf	3,6	;RP1=0, select bank1
 10540  04F8  00B6               	movwf	(sprintf@val+3)^(0+128)
 10541  04F9  1283               	bcf	3,5	;RP0=0, select bank0
 10542  04FA  1303               	bcf	3,6	;RP1=0, select bank0
 10543  04FB  085A               	movf	?___fltol+2,w
 10544  04FC  1683               	bsf	3,5	;RP0=1, select bank1
 10545  04FD  1303               	bcf	3,6	;RP1=0, select bank1
 10546  04FE  00B5               	movwf	(sprintf@val+2)^(0+128)
 10547  04FF  1283               	bcf	3,5	;RP0=0, select bank0
 10548  0500  1303               	bcf	3,6	;RP1=0, select bank0
 10549  0501  0859               	movf	?___fltol+1,w
 10550  0502  1683               	bsf	3,5	;RP0=1, select bank1
 10551  0503  1303               	bcf	3,6	;RP1=0, select bank1
 10552  0504  00B4               	movwf	(sprintf@val+1)^(0+128)
 10553  0505  1283               	bcf	3,5	;RP0=0, select bank0
 10554  0506  1303               	bcf	3,6	;RP1=0, select bank0
 10555  0507  0858               	movf	?___fltol,w
 10556  0508  1683               	bsf	3,5	;RP0=1, select bank1
 10557  0509  1303               	bcf	3,6	;RP1=0, select bank1
 10558  050A  00B3               	movwf	sprintf@val^(0+128)
 10559                           
 10560                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10561  050B  2DED               	goto	l3528
 10562  050C                     l3520:
 10563                           
 10564                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10565  050C  0844               	movf	sprintf@c^(0+128),w
 10566  050D  00A5               	movwf	??_sprintf^(0+128)
 10567  050E  3001               	movlw	1
 10568  050F                     u5905:
 10569  050F  1003               	clrc
 10570  0510  0DA5               	rlf	??_sprintf^(0+128),f
 10571  0511  3EFF               	addlw	-1
 10572  0512  1D03               	skipz
 10573  0513  2D0F               	goto	u5905
 10574  0514  1003               	clrc
 10575  0515  0D25               	rlf	??_sprintf^(0+128),w
 10576  0516  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10577  0517  0084               	movwf	4
 10578  0518  160A  158A  2000  120A  118A  	fcall	stringdir
 10579  051D  00F0               	movwf	___lldiv@divisor
 10580  051E  160A  158A  2000  120A  118A  	fcall	stringdir
 10581  0523  00F1               	movwf	___lldiv@divisor+1
 10582  0524  160A  158A  2000  120A  118A  	fcall	stringdir
 10583  0529  00F2               	movwf	___lldiv@divisor+2
 10584  052A  160A  158A  2000  120A  118A  	fcall	stringdir
 10585  052F  00F3               	movwf	___lldiv@divisor+3
 10586  0530  0836               	movf	(sprintf@val+3)^(0+128),w
 10587  0531  00F7               	movwf	___lldiv@dividend+3
 10588  0532  0835               	movf	(sprintf@val+2)^(0+128),w
 10589  0533  00F6               	movwf	___lldiv@dividend+2
 10590  0534  0834               	movf	(sprintf@val+1)^(0+128),w
 10591  0535  00F5               	movwf	___lldiv@dividend+1
 10592  0536  0833               	movf	sprintf@val^(0+128),w
 10593  0537  00F4               	movwf	___lldiv@dividend
 10594  0538  160A  158A  23A4  120A  118A  	fcall	___lldiv
 10595  053D  0873               	movf	?___lldiv+3,w
 10596  053E  1683               	bsf	3,5	;RP0=1, select bank1
 10597  053F  1303               	bcf	3,6	;RP1=0, select bank1
 10598  0540  00B2               	movwf	(sprintf@tmpval+3)^(0+128)
 10599  0541  0872               	movf	?___lldiv+2,w
 10600  0542  00B1               	movwf	(sprintf@tmpval+2)^(0+128)
 10601  0543  0871               	movf	?___lldiv+1,w
 10602  0544  00B0               	movwf	(sprintf@tmpval+1)^(0+128)
 10603  0545  0870               	movf	?___lldiv,w
 10604  0546  00AF               	movwf	sprintf@tmpval^(0+128)
 10605  0547                     l3522:
 10606                           
 10607                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10608  0547  3000               	movlw	0
 10609  0548  1283               	bcf	3,5	;RP0=0, select bank0
 10610  0549  1303               	bcf	3,6	;RP1=0, select bank0
 10611  054A  00A3               	movwf	___llmod@divisor+3
 10612  054B  3000               	movlw	0
 10613  054C  00A2               	movwf	___llmod@divisor+2
 10614  054D  3000               	movlw	0
 10615  054E  00A1               	movwf	___llmod@divisor+1
 10616  054F  300A               	movlw	10
 10617  0550  00A0               	movwf	___llmod@divisor
 10618  0551  1683               	bsf	3,5	;RP0=1, select bank1
 10619  0552  1303               	bcf	3,6	;RP1=0, select bank1
 10620  0553  0832               	movf	(sprintf@tmpval+3)^(0+128),w
 10621  0554  1283               	bcf	3,5	;RP0=0, select bank0
 10622  0555  1303               	bcf	3,6	;RP1=0, select bank0
 10623  0556  00A7               	movwf	___llmod@dividend+3
 10624  0557  1683               	bsf	3,5	;RP0=1, select bank1
 10625  0558  1303               	bcf	3,6	;RP1=0, select bank1
 10626  0559  0831               	movf	(sprintf@tmpval+2)^(0+128),w
 10627  055A  1283               	bcf	3,5	;RP0=0, select bank0
 10628  055B  1303               	bcf	3,6	;RP1=0, select bank0
 10629  055C  00A6               	movwf	___llmod@dividend+2
 10630  055D  1683               	bsf	3,5	;RP0=1, select bank1
 10631  055E  1303               	bcf	3,6	;RP1=0, select bank1
 10632  055F  0830               	movf	(sprintf@tmpval+1)^(0+128),w
 10633  0560  1283               	bcf	3,5	;RP0=0, select bank0
 10634  0561  1303               	bcf	3,6	;RP1=0, select bank0
 10635  0562  00A5               	movwf	___llmod@dividend+1
 10636  0563  1683               	bsf	3,5	;RP0=1, select bank1
 10637  0564  1303               	bcf	3,6	;RP1=0, select bank1
 10638  0565  082F               	movf	sprintf@tmpval^(0+128),w
 10639  0566  1283               	bcf	3,5	;RP0=0, select bank0
 10640  0567  1303               	bcf	3,6	;RP1=0, select bank0
 10641  0568  00A4               	movwf	___llmod@dividend
 10642  0569  160A  158A  2298  120A  118A  	fcall	___llmod
 10643  056E  1283               	bcf	3,5	;RP0=0, select bank0
 10644  056F  1303               	bcf	3,6	;RP1=0, select bank0
 10645  0570  0823               	movf	?___llmod+3,w
 10646  0571  1683               	bsf	3,5	;RP0=1, select bank1
 10647  0572  1303               	bcf	3,6	;RP1=0, select bank1
 10648  0573  00B2               	movwf	(sprintf@tmpval+3)^(0+128)
 10649  0574  1283               	bcf	3,5	;RP0=0, select bank0
 10650  0575  1303               	bcf	3,6	;RP1=0, select bank0
 10651  0576  0822               	movf	?___llmod+2,w
 10652  0577  1683               	bsf	3,5	;RP0=1, select bank1
 10653  0578  1303               	bcf	3,6	;RP1=0, select bank1
 10654  0579  00B1               	movwf	(sprintf@tmpval+2)^(0+128)
 10655  057A  1283               	bcf	3,5	;RP0=0, select bank0
 10656  057B  1303               	bcf	3,6	;RP1=0, select bank0
 10657  057C  0821               	movf	?___llmod+1,w
 10658  057D  1683               	bsf	3,5	;RP0=1, select bank1
 10659  057E  1303               	bcf	3,6	;RP1=0, select bank1
 10660  057F  00B0               	movwf	(sprintf@tmpval+1)^(0+128)
 10661  0580  1283               	bcf	3,5	;RP0=0, select bank0
 10662  0581  1303               	bcf	3,6	;RP1=0, select bank0
 10663  0582  0820               	movf	?___llmod,w
 10664  0583  1683               	bsf	3,5	;RP0=1, select bank1
 10665  0584  1303               	bcf	3,6	;RP1=0, select bank1
 10666  0585  00AF               	movwf	sprintf@tmpval^(0+128)
 10667  0586                     l3524:
 10668                           
 10669                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10670  0586  082F               	movf	sprintf@tmpval^(0+128),w
 10671  0587  3E30               	addlw	48
 10672  0588  00A5               	movwf	??_sprintf^(0+128)
 10673  0589  0843               	movf	sprintf@sp^(0+128),w
 10674  058A  0084               	movwf	4
 10675  058B  0825               	movf	??_sprintf^(0+128),w
 10676  058C  1383               	bcf	3,7	;select IRP bank0
 10677  058D  0080               	movwf	0
 10678  058E  3001               	movlw	1
 10679  058F  00A5               	movwf	??_sprintf^(0+128)
 10680  0590  0825               	movf	??_sprintf^(0+128),w
 10681  0591  07C3               	addwf	sprintf@sp^(0+128),f
 10682  0592                     l3526:
 10683                           
 10684                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10685  0592  0844               	movf	sprintf@c^(0+128),w
 10686  0593  00A5               	movwf	??_sprintf^(0+128)
 10687  0594  3001               	movlw	1
 10688  0595                     u5915:
 10689  0595  1003               	clrc
 10690  0596  0DA5               	rlf	??_sprintf^(0+128),f
 10691  0597  3EFF               	addlw	-1
 10692  0598  1D03               	skipz
 10693  0599  2D95               	goto	u5915
 10694  059A  1003               	clrc
 10695  059B  0D25               	rlf	??_sprintf^(0+128),w
 10696  059C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10697  059D  0084               	movwf	4
 10698  059E  160A  158A  2000  120A  118A  	fcall	stringdir
 10699  05A3  1283               	bcf	3,5	;RP0=0, select bank0
 10700  05A4  1303               	bcf	3,6	;RP1=0, select bank0
 10701  05A5  00A0               	movwf	___llmod@divisor
 10702  05A6  160A  158A  2000  120A  118A  	fcall	stringdir
 10703  05AB  00A1               	movwf	___llmod@divisor+1
 10704  05AC  160A  158A  2000  120A  118A  	fcall	stringdir
 10705  05B1  00A2               	movwf	___llmod@divisor+2
 10706  05B2  160A  158A  2000  120A  118A  	fcall	stringdir
 10707  05B7  00A3               	movwf	___llmod@divisor+3
 10708  05B8  1683               	bsf	3,5	;RP0=1, select bank1
 10709  05B9  1303               	bcf	3,6	;RP1=0, select bank1
 10710  05BA  0836               	movf	(sprintf@val+3)^(0+128),w
 10711  05BB  1283               	bcf	3,5	;RP0=0, select bank0
 10712  05BC  1303               	bcf	3,6	;RP1=0, select bank0
 10713  05BD  00A7               	movwf	___llmod@dividend+3
 10714  05BE  1683               	bsf	3,5	;RP0=1, select bank1
 10715  05BF  1303               	bcf	3,6	;RP1=0, select bank1
 10716  05C0  0835               	movf	(sprintf@val+2)^(0+128),w
 10717  05C1  1283               	bcf	3,5	;RP0=0, select bank0
 10718  05C2  1303               	bcf	3,6	;RP1=0, select bank0
 10719  05C3  00A6               	movwf	___llmod@dividend+2
 10720  05C4  1683               	bsf	3,5	;RP0=1, select bank1
 10721  05C5  1303               	bcf	3,6	;RP1=0, select bank1
 10722  05C6  0834               	movf	(sprintf@val+1)^(0+128),w
 10723  05C7  1283               	bcf	3,5	;RP0=0, select bank0
 10724  05C8  1303               	bcf	3,6	;RP1=0, select bank0
 10725  05C9  00A5               	movwf	___llmod@dividend+1
 10726  05CA  1683               	bsf	3,5	;RP0=1, select bank1
 10727  05CB  1303               	bcf	3,6	;RP1=0, select bank1
 10728  05CC  0833               	movf	sprintf@val^(0+128),w
 10729  05CD  1283               	bcf	3,5	;RP0=0, select bank0
 10730  05CE  1303               	bcf	3,6	;RP1=0, select bank0
 10731  05CF  00A4               	movwf	___llmod@dividend
 10732  05D0  160A  158A  2298  120A  118A  	fcall	___llmod
 10733  05D5  1283               	bcf	3,5	;RP0=0, select bank0
 10734  05D6  1303               	bcf	3,6	;RP1=0, select bank0
 10735  05D7  0823               	movf	?___llmod+3,w
 10736  05D8  1683               	bsf	3,5	;RP0=1, select bank1
 10737  05D9  1303               	bcf	3,6	;RP1=0, select bank1
 10738  05DA  00B6               	movwf	(sprintf@val+3)^(0+128)
 10739  05DB  1283               	bcf	3,5	;RP0=0, select bank0
 10740  05DC  1303               	bcf	3,6	;RP1=0, select bank0
 10741  05DD  0822               	movf	?___llmod+2,w
 10742  05DE  1683               	bsf	3,5	;RP0=1, select bank1
 10743  05DF  1303               	bcf	3,6	;RP1=0, select bank1
 10744  05E0  00B5               	movwf	(sprintf@val+2)^(0+128)
 10745  05E1  1283               	bcf	3,5	;RP0=0, select bank0
 10746  05E2  1303               	bcf	3,6	;RP1=0, select bank0
 10747  05E3  0821               	movf	?___llmod+1,w
 10748  05E4  1683               	bsf	3,5	;RP0=1, select bank1
 10749  05E5  1303               	bcf	3,6	;RP1=0, select bank1
 10750  05E6  00B4               	movwf	(sprintf@val+1)^(0+128)
 10751  05E7  1283               	bcf	3,5	;RP0=0, select bank0
 10752  05E8  1303               	bcf	3,6	;RP1=0, select bank0
 10753  05E9  0820               	movf	?___llmod,w
 10754  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 10755  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 10756  05EC  00B3               	movwf	sprintf@val^(0+128)
 10757  05ED                     l3528:
 10758                           
 10759                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10760  05ED  3001               	movlw	1
 10761  05EE  02C4               	subwf	sprintf@c^(0+128),f
 10762  05EF  0A44               	incf	sprintf@c^(0+128),w
 10763  05F0  1D03               	btfss	3,2
 10764  05F1  2DF3               	goto	u5921
 10765  05F2  2DF4               	goto	u5920
 10766  05F3                     u5921:
 10767  05F3  2D0C               	goto	l3520
 10768  05F4                     u5920:
 10769  05F4  2E06               	goto	l3536
 10770  05F5                     l3530:
 10771                           
 10772                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10773  05F5  3030               	movlw	48
 10774  05F6  00A5               	movwf	??_sprintf^(0+128)
 10775  05F7  0843               	movf	sprintf@sp^(0+128),w
 10776  05F8  0084               	movwf	4
 10777  05F9  0825               	movf	??_sprintf^(0+128),w
 10778  05FA  1383               	bcf	3,7	;select IRP bank0
 10779  05FB  0080               	movwf	0
 10780  05FC                     l3532:
 10781  05FC  3001               	movlw	1
 10782  05FD  00A5               	movwf	??_sprintf^(0+128)
 10783  05FE  0825               	movf	??_sprintf^(0+128),w
 10784  05FF  07C3               	addwf	sprintf@sp^(0+128),f
 10785  0600                     l3534:
 10786                           
 10787                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10788  0600  30FF               	movlw	255
 10789  0601  07C1               	addwf	sprintf@prec^(0+128),f
 10790  0602  1803               	skipnc
 10791  0603  0AC2               	incf	(sprintf@prec+1)^(0+128),f
 10792  0604  30FF               	movlw	255
 10793  0605  07C2               	addwf	(sprintf@prec+1)^(0+128),f
 10794  0606                     l3536:
 10795                           
 10796                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10797  0606  0841               	movf	sprintf@prec^(0+128),w
 10798  0607  0442               	iorwf	(sprintf@prec+1)^(0+128),w
 10799  0608  1D03               	btfss	3,2
 10800  0609  2E0B               	goto	u5931
 10801  060A  2E0C               	goto	u5930
 10802  060B                     u5931:
 10803  060B  2DF5               	goto	l3530
 10804  060C                     u5930:
 10805  060C  2FE3               	goto	l3632
 10806  060D                     l3538:
 10807                           
 10808                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10809  060D  082E               	movf	sprintf@ap^(0+128),w
 10810  060E  0084               	movwf	4
 10811  060F  1383               	bcf	3,7	;select IRP bank0
 10812  0610  0800               	movf	0,w
 10813  0611  00A5               	movwf	??_sprintf^(0+128)
 10814  0612  0A84               	incf	4,f
 10815  0613  0800               	movf	0,w
 10816  0614  00A6               	movwf	(??_sprintf^(0+128)+1)
 10817  0615  0825               	movf	??_sprintf^(0+128),w
 10818  0616  00B3               	movwf	sprintf@val^(0+128)
 10819  0617  0826               	movf	(??_sprintf+1)^(0+128),w
 10820  0618  00B4               	movwf	(sprintf@val+1)^(0+128)
 10821  0619  3000               	movlw	0
 10822  061A  1BB4               	btfsc	(sprintf@val+1)^(0+128),7
 10823  061B  30FF               	movlw	255
 10824  061C  00B5               	movwf	(sprintf@val+2)^(0+128)
 10825  061D  00B6               	movwf	(sprintf@val+3)^(0+128)
 10826  061E                     l3540:
 10827  061E  3002               	movlw	2
 10828  061F  00A5               	movwf	??_sprintf^(0+128)
 10829  0620  0825               	movf	??_sprintf^(0+128),w
 10830  0621  07AE               	addwf	sprintf@ap^(0+128),f
 10831  0622                     l3542:
 10832                           
 10833                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10834  0622  1FB6               	btfss	(sprintf@val+3)^(0+128),7
 10835  0623  2E25               	goto	u5941
 10836  0624  2E26               	goto	u5940
 10837  0625                     u5941:
 10838  0625  2E35               	goto	l3548
 10839  0626                     u5940:
 10840  0626                     l3544:
 10841                           
 10842                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10843  0626  3003               	movlw	3
 10844  0627  04B9               	iorwf	sprintf@flag^(0+128),f
 10845  0628  3000               	movlw	0
 10846  0629  04BA               	iorwf	(sprintf@flag+1)^(0+128),f
 10847  062A                     l3546:
 10848                           
 10849                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10850  062A  09B3               	comf	sprintf@val^(0+128),f
 10851  062B  09B4               	comf	(sprintf@val+1)^(0+128),f
 10852  062C  09B5               	comf	(sprintf@val+2)^(0+128),f
 10853  062D  09B6               	comf	(sprintf@val+3)^(0+128),f
 10854  062E  0AB3               	incf	sprintf@val^(0+128),f
 10855  062F  1903               	skipnz
 10856  0630  0AB4               	incf	(sprintf@val+1)^(0+128),f
 10857  0631  1903               	skipnz
 10858  0632  0AB5               	incf	(sprintf@val+2)^(0+128),f
 10859  0633  1903               	skipnz
 10860  0634  0AB6               	incf	(sprintf@val+3)^(0+128),f
 10861  0635                     l3548:
 10862                           
 10863                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10864  0635  0841               	movf	sprintf@prec^(0+128),w
 10865  0636  0442               	iorwf	(sprintf@prec+1)^(0+128),w
 10866  0637  1D03               	btfss	3,2
 10867  0638  2E3A               	goto	u5951
 10868  0639  2E3B               	goto	u5950
 10869  063A                     u5951:
 10870  063A  2E49               	goto	l3554
 10871  063B                     u5950:
 10872  063B                     l3550:
 10873  063B  0836               	movf	(sprintf@val+3)^(0+128),w
 10874  063C  0435               	iorwf	(sprintf@val+2)^(0+128),w
 10875  063D  0434               	iorwf	(sprintf@val+1)^(0+128),w
 10876  063E  0433               	iorwf	sprintf@val^(0+128),w
 10877  063F  1D03               	skipz
 10878  0640  2E42               	goto	u5961
 10879  0641  2E43               	goto	u5960
 10880  0642                     u5961:
 10881  0642  2E49               	goto	l3554
 10882  0643                     u5960:
 10883  0643                     l3552:
 10884                           
 10885                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10886  0643  3001               	movlw	1
 10887  0644  07C1               	addwf	sprintf@prec^(0+128),f
 10888  0645  1803               	skipnc
 10889  0646  0AC2               	incf	(sprintf@prec+1)^(0+128),f
 10890  0647  3000               	movlw	0
 10891  0648  07C2               	addwf	(sprintf@prec+1)^(0+128),f
 10892  0649                     l3554:
 10893                           
 10894                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10895  0649  01C4               	clrf	sprintf@c^(0+128)
 10896  064A  0AC4               	incf	sprintf@c^(0+128),f
 10897  064B                     l3560:
 10898                           
 10899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10900  064B  0844               	movf	sprintf@c^(0+128),w
 10901  064C  00A5               	movwf	??_sprintf^(0+128)
 10902  064D  3001               	movlw	1
 10903  064E                     u5975:
 10904  064E  1003               	clrc
 10905  064F  0DA5               	rlf	??_sprintf^(0+128),f
 10906  0650  3EFF               	addlw	-1
 10907  0651  1D03               	skipz
 10908  0652  2E4E               	goto	u5975
 10909  0653  1003               	clrc
 10910  0654  0D25               	rlf	??_sprintf^(0+128),w
 10911  0655  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10912  0656  0084               	movwf	4
 10913  0657  160A  158A  2000  120A  118A  	fcall	stringdir
 10914  065C  00A6               	movwf	(??_sprintf+1)^(0+128)
 10915  065D  160A  158A  2000  120A  118A  	fcall	stringdir
 10916  0662  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
 10917  0663  160A  158A  2000  120A  118A  	fcall	stringdir
 10918  0668  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
 10919  0669  160A  158A  2000  120A  118A  	fcall	stringdir
 10920  066E  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
 10921  066F  0829               	movf	(??_sprintf+4)^(0+128),w
 10922  0670  0236               	subwf	(sprintf@val+3)^(0+128),w
 10923  0671  1D03               	skipz
 10924  0672  2E7D               	goto	u5985
 10925  0673  0828               	movf	(??_sprintf+3)^(0+128),w
 10926  0674  0235               	subwf	(sprintf@val+2)^(0+128),w
 10927  0675  1D03               	skipz
 10928  0676  2E7D               	goto	u5985
 10929  0677  0827               	movf	(??_sprintf+2)^(0+128),w
 10930  0678  0234               	subwf	(sprintf@val+1)^(0+128),w
 10931  0679  1D03               	skipz
 10932  067A  2E7D               	goto	u5985
 10933  067B  0826               	movf	(??_sprintf+1)^(0+128),w
 10934  067C  0233               	subwf	sprintf@val^(0+128),w
 10935  067D                     u5985:
 10936  067D  1803               	skipnc
 10937  067E  2E80               	goto	u5981
 10938  067F  2E81               	goto	u5980
 10939  0680                     u5981:
 10940  0680  2E82               	goto	l3564
 10941  0681                     u5980:
 10942  0681  2E8C               	goto	l3566
 10943  0682                     l3564:
 10944  0682  3001               	movlw	1
 10945  0683  00A5               	movwf	??_sprintf^(0+128)
 10946  0684  0825               	movf	??_sprintf^(0+128),w
 10947  0685  07C4               	addwf	sprintf@c^(0+128),f
 10948  0686  300A               	movlw	10
 10949  0687  0644               	xorwf	sprintf@c^(0+128),w
 10950  0688  1D03               	btfss	3,2
 10951  0689  2E8B               	goto	u5991
 10952  068A  2E8C               	goto	u5990
 10953  068B                     u5991:
 10954  068B  2E4B               	goto	l3560
 10955  068C                     u5990:
 10956  068C                     l3566:
 10957                           
 10958                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10959  068C  0842               	movf	(sprintf@prec+1)^(0+128),w
 10960  068D  3A80               	xorlw	128
 10961  068E  3C80               	sublw	128
 10962  068F  1D03               	skipz
 10963  0690  2E93               	goto	u6005
 10964  0691  0841               	movf	sprintf@prec^(0+128),w
 10965  0692  0244               	subwf	sprintf@c^(0+128),w
 10966  0693                     u6005:
 10967  0693  1803               	skipnc
 10968  0694  2E96               	goto	u6001
 10969  0695  2E97               	goto	u6000
 10970  0696                     u6001:
 10971  0696  2E9E               	goto	l3570
 10972  0697                     u6000:
 10973  0697                     l3568:
 10974                           
 10975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10976  0697  1683               	bsf	3,5	;RP0=1, select bank1
 10977  0698  1303               	bcf	3,6	;RP1=0, select bank1
 10978  0699  0841               	movf	sprintf@prec^(0+128),w
 10979  069A  00A5               	movwf	??_sprintf^(0+128)
 10980  069B  0825               	movf	??_sprintf^(0+128),w
 10981  069C  00C4               	movwf	sprintf@c^(0+128)
 10982  069D  2EB6               	goto	l3574
 10983  069E                     l3570:
 10984  069E  1683               	bsf	3,5	;RP0=1, select bank1
 10985  069F  1303               	bcf	3,6	;RP1=0, select bank1
 10986  06A0  0842               	movf	(sprintf@prec+1)^(0+128),w
 10987  06A1  3A80               	xorlw	128
 10988  06A2  00A5               	movwf	??_sprintf^(0+128)
 10989  06A3  3080               	movlw	128
 10990  06A4  0225               	subwf	??_sprintf^(0+128),w
 10991  06A5  1D03               	skipz
 10992  06A6  2EA9               	goto	u6015
 10993  06A7  0844               	movf	sprintf@c^(0+128),w
 10994  06A8  0241               	subwf	sprintf@prec^(0+128),w
 10995  06A9                     u6015:
 10996  06A9  1803               	skipnc
 10997  06AA  2EAC               	goto	u6011
 10998  06AB  2EAD               	goto	u6010
 10999  06AC                     u6011:
 11000  06AC  2EB6               	goto	l3574
 11001  06AD                     u6010:
 11002  06AD                     l3572:
 11003                           
 11004                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11005  06AD  1683               	bsf	3,5	;RP0=1, select bank1
 11006  06AE  1303               	bcf	3,6	;RP1=0, select bank1
 11007  06AF  0844               	movf	sprintf@c^(0+128),w
 11008  06B0  00A5               	movwf	??_sprintf^(0+128)
 11009  06B1  01A6               	clrf	(??_sprintf^(0+128)+1)
 11010  06B2  0825               	movf	??_sprintf^(0+128),w
 11011  06B3  00C1               	movwf	sprintf@prec^(0+128)
 11012  06B4  0826               	movf	(??_sprintf+1)^(0+128),w
 11013  06B5  00C2               	movwf	(sprintf@prec+1)^(0+128)
 11014  06B6                     l3574:
 11015                           
 11016                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11017  06B6  1683               	bsf	3,5	;RP0=1, select bank1
 11018  06B7  1303               	bcf	3,6	;RP1=0, select bank1
 11019  06B8  083B               	movf	sprintf@width^(0+128),w
 11020  06B9  043C               	iorwf	(sprintf@width+1)^(0+128),w
 11021  06BA  1903               	btfsc	3,2
 11022  06BB  2EBD               	goto	u6021
 11023  06BC  2EBE               	goto	u6020
 11024  06BD                     u6021:
 11025  06BD  2ED0               	goto	l3580
 11026  06BE                     u6020:
 11027  06BE                     l3576:
 11028  06BE  3003               	movlw	3
 11029  06BF  0539               	andwf	sprintf@flag^(0+128),w
 11030  06C0  00A5               	movwf	??_sprintf^(0+128)
 11031  06C1  3000               	movlw	0
 11032  06C2  053A               	andwf	(sprintf@flag+1)^(0+128),w
 11033  06C3  00A6               	movwf	(??_sprintf+1)^(0+128)
 11034  06C4  0825               	movf	??_sprintf^(0+128),w
 11035  06C5  0426               	iorwf	(??_sprintf^(0+128)+1),w
 11036  06C6  1903               	btfsc	3,2
 11037  06C7  2EC9               	goto	u6031
 11038  06C8  2ECA               	goto	u6030
 11039  06C9                     u6031:
 11040  06C9  2ED0               	goto	l3580
 11041  06CA                     u6030:
 11042  06CA                     l3578:
 11043                           
 11044                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11045  06CA  30FF               	movlw	255
 11046  06CB  07BB               	addwf	sprintf@width^(0+128),f
 11047  06CC  1803               	skipnc
 11048  06CD  0ABC               	incf	(sprintf@width+1)^(0+128),f
 11049  06CE  30FF               	movlw	255
 11050  06CF  07BC               	addwf	(sprintf@width+1)^(0+128),f
 11051  06D0                     l3580:
 11052                           
 11053                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11054  06D0  1F3A               	btfss	(sprintf@flag+1)^(0+128),6
 11055  06D1  2ED3               	goto	u6041
 11056  06D2  2ED4               	goto	u6040
 11057  06D3                     u6041:
 11058  06D3  2EEF               	goto	l3588
 11059  06D4                     u6040:
 11060  06D4                     l3582:
 11061                           
 11062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11063  06D4  0842               	movf	(sprintf@prec+1)^(0+128),w
 11064  06D5  3A80               	xorlw	128
 11065  06D6  00A5               	movwf	??_sprintf^(0+128)
 11066  06D7  083C               	movf	(sprintf@width+1)^(0+128),w
 11067  06D8  3A80               	xorlw	128
 11068  06D9  0225               	subwf	??_sprintf^(0+128),w
 11069  06DA  1D03               	skipz
 11070  06DB  2EDE               	goto	u6055
 11071  06DC  083B               	movf	sprintf@width^(0+128),w
 11072  06DD  0241               	subwf	sprintf@prec^(0+128),w
 11073  06DE                     u6055:
 11074  06DE  1803               	skipnc
 11075  06DF  2EE1               	goto	u6051
 11076  06E0  2EE2               	goto	u6050
 11077  06E1                     u6051:
 11078  06E1  2EEB               	goto	l3586
 11079  06E2                     u6050:
 11080  06E2                     l3584:
 11081                           
 11082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11083  06E2  1683               	bsf	3,5	;RP0=1, select bank1
 11084  06E3  1303               	bcf	3,6	;RP1=0, select bank1
 11085  06E4  0841               	movf	sprintf@prec^(0+128),w
 11086  06E5  02BB               	subwf	sprintf@width^(0+128),f
 11087  06E6  0842               	movf	(sprintf@prec+1)^(0+128),w
 11088  06E7  1C03               	skipc
 11089  06E8  03BC               	decf	(sprintf@width+1)^(0+128),f
 11090  06E9  02BC               	subwf	(sprintf@width+1)^(0+128),f
 11091  06EA  2EEF               	goto	l3588
 11092  06EB                     l3586:
 11093                           
 11094                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11095  06EB  1683               	bsf	3,5	;RP0=1, select bank1
 11096  06EC  1303               	bcf	3,6	;RP1=0, select bank1
 11097  06ED  01BB               	clrf	sprintf@width^(0+128)
 11098  06EE  01BC               	clrf	(sprintf@width+1)^(0+128)
 11099  06EF                     l3588:
 11100                           
 11101                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11102  06EF  083C               	movf	(sprintf@width+1)^(0+128),w
 11103  06F0  3A80               	xorlw	128
 11104  06F1  3C80               	sublw	128
 11105  06F2  1D03               	skipz
 11106  06F3  2EF6               	goto	u6065
 11107  06F4  083B               	movf	sprintf@width^(0+128),w
 11108  06F5  0244               	subwf	sprintf@c^(0+128),w
 11109  06F6                     u6065:
 11110  06F6  1803               	skipnc
 11111  06F7  2EF9               	goto	u6061
 11112  06F8  2EFA               	goto	u6060
 11113  06F9                     u6061:
 11114  06F9  2F06               	goto	l3592
 11115  06FA                     u6060:
 11116  06FA                     l3590:
 11117                           
 11118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11119  06FA  1683               	bsf	3,5	;RP0=1, select bank1
 11120  06FB  1303               	bcf	3,6	;RP1=0, select bank1
 11121  06FC  0844               	movf	sprintf@c^(0+128),w
 11122  06FD  00A5               	movwf	??_sprintf^(0+128)
 11123  06FE  01A6               	clrf	(??_sprintf^(0+128)+1)
 11124  06FF  0825               	movf	??_sprintf^(0+128),w
 11125  0700  02BB               	subwf	sprintf@width^(0+128),f
 11126  0701  0826               	movf	(??_sprintf+1)^(0+128),w
 11127  0702  1C03               	skipc
 11128  0703  03BC               	decf	(sprintf@width+1)^(0+128),f
 11129  0704  02BC               	subwf	(sprintf@width+1)^(0+128),f
 11130  0705  2F0A               	goto	l3594
 11131  0706                     l3592:
 11132                           
 11133                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11134  0706  1683               	bsf	3,5	;RP0=1, select bank1
 11135  0707  1303               	bcf	3,6	;RP1=0, select bank1
 11136  0708  01BB               	clrf	sprintf@width^(0+128)
 11137  0709  01BC               	clrf	(sprintf@width+1)^(0+128)
 11138  070A                     l3594:
 11139                           
 11140                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 11141  070A  1D39               	btfss	sprintf@flag^(0+128),2
 11142  070B  2F0D               	goto	u6071
 11143  070C  2F0E               	goto	u6070
 11144  070D                     u6071:
 11145  070D  2F43               	goto	l3610
 11146  070E                     u6070:
 11147  070E                     l3596:
 11148                           
 11149                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 11150  070E  3003               	movlw	3
 11151  070F  0539               	andwf	sprintf@flag^(0+128),w
 11152  0710  00A5               	movwf	??_sprintf^(0+128)
 11153  0711  3000               	movlw	0
 11154  0712  053A               	andwf	(sprintf@flag+1)^(0+128),w
 11155  0713  00A6               	movwf	(??_sprintf+1)^(0+128)
 11156  0714  0825               	movf	??_sprintf^(0+128),w
 11157  0715  0426               	iorwf	(??_sprintf^(0+128)+1),w
 11158  0716  1903               	btfsc	3,2
 11159  0717  2F19               	goto	u6081
 11160  0718  2F1A               	goto	u6080
 11161  0719                     u6081:
 11162  0719  2F25               	goto	l3602
 11163  071A                     u6080:
 11164  071A                     l3598:
 11165                           
 11166                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 11167  071A  302D               	movlw	45
 11168  071B  00A5               	movwf	??_sprintf^(0+128)
 11169  071C  0843               	movf	sprintf@sp^(0+128),w
 11170  071D  0084               	movwf	4
 11171  071E  0825               	movf	??_sprintf^(0+128),w
 11172  071F  1383               	bcf	3,7	;select IRP bank0
 11173  0720  0080               	movwf	0
 11174  0721                     l3600:
 11175  0721  3001               	movlw	1
 11176  0722  00A5               	movwf	??_sprintf^(0+128)
 11177  0723  0825               	movf	??_sprintf^(0+128),w
 11178  0724  07C3               	addwf	sprintf@sp^(0+128),f
 11179  0725                     l3602:
 11180                           
 11181                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 11182  0725  083B               	movf	sprintf@width^(0+128),w
 11183  0726  043C               	iorwf	(sprintf@width+1)^(0+128),w
 11184  0727  1903               	btfsc	3,2
 11185  0728  2F2A               	goto	u6091
 11186  0729  2F2B               	goto	u6090
 11187  072A                     u6091:
 11188  072A  2FD5               	goto	l3630
 11189  072B                     u6090:
 11190  072B                     l3604:
 11191                           
 11192                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 11193  072B  3030               	movlw	48
 11194  072C  00A5               	movwf	??_sprintf^(0+128)
 11195  072D  0843               	movf	sprintf@sp^(0+128),w
 11196  072E  0084               	movwf	4
 11197  072F  0825               	movf	??_sprintf^(0+128),w
 11198  0730  1383               	bcf	3,7	;select IRP bank0
 11199  0731  0080               	movwf	0
 11200  0732                     l3606:
 11201  0732  3001               	movlw	1
 11202  0733  00A5               	movwf	??_sprintf^(0+128)
 11203  0734  0825               	movf	??_sprintf^(0+128),w
 11204  0735  07C3               	addwf	sprintf@sp^(0+128),f
 11205  0736                     l3608:
 11206  0736  30FF               	movlw	255
 11207  0737  07BB               	addwf	sprintf@width^(0+128),f
 11208  0738  1803               	skipnc
 11209  0739  0ABC               	incf	(sprintf@width+1)^(0+128),f
 11210  073A  30FF               	movlw	255
 11211  073B  07BC               	addwf	(sprintf@width+1)^(0+128),f
 11212  073C  083B               	movf	sprintf@width^(0+128),w
 11213  073D  043C               	iorwf	(sprintf@width+1)^(0+128),w
 11214  073E  1D03               	btfss	3,2
 11215  073F  2F41               	goto	u6101
 11216  0740  2F42               	goto	u6100
 11217  0741                     u6101:
 11218  0741  2F2B               	goto	l3604
 11219  0742                     u6100:
 11220  0742  2FD5               	goto	l3630
 11221  0743                     l3610:
 11222                           
 11223                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11224  0743  083B               	movf	sprintf@width^(0+128),w
 11225  0744  043C               	iorwf	(sprintf@width+1)^(0+128),w
 11226  0745  1903               	btfsc	3,2
 11227  0746  2F48               	goto	u6111
 11228  0747  2F49               	goto	u6110
 11229  0748                     u6111:
 11230  0748  2F60               	goto	l3618
 11231  0749                     u6110:
 11232  0749                     l3612:
 11233                           
 11234                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11235  0749  3020               	movlw	32
 11236  074A  00A5               	movwf	??_sprintf^(0+128)
 11237  074B  0843               	movf	sprintf@sp^(0+128),w
 11238  074C  0084               	movwf	4
 11239  074D  0825               	movf	??_sprintf^(0+128),w
 11240  074E  1383               	bcf	3,7	;select IRP bank0
 11241  074F  0080               	movwf	0
 11242  0750                     l3614:
 11243  0750  3001               	movlw	1
 11244  0751  00A5               	movwf	??_sprintf^(0+128)
 11245  0752  0825               	movf	??_sprintf^(0+128),w
 11246  0753  07C3               	addwf	sprintf@sp^(0+128),f
 11247  0754                     l3616:
 11248  0754  30FF               	movlw	255
 11249  0755  07BB               	addwf	sprintf@width^(0+128),f
 11250  0756  1803               	skipnc
 11251  0757  0ABC               	incf	(sprintf@width+1)^(0+128),f
 11252  0758  30FF               	movlw	255
 11253  0759  07BC               	addwf	(sprintf@width+1)^(0+128),f
 11254  075A  083B               	movf	sprintf@width^(0+128),w
 11255  075B  043C               	iorwf	(sprintf@width+1)^(0+128),w
 11256  075C  1D03               	btfss	3,2
 11257  075D  2F5F               	goto	u6121
 11258  075E  2F60               	goto	u6120
 11259  075F                     u6121:
 11260  075F  2F49               	goto	l3612
 11261  0760                     u6120:
 11262  0760                     l3618:
 11263                           
 11264                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11265  0760  3003               	movlw	3
 11266  0761  0539               	andwf	sprintf@flag^(0+128),w
 11267  0762  00A5               	movwf	??_sprintf^(0+128)
 11268  0763  3000               	movlw	0
 11269  0764  053A               	andwf	(sprintf@flag+1)^(0+128),w
 11270  0765  00A6               	movwf	(??_sprintf+1)^(0+128)
 11271  0766  0825               	movf	??_sprintf^(0+128),w
 11272  0767  0426               	iorwf	(??_sprintf^(0+128)+1),w
 11273  0768  1903               	btfsc	3,2
 11274  0769  2F6B               	goto	u6131
 11275  076A  2F6C               	goto	u6130
 11276  076B                     u6131:
 11277  076B  2FD5               	goto	l3630
 11278  076C                     u6130:
 11279  076C                     l3620:
 11280                           
 11281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11282  076C  302D               	movlw	45
 11283  076D  00A5               	movwf	??_sprintf^(0+128)
 11284  076E  0843               	movf	sprintf@sp^(0+128),w
 11285  076F  0084               	movwf	4
 11286  0770  0825               	movf	??_sprintf^(0+128),w
 11287  0771  1383               	bcf	3,7	;select IRP bank0
 11288  0772  0080               	movwf	0
 11289  0773                     l3622:
 11290  0773  3001               	movlw	1
 11291  0774  00A5               	movwf	??_sprintf^(0+128)
 11292  0775  0825               	movf	??_sprintf^(0+128),w
 11293  0776  07C3               	addwf	sprintf@sp^(0+128),f
 11294  0777  2FD5               	goto	l3630
 11295  0778                     l3624:
 11296                           
 11297                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11298  0778  3000               	movlw	0
 11299  0779  1283               	bcf	3,5	;RP0=0, select bank0
 11300  077A  1303               	bcf	3,6	;RP1=0, select bank0
 11301  077B  00A3               	movwf	___llmod@divisor+3
 11302  077C  3000               	movlw	0
 11303  077D  00A2               	movwf	___llmod@divisor+2
 11304  077E  3000               	movlw	0
 11305  077F  00A1               	movwf	___llmod@divisor+1
 11306  0780  300A               	movlw	10
 11307  0781  00A0               	movwf	___llmod@divisor
 11308  0782  1683               	bsf	3,5	;RP0=1, select bank1
 11309  0783  1303               	bcf	3,6	;RP1=0, select bank1
 11310  0784  0841               	movf	sprintf@prec^(0+128),w
 11311  0785  00A5               	movwf	??_sprintf^(0+128)
 11312  0786  3001               	movlw	1
 11313  0787                     u6145:
 11314  0787  1003               	clrc
 11315  0788  0DA5               	rlf	??_sprintf^(0+128),f
 11316  0789  3EFF               	addlw	-1
 11317  078A  1D03               	skipz
 11318  078B  2F87               	goto	u6145
 11319  078C  1003               	clrc
 11320  078D  0D25               	rlf	??_sprintf^(0+128),w
 11321  078E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11322  078F  0084               	movwf	4
 11323  0790  160A  158A  2000  120A  118A  	fcall	stringdir
 11324  0795  00F0               	movwf	___lldiv@divisor
 11325  0796  160A  158A  2000  120A  118A  	fcall	stringdir
 11326  079B  00F1               	movwf	___lldiv@divisor+1
 11327  079C  160A  158A  2000  120A  118A  	fcall	stringdir
 11328  07A1  00F2               	movwf	___lldiv@divisor+2
 11329  07A2  160A  158A  2000  120A  118A  	fcall	stringdir
 11330  07A7  00F3               	movwf	___lldiv@divisor+3
 11331  07A8  0836               	movf	(sprintf@val+3)^(0+128),w
 11332  07A9  00F7               	movwf	___lldiv@dividend+3
 11333  07AA  0835               	movf	(sprintf@val+2)^(0+128),w
 11334  07AB  00F6               	movwf	___lldiv@dividend+2
 11335  07AC  0834               	movf	(sprintf@val+1)^(0+128),w
 11336  07AD  00F5               	movwf	___lldiv@dividend+1
 11337  07AE  0833               	movf	sprintf@val^(0+128),w
 11338  07AF  00F4               	movwf	___lldiv@dividend
 11339  07B0  160A  158A  23A4  120A  118A  	fcall	___lldiv
 11340  07B5  0873               	movf	?___lldiv+3,w
 11341  07B6  1283               	bcf	3,5	;RP0=0, select bank0
 11342  07B7  1303               	bcf	3,6	;RP1=0, select bank0
 11343  07B8  00A7               	movwf	___llmod@dividend+3
 11344  07B9  0872               	movf	?___lldiv+2,w
 11345  07BA  00A6               	movwf	___llmod@dividend+2
 11346  07BB  0871               	movf	?___lldiv+1,w
 11347  07BC  00A5               	movwf	___llmod@dividend+1
 11348  07BD  0870               	movf	?___lldiv,w
 11349  07BE  00A4               	movwf	___llmod@dividend
 11350  07BF  160A  158A  2298  120A  118A  	fcall	___llmod
 11351  07C4  1283               	bcf	3,5	;RP0=0, select bank0
 11352  07C5  1303               	bcf	3,6	;RP1=0, select bank0
 11353  07C6  0820               	movf	?___llmod,w
 11354  07C7  3E30               	addlw	48
 11355  07C8  1683               	bsf	3,5	;RP0=1, select bank1
 11356  07C9  1303               	bcf	3,6	;RP1=0, select bank1
 11357  07CA  00A6               	movwf	(??_sprintf+1)^(0+128)
 11358  07CB  0826               	movf	(??_sprintf+1)^(0+128),w
 11359  07CC  00C4               	movwf	sprintf@c^(0+128)
 11360  07CD                     l3626:
 11361                           
 11362                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11363  07CD  0844               	movf	sprintf@c^(0+128),w
 11364  07CE  00A5               	movwf	??_sprintf^(0+128)
 11365  07CF  0843               	movf	sprintf@sp^(0+128),w
 11366  07D0  0084               	movwf	4
 11367  07D1  0825               	movf	??_sprintf^(0+128),w
 11368  07D2  1383               	bcf	3,7	;select IRP bank0
 11369  07D3  0080               	movwf	0
 11370  07D4  2F73               	goto	l3622
 11371  07D5                     l3630:
 11372                           
 11373                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11374  07D5  30FF               	movlw	255
 11375  07D6  07C1               	addwf	sprintf@prec^(0+128),f
 11376  07D7  1803               	skipnc
 11377  07D8  0AC2               	incf	(sprintf@prec+1)^(0+128),f
 11378  07D9  30FF               	movlw	255
 11379  07DA  07C2               	addwf	(sprintf@prec+1)^(0+128),f
 11380  07DB  0A41               	incf	sprintf@prec^(0+128),w
 11381  07DC  1D03               	skipz
 11382  07DD  2FE2               	goto	u6151
 11383  07DE  0A42               	incf	(sprintf@prec+1)^(0+128),w
 11384  07DF  1D03               	btfss	3,2
 11385  07E0  2FE2               	goto	u6151
 11386  07E1  2FE3               	goto	u6150
 11387  07E2                     u6151:
 11388  07E2  2F78               	goto	l3624
 11389  07E3                     u6150:
 11390  07E3                     l3632:
 11391                           
 11392                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11393  07E3  3001               	movlw	1
 11394  07E4  07A0               	addwf	sprintf@f^(0+128),f
 11395  07E5  30FF               	movlw	-1
 11396  07E6  0720               	addwf	sprintf@f^(0+128),w
 11397  07E7  0084               	movwf	4
 11398  07E8  160A  158A  2000  120A  118A  	fcall	stringdir
 11399  07ED  00A5               	movwf	??_sprintf^(0+128)
 11400  07EE  0825               	movf	??_sprintf^(0+128),w
 11401  07EF  00C4               	movwf	sprintf@c^(0+128)
 11402  07F0  0844               	movf	sprintf@c^(0+128),w
 11403  07F1  1D03               	btfss	3,2
 11404  07F2  2FF4               	goto	u6161
 11405  07F3  2FF7               	goto	u6160
 11406  07F4                     u6161:
 11407  07F4  160A  118A  2D2F   	goto	l3314
 11408  07F7                     u6160:
 11409  07F7                     l3634:
 11410                           
 11411                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11412  07F7  0843               	movf	sprintf@sp^(0+128),w
 11413  07F8  0084               	movwf	4
 11414  07F9  1383               	bcf	3,7	;select IRP bank0
 11415  07FA  0180               	clrf	0
 11416  07FB                     l313:
 11417  07FB  0008               	return
 11418  07FC                     __end_of_sprintf:

Data Sizes:
    Strings     26
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     64      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer1(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   40963
                                             37 BANK1     27    27      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32660
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             56 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     _scale (ARG)
       ___awdiv
       ___awmod
       ___flmul
   ___xxtofl
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     40      40       7       80.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Mar 12 14:54:18 2022

            ___fldiv@aexp 0057              ___fldiv@bexp 0056                         pc 0002  
            ___fldiv@sign 004F                        l20 1939                        l21 193F  
                      l22 1940                        l23 1946                        l40 1BA3  
                      l25 1947                        l17 192F                        l18 1932  
                      l19 1938                        l43 19C7                        l28 1904  
                      l37 1A97                        l49 1925                        l89 006F  
                      _GO 00FA              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076                       l203 0C9E  
                     l231 1605                       l216 1546                       l313 07FB  
                     l317 1978                       l270 0434                       l503 001F  
                     l511 1C92                       l319 1990                       l504 003B  
                     l512 1CAB                       l520 0881                       l505 0050  
                     l353 1C09                       l530 0881                       l700 1E7F  
                     l508 1C26                       l516 18D8                       l196 129C  
                     l277 047A                       l702 1FFF                       l534 1E22  
                     l470 1091                       l527 086C                       l535 1D94  
                     l623 1A45                       l545 1E15                       l633 1A01  
                     l722 1FE3                       l650 137E                       l538 1DE5  
                     l491 0902                       l483 1B46                       l724 1FF3  
                     l716 1F71                       l644 1300                       l740 0FFF  
                     l804 18EA                       l573 1AED                       l487 093F  
                     l648 13A7                       l488 08A4                       l752 0FF3  
                     l665 1472                       l657 1524                       l761 1028  
                     l690 196B                       l498 0932                       l746 0F6B  
                     l675 14B8                       l669 1496                       l686 1518  
                     l678 14F6                       l790 1D13                       l687 1524  
                     l759 1016                       l784 1CCE                       l786 1D65  
                     l797 1D2F                       l798 1D3B                       _RA0 0028  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0036              ___flmul@bexp 0037               _sprintf$844 00AA  
            ___flmul@sign 0031              ___flmul@temp 003C              ___flmul@prod 0038  
             main@buffer1 00C8              ___fltol@exp1 0062                      l3000 1D9B  
                    l3010 1DCC                      l3002 1DAA                      l3100 198C  
                    l3012 1DD6                      l3004 1DAC                      l3110 1BC4  
                    l3014 1DD7                      l3006 1DB5                      l3200 0871  
                    l3120 1BF2                      l3112 1BC8                      l3104 1BA4  
                    l3040 088F                      l3032 1E0A                      l3024 1DF1  
                    l3016 1DDF                      l3008 1DBE                      l2400 1005  
                    l3130 0017                      l3202 0876                      l3122 1BFB  
                    l3114 1BD1                      l3106 1BB4                      l3210 1AB2  
                    l3050 08A5                      l3034 1E1A                      l3018 1DE9  
                    l3026 1E03                      l2402 100C                      l2420 1944  
                    l2412 1927                      l3300 1B64                      l3132 0033  
                    l3140 1C0A                      l3116 1BE3                      l3108 1BB7  
                    l3124 1C01                      l3212 1AB6                      l3220 1AE5  
                    l3204 1A98                      l3060 08D2                      l3052 08AD  
                    l3044 0898                      l2404 1010                      l2500 1B42  
                    l2414 192B                      l3302 1B6A                      l3310 191A  
                    l3134 004D                      l3150 1C6A                      l3142 1C1E  
                    l3118 1BF1                      l3214 1AC8                      l3206 1AA2  
                    l3230 1CAD                      l3070 0906                      l3062 08E4  
                    l3054 08BE                      l3038 0882                      l2406 101F  
                    l2510 1A0D                      l2430 1037                      l2422 1029  
                    l2416 1936                      l3304 1906                      l3136 004F  
                    l3128 0003                      l3152 1C6E                      l3144 1C3A  
                    l3160 18CE                      l2600 130E                      l3224 1948  
                    l3216 1AD6                      l3208 1AA5                      l3232 1CB2  
                    l3064 08F2                      l3056 08C0                      l2408 1024  
                    l2520 1A33                      l2512 1A14                      l2504 1A02  
                    l2440 104C                      l2432 103B                      l2424 102C  
                    l3400 174F                      l3320 1541                      l3312 1528  
                    l2418 193D                      l3306 1909                      l3154 1CA8  
                    l3146 1C42                      l3162 18D6                      l2610 1322  
                    l2602 1312                      l3226 194C                      l3170 0813  
                    l3218 1ADF                      l3090 196C                      l3250 1CFC  
                    l3242 1CDF                      l3234 1CB6                      l3066 08F3  
                    l3058 08C9                      l2522 1A34                      l2514 1A18  
                    l2506 1A04                      l2530 19C8                      l2450 106F  
                    l2442 104F                      l2434 1040                      l2426 1030  
                    l3410 17A3                      l3402 1768                      l3330 156E  
                    l3322 1547                      l3314 152F                      l3308 1914  
                    l3156 1CAA                      l3148 1C46                      l3164 18D8  
                    l2700 149D                      l2620 1336                      l2612 1326  
                    l2604 1316                      l3180 083A                      l3092 196E  
                    l3260 1D33                      l3252 1D0A                      l3244 1CE4  
                    l3236 1CC6                      l3084 0927                      l3076 090E  
                    l3068 08FC                      l2524 1A3B                      l2516 1A1C  
                    l2508 1A0A                      l2540 19E0                      l2532 19CE  
                    l2460 1088                      l2452 1075                      l2444 1056  
                    l2436 1044                      l2428 1035                      l3500 044B  
                    l3420 01CB                      l3412 17EA                      l3404 1771  
                    l3332 1572                      l3340 15AE                      l3316 1535  
                    l2710 14AB                      l2702 149F                      l2622 133A  
                    l2614 132A                      l2606 131A                      l2630 134A  
                    l3190 0848                      l3182 083C                      l3174 081C  
                    l3094 1972                      l3270 1D5D                      l3262 1D3D  
                    l3254 1D1A                      l3246 1CF1                      l3238 1CD6  
                    l3086 0937                      l3078 0920                      l2518 1A2D  
                    l2526 1A41                      l2542 19EA                      l2534 19D1  
                    l2462 108D                      l2454 1076                      l2446 105A  
                    l2438 1046                      l2470 1AF3                      l3510 0483  
                    l3502 0451                      l3422 01E6                      l3414 017A  
                    l3406 178C                      l3350 15D9                      l3342 15BC  
                    l3334 1587                      l3326 154B                      l3318 153C  
                    l3280 1A62                      l2720 14C2                      l2712 14AF  
                    l2704 14A4                      l2640 138D                      l2632 134B  
                    l2624 133E                      l2616 132E                      l2608 131E  
                    l2560 12AF                      l2552 129D                      l3184 0840  
                    l3192 085A                      l3176 0831                      l3168 0806  
                    l3096 197F                      l3264 1D53                      l3256 1D25  
                    l3248 1CF8                      l2800 0D8E                      l2544 19F0  
                    l2536 19D8                      l2456 107D                      l2448 105E  
                    l2480 1B09                      l2472 1AF8                      l3600 0721  
                    l3520 050C                      l3512 0488                      l3504 045E  
                    l3440 02C1                      l3432 0234                      l3424 01EF  
                    l3416 0195                      l3408 1794                      l3352 15EC  
                    l3344 15BD                      l3336 159A                      l3328 155E  
                    l3290 1A8B                      l3282 1A68                      l3274 1A47  
                    l2730 1500                      l2722 14D0                      l2714 14B5  
                    l2706 14A6                      l2650 13AB                      l2642 1391  
                    l2634 1362                      l2626 1342                      l2618 1332  
                    l2562 12B4                      l2570 12C4                      l2554 12A4  
                    l3178 0832                      l3098 1986                      l3266 1D58  
                    l3258 1D29                      l2810 0DFC                      l2802 0DAA  
                    l2546 19F7                      l2538 19DC                      l2458 1083  
                    l2490 1B25                      l2482 1B0C                      l2474 1AFA  
                    l2466 1AEE                      l3602 0725                      l3610 0743  
                    l3530 05F5                      l3522 0547                      l3514 048F  
                    l3506 046D                      l3450 02FA                      l3426 01F7  
                    l3418 01BC                      l3434 023D                      l3370 163F  
                    l3362 1607                      l3354 15F0                      l3346 15C1  
                    l3338 159E                      l3292 1A91                      l3276 1A4C  
                    l3284 1A6F                      l2900 199F                      l3700 1EA5  
                    l2740 1514                      l2732 1508                      l2724 14D4  
                    l2660 13D4                      l2708 14AA                      l2652 13B0  
                    l2644 1392                      l2636 1382                      l2628 1346  
                    l2580 12DE                      l2572 12CC                      l2564 12B9  
                    l2556 12AA                      l3268 1D5C                      l2820 0E8C  
                    l2812 0E0C                      l2804 0DC6                      l2548 19FD  
                    l2492 1B2B                      l2484 1B13                      l2476 1AFE  
                    l2468 1AEF                      l3620 076C                      l3612 0749  
                    l3604 072B                      l3540 061E                      l3532 05FC  
                    l3524 0586                      l3516 0493                      l3508 0474  
                    l3460 0337                      l3452 0304                      l3436 0272  
                    l3428 0215                      l3380 1687                      l3372 164D  
                    l3364 1629                      l3348 15C4                      l3356 1601  
                    l3294 1B47                      l3286 1A75                      l3278 1A5D  
                    l2910 19BD                      l2902 19AD                      l3710 1ED0  
                    l2742 151F                      l2734 150D                      l2726 14F2  
                    l2718 14BD                      l2670 13E8                      l2662 13D8  
                    l2646 139B                      l2638 138B                      l2590 12F5  
                    l2582 12E2                      l2574 12D1                      l2566 12C1  
                    l2558 12AE                      l3198 0861                      l2398 1003  
                    l2830 0F20                      l2822 0E9C                      l2814 0E29  
                    l2806 0DCF                      l2750 0CAC                      l2494 1B32  
                    l2486 1B17                      l2478 1B03                      l3622 0773  
                    l3614 0750                      l3606 0732                      l3630 07D5  
                    l3550 063B                      l3542 0622                      l3534 0600  
                    l3526 0592                      l3518 04B1                      l3470 035C  
                    l3462 033B                      l3454 031F                      l3446 02C3  
                    l3438 02BF                      l3390 16C8                      l3382 168B  
                    l3374 1651                      l3366 1637                      l3358 1603  
                    l3296 1B4D                      l3288 1A86                      l2912 19C0  
                    l2904 19B0                      l3720 1EF5                      l3712 1ED8  
                    l3704 1EAE                      l2744 1523                      l2736 150E  
                    l2728 14FB                      l2680 1450                      l2672 13F1  
                    l2664 13E1                      l2656 13B9                      l2648 139F  
                    l2592 12F6                      l2584 12E3                      l2576 12D7  
                    l2568 12C2                      l2840 0F45                      l2832 0F2E  
                    l2824 0EC9                      l2816 0E42                      l2808 0DDF  
                    l2760 0CC3                      l2752 0CB0                      l2488 1B1B  
                    l2496 1B38                      l3624 0778                      l3616 0754  
                    l3608 0736                      l3560 064B                      l3552 0643  
                    l3544 0626                      l3536 0606                      l3528 05ED  
                    l3480 0381                      l3472 0360                      l3464 0347  
                    l3456 0325                      l3392 16DB                      l3384 16A4  
                    l3376 166A                      l3368 163B                      l3632 07E3  
                    l3800 0051                      l3298 1B56                      l2914 19C4  
                    l2906 19B4                      l3730 1F20                      l3722 1EF6  
                    l3714 1EDA                      l3706 1EC0                      l3650 1E23  
                    l2738 1512                      l2682 1455                      l2666 13E3  
                    l2658 13D0                      l2674 13F6                      l2586 12E8  
                    l2594 12F8                      l2578 12D8                      l2850 0F68  
                    l2834 0F37                      l2842 0F4B                      l2826 0EEF  
                    l2818 0E5F                      l2770 0CDC                      l2762 0CC5  
                    l2754 0CB1                      l2746 0C9F                      l2930 1259  
                    l2498 1B3D                      l3626 07CD                      l3618 0760  
                    l3570 069E                      l3554 0649                      l3546 062A  
                    l3490 03AE                      l3466 034E                      l3474 0366  
                    l3482 0387                      l3458 0331                      l3394 16DF  
                    l3386 16AF                      l3378 1683                      l3538 060D  
                    l3634 07F7                      l3810 0062                      l3802 0051  
                    l2908 19B7                      l3740 1F3D                      l3716 1EDF  
                    l3724 1EFF                      l3732 1F24                      l3708 1EC8  
                    l3660 1E3A                      l3652 1E2A                      l2692 1488  
                    l2676 140C                      l2684 1464                      l2668 13E7  
                    l2596 1306                      l2588 12ED                      l2860 0F87  
                    l2844 0F4F                      l2836 0F3B                      l2828 0F17  
                    l2780 0CF1                      l2772 0CDD                      l2764 0CCD  
                    l2756 0CB6                      l2748 0CA6                      l2924 11A8  
                    l2916 1095                      l2940 0950                      l3580 06D0  
                    l3572 06AD                      l3564 0682                      l3548 0635  
                    l3492 03E9                      l3484 0394                      l3476 0374  
                    l3468 0353                      l3396 16E5                      l3388 16B5  
                    l3900 161B                      l3820 0092                      l3812 006C  
                    l3804 005C                      l3750 1F55                      l3742 1F41  
                    l3734 1F2A                      l3726 1F11                      l3718 1EF1  
                    l3670 1E52                      l3662 1E3F                      l3654 1E30  
                    l2694 1491                      l2686 147A                      l2678 144A  
                    l2598 130A                      l2870 0FCD                      l2862 0FA0  
                    l2854 0F70                      l2846 0F50                      l2838 0F3C  
                    l2790 0D0C                      l2782 0CF9                      l2774 0CE2  
                    l2766 0CD2                      l2758 0CBB                      l2926 11AE  
                    l2918 109B                      l2934 0943                      l3590 06FA  
                    l3582 06D4                      l3574 06B6                      l3566 068C  
                    l3494 0428                      l3486 03A2                      l3478 037D  
                    l3398 1704                      l3830 0145                      l3822 00EB  
                    l3814 0073                      l3806 005D                      l3760 1F76  
                    l3752 1F56                      l3744 1F42                      l3736 1F32  
                    l3728 1F12                      l3680 1E67                      l3672 1E57  
                    l3664 1E47                      l3656 1E34                      l2696 1495  
                    l2688 147F                      l2880 0FEC                      l2872 0FD7  
                    l2856 0F75                      l2864 0FA6                      l2848 0F54  
                    l2792 0D1C                      l2784 0CFE                      l2776 0CE7  
                    l2768 0CD8                      l2952 0AC7                      l2936 0947  
                    l3592 0706                      l3584 06E2                      l3576 06BE  
                    l3568 0697                      l3496 043E                      l3488 03A9  
                    l3832 0159                      l3824 0129                      l3816 007C  
                    l3808 005D                      l2890 18F5                      l3762 1F7B  
                    l3770 1FAC                      l3754 1F5A                      l3746 1F4B  
                    l3738 1F34                      l3690 1E87                      l3682 1E6C  
                    l3674 1E5D                      l3666 1E48                      l3658 1E35  
                    l2698 149A                      l2882 0FF7                      l2874 0FD9  
                    l2866 0FB3                      l2858 0F83                      l2794 0D29  
                    l2786 0D03                      l2778 0CEF                      l2970 0C72  
                    l2946 0A38                      l2938 0949                      l3594 070A  
                    l3586 06EB                      l3578 06CA                      l3498 0447  
                    l3834 0161                      l3826 0137                      l3818 0087  
                    l2892 18F8                      l3780 1FE2                      l3772 1FB9  
                    l3764 1F89                      l3756 1F6E                      l3748 1F51  
                    l3692 1E93                      l3684 1E74                      l3676 1E61  
                    l3668 1E4A                      l2876 0FE7                      l2868 0FBE  
                    l2796 0D46                      l2980 18E7                      l2964 0BE3  
                    l2948 0A3F                      l2956 0AF4                      l3596 070E  
                    l3588 06EF                      l3836 0167                      l3828 013F  
                    l2894 1901                      l2886 18EC                      l3782 1FE9  
                    l3774 1FC7                      l3766 1F8D                      l3694 1E97  
                    l3686 1E75                      l3678 1E62                      l2878 0FEB  
                    l2798 0D62                      l2982 18E9                      l2974 18DA  
                    l2966 0BEA                      l2958 0AFB                      l3598 071A  
                    l2888 18EF                      l2896 1992                      l3784 1FED  
                    l3776 1FD6                      l3768 1FA6                      l3688 1E77  
                    l2992 1D82                      l2976 18DB                      l2898 199C  
                    l3786 1FEF                      l3778 1FDA                      l3698 1EA0  
                    l2986 1D66                      l2978 18E1                      l2988 1D79  
                    l2998 1D95                      l3798 0051                      l3898 1559  
                    STR_1 18A3                      STR_2 1896                      u4000 14C2  
                    u4001 14C1                      u4010 14D4                      u4011 14D3  
                    u3300 1944                      u4020 14E3                      u4100 0CB6  
                    u3301 1943                      u4101 0CB5                      u4030 14F2  
                    u4110 0CBB                      u3310 1030                      u4031 14F1  
                    u4111 0CBA                      u3311 102F                      u4040 14FB  
                    u5000 1972                      u3240 1010                      u4120 0CDC  
                    u3400 1088                      u3320 103B                      u4041 14FA  
                    u4025 14DE                      u5001 1971                      u3241 100F  
                    u4201 0DB8                      u4121 0CDB                      u3401 1087  
                    u3321 103A                      u4050 1500                      u4202 0DBF  
                    u4130 0CE2                      u3330 104C                      u3410 1AF3  
                    u4051 14FF                      u4203 0DC6                      u4131 0CE1  
                    u3331 104B                      u3411 1AF2                      u4060 150D  
                    u5100 1C01                      u3260 1024                      u4300 0EFD  
                    u4140 0CE7                      u3500 1A0A                      u3420 1AFE  
                    u4061 150C                      u5101 1C00                      u3261 1023  
                    u4221 0DEE                      u4141 0CE6                      u3501 1A09  
                    u3421 1AFD                      u3270 192B                      u5110 0017  
                    u4070 1512                      u5030 198C                      u4222 0DF5  
                    u4150 0CFE                      u3350 105E                      u3430 1B09  
                    u3271 192A                      u5111 0016                      u4071 1511  
                    u5031 198B                      u5015 1979                      u3255 1017  
                    u4311 0F09                      u4231 0E1B                      u4223 0DFC  
                    u4215 0DC8                      u4151 0CFD                      u3351 105D  
                    u3431 1B08                      u3280 1936                      u5120 0033  
                    u5200 1CA8                      u4080 1523                      u5040 1BB4  
                    u4400 0F75                      u4312 0F10                      u4232 0E22  
                    u4160 0D03                      u3520 1A1C                      u3600 19EA  
                    u6000 0697                      u3281 1935                      u5121 0032  
                    u5201 1CA7                      u4081 1522                      u5041 1BB3  
                    u5025 1980                      u4401 0F74                      u4313 0F17  
                    u4305 0EF8                      u4233 0E29                      u4161 0D02  
                    u3521 1A1B                      u3601 19E9                      u3345 1050  
                    u6001 0696                      u3290 193D                      u5130 004D  
                    u5210 18D6                      u4410 0F87                      u4090 0CB0  
                    u3370 106F                      u3450 1B1B                      u6010 06AD  
                    u3291 193C                      u5131 004C                      u5211 18D5  
                    u4411 0F86                      u4251 0E51                      u4171 0D54  
                    u4091 0CAF                      u3515 1A0E                      u3371 106E  
                    u3451 1B1A                      u6011 06AC                      u5140 1C1E  
                    u3700 1306                      u5300 0871                      u5220 0813  
                    u5060 1BC8                      u4420 0F96                      u4340 0F3B  
                    u4252 0E58                      u4172 0D5B                      u3540 1A2D  
                    u3620 19FD                      u3460 1B25                      u6100 0742  
                    u6020 06BE                      u5205 1CA4                      u5141 1C1D  
                    u3701 1305                      u5301 0870                      u5221 0812  
                    u5061 1BC7                      u4341 0F3A                      u4325 0F19  
                    u4261 0E7E                      u4253 0E5F                      u4245 0E2B  
                    u4181 0D70                      u4173 0D62                      u3541 1A2C  
                    u3621 19FC                      u3605 19E6                      u3365 105F  
                    u3461 1B24                      u3445 1B0D                      u6101 0741  
                    u6021 06BD                      u6005 0693                      u5150 1C3A  
                    u3710 130A                      u3630 12AE                      u5310 0876  
                    u5230 082A                      u4430 0FB3                      u4262 0E85  
                    u4182 0D77                      u4510 11AE                      u3390 1083  
                    u6110 0749                      u6030 06CA                      u5135 0049  
                    u5151 1C39                      u3711 1309                      u3631 12AD  
                    u5311 0875                      u5055 1BB9                      u4431 0FB2  
                    u4335 0F30                      u4271 0EAB                      u4263 0E8C  
                    u4191 0D9C                      u4183 0D7E                      u3535 1A1D  
                    u3615 19F1                      u4511 11AD                      u3391 1082  
                    u3375 106B                      u6111 0748                      u6031 06C9  
                    u6015 06A9                      u6200 1E61                      u5160 1C46  
                    u3800 13B0                      u3720 1362                      u3640 12B4  
                    u5240 0840                      u5080 1BE3                      u5320 1AA2  
                    u5400 1CD6                      u4440 0FCD                      u4360 0F4F  
                    u4280 0ED5                      u4272 0EB2                      u4192 0DA3  
                    u3560 1A41                      u3480 1B38                      u4600 0A3F  
                    u6120 0760                      u6040 06D4                      u6201 1E60  
                    u5161 1C45                      u3801 13AF                      u3721 1361  
                    u3641 12B3                      u5241 083F                      u5081 1BE2  
                    u5321 1AA1                      u5401 1CD5                      u4441 0FCC  
                    u4425 0F91                      u4361 0F4E                      u4273 0EB9  
                    u4193 0DAA                      u3561 1A40                      u3545 1A29  
                    u4505 1167                      u3385 1077                      u3481 1B37  
                    u3465 1B21                      u4601 0A3E                      u6121 075F  
                    u6041 06D3                      u6210 1E67                      u3730 136D  
                    u3650 12B9                      u5250 0847                      u4450 0FEB  
                    u4370 0F54                      u3570 19CE                      u3490 1B3D  
                    u6130 076C                      u6050 06E2                      u6211 1E66  
                    u5171 1C55                      u3811 13C2                      u3731 136B  
                    u3651 12B8                      u5251 0846                      u5235 0825  
                    u5075 1BCA                      u4451 0FEA                      u4435 0FAF  
                    u4371 0F53                      u4355 0F3E                      u4291 0EE1  
                    u3555 1A35                      u3571 19CD                      u3491 1B3C  
                    u3475 1B2C                      u6131 076B                      u6051 06E1  
                    u6300 1F11                      u6220 1E6C                      u5180 1C6E  
                    u5172 1C56                      u3900 147A                      u3820 13D4  
                    u3812 13C9                      u3740 136E                      u3660 12D7  
                    u5340 1AB6                      u5500 1D58                      u5420 1CF7  
                    u4380 0F68                      u4292 0EE8                      u6060 06FA  
                    u6301 1F10                      u6221 1E6B                      u5181 1C6D  
                    u5173 1C5B                      u3901 1479                      u3821 13D3  
                    u3813 13D0                      u3725 135E                      u3661 12D6  
                    u5085 1BDF                      u5341 1AB5                      u5501 1D57  
                    u5421 1CF6                      u4445 0FC9                      u4381 0F67  
                    u4293 0EEF                      u4285 0ED0                      u4525 11CB  
                    u6061 06F9                      u6310 1F2A                      u6230 1E87  
                    u5174 1C5C                      u3910 147F                      u3830 13D8  
                    u3750 1382                      u3670 12E2                      u5270 0859  
                    u5350 1AC8                      u5510 1D5C                      u4390 0F6F  
                    u3590 19E0                      u4470 109B                      u4550 0947  
                    u6150 07E3                      u6070 070E                      u6311 1F29  
                    u6231 1E86                      u5191 1C7D                      u5175 1C61  
                    u3911 147E                      u3831 13D7                      u3751 1381  
                    u3671 12E1                      u5271 0858                      u5095 1BF3  
                    u5351 1AC7                      u5335 1AA7                      u5511 1D5B  
                    u5415 1CE9                      u4391 0F6E                      u3591 19DF  
                    u4535 1218                      u4471 109A                      u4615 0A52  
                    u4551 0946                      u6151 07E2                      u6071 070D  
                    u6055 06DE                      u5520 1A4C                      u6400 1F7B  
                    u6320 1F32                      u6240 1EA5                      u5192 1C7E  
                    u5176 1C62                      u3840 13E7                      u3760 1391  
                    u3680 12E8                      u5280 0860                      u5440 1D19  
                    u4800 1DE9                      u4720 18E1                      u4640 0AFB  
                    u4560 0950                      u6160 07F7                      u6080 071A  
                    u5600 15BC                      u5521 1A4B                      u4465 19A2  
                    u6401 1F7A                      u6321 1F31                      u6305 1F0D  
                    u6241 1EA4                      u5193 1C83                      u3841 13E6  
                    u3761 1390                      u3681 12E7                      u5281 085F  
                    u5265 0849                      u5441 1D18                      u4801 1DE8  
                    u3585 19D2                      u4545 1264                      u4721 18E0  
                    u4705 0C39                      u4641 0AFA                      u4625 0A8E  
                    u4561 094F                      u6161 07F4                      u6145 0787  
                    u6081 0719                      u6065 06F6                      u5601 15BB  
                    u6410 1F8D                      u6250 1EDF                      u6170 1E34  
                    u5194 1C84                      u3930 1495                      u3690 12ED  
                    u5370 1AE5                      u4810 1DF0                      u4730 18E7  
                    u6090 072B                      u5610 1600                      u6411 1F8C  
                    u6251 1EDE                      u6171 1E33                      u5195 1C89  
                    u3931 1494                      u3691 12EC                      u5371 1AE4  
                    u5355 1AC4                      u5435 1D0B                      u4811 1DEF  
                    u4731 18E6                      u4715 0C75                      u4635 0ACA  
                    u6091 072A                      u5611 15FF                      u5540 1A75  
                    u6420 1F9C                      u6340 1F41                      u6180 1E3A  
                    u5196 1C8A                      u3940 149A                      u3860 140C  
                    u3780 13A7                      u5460 1D29                      u5380 1CB2  
                    u4900 08E4                      u4740 1D79                      u5700 017A  
                    u5620 1637                      u5541 1A74                      u6341 1F40  
                    u6181 1E39                      u3941 1499                      u3925 148A  
                    u3861 140B                      u3781 13A6                      u5365 1AD7  
                    u5461 1D28                      u5381 1CB1                      u4901 08E3  
                    u4741 1D78                      u4485 10B8                      u5701 17FA  
                    u5621 1634                      u6430 1FB9                      u6190 1E3F  
                    u3950 14A4                      u3790 13AB                      u5470 1D2F  
                    u5390 1CB6                      u4830 1E02                      u4750 1D93  
                    u5710 0195                      u5630 163B                      u5535 1A54  
                    u6431 1FB8                      u6335 1F36                      u6191 1E3E  
                    u3951 14A3                      u3871 1423                      u3863 1408  
                    u3855 13EA                      u3791 13AA                      u3775 1394  
                    u5295 0863                      u5471 1D2E                      u5455 1D1E  
                    u5391 1CB5                      u4831 1E01                      u4751 1D92  
                    u4495 1112                      u4655 0B1B                      u4575 0970  
                    u5711 0194                      u5631 163A                      u5560 1925  
                    u6440 1FD6                      u6360 1F55                      u6280 1EF5  
                    u3960 14AA                      u3880 1437                      u3872 1424  
                    u5480 1D33                      u4920 0902                      u4840 1E09  
                    u4680 0BEA                      u5800 033B                      u5720 01BC  
                    u5640 166A                      u5561 1924                      u6441 1FD5  
                    u6425 1F97                      u6361 1F54                      u6281 1EF4  
                    u6265 1EE1                      u3961 14A9                      u3881 1438  
                    u3873 1429                      u5481 1D32                      u4921 0901  
                    u4905 08E0                      u4841 1E08                      u4825 1DF2  
                    u4681 0BE9                      u4665 0B57                      u4585 09AC  
                    u5801 033A                      u5721 01BB                      u5705 17F5  
                    u5641 1669                      u6450 1FED                      u6370 1F5A  
                    u3970 14AF                      u3890 1455                      u3882 143D  
                    u3874 142A                      u5490 1D48                      u4930 0906  
                    u4770 1DCC                      u5810 0347                      u5730 01CB  
                    u5650 16A4                      u5570 1535                      u5555 1A7D  
                    u6507 19C2                      u6451 1FEC                      u6435 1FB5  
                    u6371 1F59                      u6355 1F44                      u6275 1EEA  
                    u3971 14AE                      u3891 1454                      u3883 143E  
                    u3875 142F                      u4931 0905                      u4915 08F5  
                    u4771 1DCB                      u4675 0BA2                      u4595 09F7  
                    u5811 0346                      u5731 01CA                      u5651 16A3  
                    u5571 1534                      u6380 1F6E                      u3980 14B5  
                    u3876 1430                      u4940 090D                      u4860 1E1A  
                    u5820 0373                      u5740 01E6                      u5660 16DF  
                    u5580 156E                      u6460 0073                      u6517 1B51  
                    u6445 1FD2                      u6381 1F6D                      u3981 14B4  
                    u4941 090C                      u4861 1E19                      u4765 1DB7  
                    u5821 0372                      u5741 01E5                      u5661 16DE  
                    u5581 156D                      u6461 0072                      u6390 1F75  
                    u3990 14BC                      u4870 088F                      u4790 1DE5  
                    u5830 0394                      u5670 1768                      u5590 15AE  
                    u6527 1B60                      u6391 1F74                      u6295 1EF8  
                    u3991 14BB                      u5495 1D43                      u4871 088E  
                    u4855 1E0C                      u4791 1DE4                      u4775 1DC8  
                    u4695 0BFD                      u5831 0393                      u5735 01C7  
                    u5671 1767                      u5591 15AD                      u4960 091F  
                    u4880 08A3                      u5920 05F4                      u5840 03A2  
                    u5760 02F9                      u5680 178C                      u6537 1B6E  
                    u4961 091E                      u4881 08A2                      u4785 1DD8  
                    u5921 05F3                      u5905 050F                      u5841 03A1  
                    u5825 036F                      u5761 02F8                      u5681 178B  
                    u4970 0926                      u5930 060C                      u5770 0304  
                    u5690 17A3                      u6547 18FC                      u4971 0925  
                    u4955 090F                      u5931 060B                      u5915 0595  
                    u5835 0390                      u5771 0303                      u5755 02C6  
                    u5691 17A2                      u5940 0626                      u5860 043D  
                    u5780 031F                      u5941 0625                      u5861 043C  
                    u5781 031E                      u5765 02F5                      u6477 0068  
                    u4990 0937                      u5950 063B                      u5870 045E  
                    u5790 0331                      u4991 0936                      u4895 08CB  
                    u5951 063A                      u5871 045D                      u5855 03B1  
                    u5791 0330                      u5695 179F                      u6487 016F  
                    u5960 0643                      u5880 046D                      u6497 19B2  
                    u4985 0929                      u5961 0642                      u5881 046C  
                    u5890 0488                      u5891 0487                      u5875 045A  
                    u5980 0681                      u5981 0680                      u5885 0469  
                    u5990 068C                      u5991 068B                      u5975 064E  
                    u5985 067D         ?_Lcd_Write_String 0070                      _main 0051  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         ___fldiv@new_exp 0050           __end_of_Lcd_Cmd 1905             ___fltol@sign1 0061  
         __end_of___fladd 1525                     ?_main 0070           __end_of___fldiv 2000  
         __end_of___awdiv 1092           __end_of___flneg 18D9           __end_of___awmod 1B47  
         __end_of___flmul 1000           __end_of___flsub 196C           __end_of___fltol 0882  
         __end_of___lldiv 1C0A           ___awdiv@divisor 0077           __end_of___llmod 1AEE  
         __end_of___lwdiv 1A46           __end_of___lwmod 1A02           ___awdiv@counter 0020  
                   _TRISD 0088           __end_of_dpowers 1896                     _scale 0940  
         __end_of_isdigit 18EB                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07FC          __end_of_Lcd_Init 1BA4  
        __end_of_Lcd_Port 1948           __initialization 07FC              __end_of_main 017A  
                  ??_main 00C5                    _ADCON0 001F                    _ADCON1 009F  
        ___llmod@dividend 0024                    ?_scale 003E                    _ADRESH 001E  
                  _ADRESL 009E          ___awdiv@dividend 0079                 ??_Lcd_Cmd 0071  
        __end_of___xxtofl 1D66          __end_of__powers_ 183A                    ___flge 1C0A  
                  ___fleq 0003                 ??___fladd 005A                    ___wmul 196C  
               ??___fldiv 0046                 ??___awdiv 007B                 ??___flneg 0074  
               ??___awmod 0074                 ??___flmul 002C                 ??___flsub 007E  
               ??___fltol 005C                 ??___lldiv 0078                 ??___llmod 0028  
               ??___lwdiv 007A                 ??___lwmod 0074                    _fround 1092  
        ___awdiv@quotient 0022           ___awmod@divisor 0070           ___awmod@counter 0075  
               ??_isdigit 0070                 ??_sprintf 00A5           Lcd_Set_Cursor@a 0077  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0079           Lcd_Set_Cursor@z 0078  
              ___flge@ff1 0070                ___flge@ff2 0074              ___xxtofl@arg 007A  
            ___xxtofl@exp 0079              ___xxtofl@val 0070                ___fleq@ff1 0070  
              ___fleq@ff2 0074   __end_of__initialization 07FC                ___flneg@f1 0070  
              ___fltol@f1 0058            __pcstackCOMMON 0070             __end_of_scale 0C9F  
          _Lcd_Set_Cursor 1A46                __div_to_l_ 0882                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070           __div_to_l_@exp1 0025           __div_to_l_@cntr 0024  
                 ??_scale 0042           __div_to_l_@quot 0020              sprintf@width 00BB  
           __div_to_l_@f1 0070             __div_to_l_@f2 0074         __end_of__Umul8_16 1029  
              __pmaintext 0051                   ?___flge 0070                   ?___fleq 0070  
                 ?___wmul 0070                   ?_fround 003E    __end_of_Lcd_Set_Cursor 1A98  
               ?___xxtofl 0070                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
              __stringtab 1800            _Lcd_Write_Char 1991                   _Lcd_Cmd 18EB  
       __end_of__npowers_ 186E                   ___fladd 129D                   ___fldiv 1E23  
                 ___awdiv 1029                   ___flneg 18CE                   ___awmod 1AEE  
                 ___flmul 0C9F                   ___flsub 1948                   ___fltol 0806  
                 ___lldiv 1BA4                   ___llmod 1A98                   ___lwdiv 1A02  
              _fround$841 004D                _fround$842 0049                   ___lwmod 19C8  
         ?_Lcd_Set_Cursor 0074                   __ptext1 1525                   __ptext2 0940  
                 __ptext3 1AEE                   __ptext4 1029                   __ptext5 18D9  
                 __ptext6 1092                   __ptext7 19C8                   __ptext8 1A02  
                 __ptext9 0C9F               ?__div_to_l_ 0070                   _dpowers 186E  
                 _isdigit 18D9                ??___xxtofl 0074          ___awmod@dividend 0072  
                 main@adc 00DE                   _sprintf 1525    __end_of_Lcd_Write_Char 19C8  
    end_of_initialization 07FC            main@num_huevos 00D8           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                   psplit$0 80027                 Lcd_Port@a 0070  
          __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078  
             ___fladd@grs 0065             ___xxtofl@sign 0078               ___fldiv@grs 0052  
             ___fldiv@rem 004B           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0078  
       Lcd_Write_String@i 0076               ___flmul@grs 0032            __end_of___flge 1CAC  
          __end_of___fleq 0051            __end_of___wmul 1991          _Lcd_Write_String 1905  
       pnum$text1_split_1 0027            __end_of_fround 129D       start_initialization 07FC  
     __end_of__tdiv_to_l_ 1E23           ___llmod@divisor 0020           ___llmod@counter 0029  
                ??___flge 0078                  ??___fleq 0078                  ??___wmul 0074  
               __Umul8_16 1002           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
                ??_fround 0042             sprintf@tmpval 00AF                 ___fladd@a 0056  
               ___fladd@b 0052                fround@prec 0051                 ___fldiv@a 003E  
               ___fldiv@b 0042                 ___flmul@a 0028                 ___flmul@b 0024  
               ___flsub@a 0066                 ___flsub@b 006A                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070  
             sprintf@flag 00B9               sprintf@eexp 00B7               sprintf@fval 00BD  
             sprintf@prec 00C1          ___lwdiv@dividend 0078          ??_Lcd_Set_Cursor 0075  
                ?___fladd 0052                  ?___fldiv 003E                  ?___awdiv 0077  
                ?___flneg 0070                  ?___awmod 0070                  ?___flmul 0024  
                ?___flsub 0066                  ?___fltol 0058                  ?___lldiv 0070  
                ?___llmod 0020                 __npowers_ 183A                ?__Umul8_16 0070  
                ?___lwdiv 0076                  ?___lwmod 0070                 __pstrings 1800  
             __tdiv_to_l_ 1D66              ??__div_to_l_ 0078                  ?_isdigit 0070  
               _scale$843 004C          ___lwdiv@quotient 007B                  ?_sprintf 00A0  
          ___wmul@product 0074                  Lcd_Cmd@a 0073        __end_of__div_to_l_ 0940  
              _ADCON0bits 001F               __stringbase 1805         ___wmul@multiplier 0070  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 1B47                  _Lcd_Port 1926  
__end_of_Lcd_Write_String 1926               ??__Umul8_16 0072        __end_of__stringtab 1806  
             _isdigit$654 0070                sprintf@val 00B3                  ___xxtofl 1CAC  
         ___lwdiv@divisor 0076           ___lwdiv@counter 007D                  __ptext10 1002  
                __ptext11 1D66                  __ptext20 18CE                  __ptext12 0882  
                __ptext21 1C0A                  __ptext13 1CAC                  __ptext22 0003  
                __ptext14 196C                  __ptext23 1E23                  __ptext15 1A98  
                __ptext24 1905                  __ptext16 1BA4                  __ptext25 1991  
                __ptext17 0806                  __ptext26 1A46                  __ptext18 1948  
                __ptext27 1B47                  __ptext19 129D                  __ptext28 18EB  
                __ptext29 1926                  __powers_ 1806                 pnum$text1 0008  
                main@peso 00DA                  isdigit@c 0071                  scale@scl 0050  
      Lcd_Write_Char@temp 0072                 sprintf@ap 00AE          __tdiv_to_l_@exp1 0025  
        __tdiv_to_l_@cntr 0024                 sprintf@sp 00C3          __tdiv_to_l_@quot 0020  
        ___lwmod@dividend 0072          ___lldiv@dividend 0074                 stringcode 1800  
      Lcd_Set_Cursor@temp 007A              ?__tdiv_to_l_ 0070    __Umul8_16@multiplicand 0070  
              _OPTION_REG 0081                  sprintf@c 00C4                  sprintf@f 00A0  
        ___lldiv@quotient 0079           ___lwmod@divisor 0070           ___lwmod@counter 0075  
                stringdir 1800                  stringtab 1800             ___fladd@signs 0062  
            ___fladd@aexp 0063              ___fladd@bexp 0064      __Umul8_16@multiplier 0078  
       __Umul8_16@product 0074  
